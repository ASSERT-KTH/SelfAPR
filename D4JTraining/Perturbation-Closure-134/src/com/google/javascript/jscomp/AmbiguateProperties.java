[REPLACE]^private static final Logger logger ;^81^82^^^^81^82^[REPLACE] private static final Logger logger = Logger.getLogger ( AmbiguateProperties.class.getName (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final List<Node> stringNodesToRename  = null ;^86^^^^^^^[REPLACE] private final List<Node> stringNodesToRename = Lists.newArrayList (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private  Map<String, Property> propertyMap = Maps.newHashMap (  ) ;^90^^^^^^^[REPLACE] private final Map<String, Property> propertyMap = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final Set<String> externedNames ;^93^^^^^^^[REPLACE] private final Set<String> externedNames = Sets.newHashSet (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final Set<String> quotedNames ;^96^^^^^^^[REPLACE] private final Set<String> quotedNames = Sets.newHashSet (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final Map<String, String> renamingMap ;^99^^^^^^^[REPLACE] private final Map<String, String> renamingMap = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private final Map<Integer, String> colorMap ;^102^^^^^^^[REPLACE] private final Map<Integer, String> colorMap = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private static final Comparator<Property> FREQUENCY_COMPARATOR ;^108^109^^^^108^116^[REPLACE] private static final Comparator<Property> FREQUENCY_COMPARATOR = new Comparator<Property> (  )  {^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private BiMap<JSType, Integer> intForType ;^119^^^^^^^[REPLACE] private BiMap<JSType, Integer> intForType = HashBiMap.create (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private Map<JSType, JSTypeBitSet> relatedBitsets  = null ;^125^^^^^^^[REPLACE] private Map<JSType, JSTypeBitSet> relatedBitsets = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^static final  char  SKIP_PREFIX = "JSAbstractCompiler";^134^^^^^^^[REPLACE] static final String SKIP_PREFIX = "JSAbstractCompiler";^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^protected  Map<Property, PropertyGraphNode> nodes = Maps.newHashMap (  ) ;^303^^^^^^^[REPLACE] protected final Map<Property, PropertyGraphNode> nodes = Maps.newHashMap (  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypeBitSet typesInSet  = null ;^340^^^^^^^[REPLACE] JSTypeBitSet typesInSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypeBitSet typesRelatedToSet ;^343^^^^^^^[REPLACE] JSTypeBitSet typesRelatedToSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^int  newName;^552^^^^^^^[REPLACE] String newName;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^short  numOccurrences;^553^^^^^^^[REPLACE] int numOccurrences;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypenew Property ( name )   ) ;^555^^^^^^^[REPLACE] JSTypeBitSet typesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^JSTypeBitSet relatedTypesSet ;^556^^^^^^^[REPLACE] JSTypeBitSet relatedTypesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^private static  long serialVersionUID = 1L;^604^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet  
[REPLACE]^this.compiler =  null;^138^^^^^136^161^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[ADD]^^138^139^^^^136^161^[ADD] this.compiler = compiler; this.reservedCharacters = reservedCharacters;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^this.reservedCharacters =  null;^139^^^^^136^161^[REPLACE] this.reservedCharacters = reservedCharacters;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^JSTypeRegistry r = compiler.getTypeValidator (  ) ;^141^^^^^136^161^[REPLACE] JSTypeRegistry r = compiler.getTypeRegistry (  ) ;^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^invalidatingTypes =  Sets.newHashSet ( null.getNativeType ( JSTypeNative.ALL_TYPE ) , null.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , null.getNativeType ( JSTypeNative.NO_TYPE ) ,^142^143^144^145^^136^161^[REPLACE] invalidatingTypes = Sets.newHashSet ( r.getNativeType ( JSTypeNative.ALL_TYPE ) , r.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) , r.getNativeType ( JSTypeNative.NO_TYPE ) ,^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[ADD]^^142^143^144^^^136^161^[ADD] invalidatingTypes = Sets.newHashSet ( r.getNativeType ( JSTypeNative.ALL_TYPE ) , r.getNativeType ( JSTypeNative.NO_OBJECT_TYPE ) ,^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^157^^^^^136^161^[REPLACE] for  ( TypeMismatch mis : compiler.getTypeValidator (  ) .getMismatches (  )  )  {^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[ADD]^^157^158^159^160^^136^161^[ADD] for  ( TypeMismatch mis : compiler.getTypeValidator (  ) .getMismatches (  )  )  { addInvalidatingType ( mis.first ) ; addInvalidatingType ( mis.second ) ; }^[METHOD] <init> [TYPE] AbstractCompiler,char[]) [PARAMETER] AbstractCompiler compiler char[] reservedCharacters [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry r  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet  [TYPE]  TypeMismatch mis 
[REPLACE]^Property p = propertyMap.get ( oldName ) ;^306^^^^^305^309^[REPLACE] for  ( Property prop : props )  {^[METHOD] <init> [TYPE] Collection) [PARAMETER] Property> props [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  Collection props  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^306^307^308^^^305^309^[ADD] for  ( Property prop : props )  { nodes.put ( prop, new PropertyGraphNode ( prop )  ) ; }^[METHOD] <init> [TYPE] Collection) [PARAMETER] Property> props [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  Collection props  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^this.property =  prop;^399^^^^^398^400^[REPLACE] this.property = property;^[METHOD] <init> [TYPE] AmbiguateProperties$Property) [PARAMETER] Property property [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^this.oldName =  oldName;^559^^^^^558^565^[REPLACE] this.oldName = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( oldName.startsWith ( SKIP_PREFIX )  )  {^562^^^^^558^565^[REPLACE] if  ( name.startsWith ( SKIP_PREFIX )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^skipAmbiguating = false;^563^^^^^558^565^[REPLACE] skipAmbiguating = true;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^super ( numOccurrences ) ;^607^^^^^606^608^[REPLACE] super ( size ) ;^[METHOD] <init> [TYPE] AmbiguateProperties$JSTypeBitSet(int) [PARAMETER] int size [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^607^^^^^606^608^[ADD] super ( size ) ;^[METHOD] <init> [TYPE] AmbiguateProperties$JSTypeBitSet(int) [PARAMETER] int size [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^super ( size ) ;^611^^^^^610^612^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] AmbiguateProperties$JSTypeBitSet() [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  (size  ==  property.numOccurrences )  {^111^^^^^110^115^[REPLACE] if  ( p1.numOccurrences != p2.numOccurrences )  {^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return size - size;^112^^^^^110^115^[REPLACE] return p2.numOccurrences - p1.numOccurrences;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^returnsize - p1.numOccurrences;^112^^^^^110^115^[REPLACE] return p2.numOccurrences - p1.numOccurrences;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return p1.oldName.startsWith ( p2.oldName ) ;^114^^^^^110^115^[REPLACE] return p1.oldName.compareTo ( p2.oldName ) ;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^newType = newType.restrictByNotNullOrUndefined (  ) ; ;^167^^^^^166^179^[REPLACE] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^167^^^^^166^179^[ADD] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^168^^^^^166^179^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^168^169^170^171^^166^179^[ADD] if  ( type instanceof UnionType )  { for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  { addInvalidatingType ( alt ) ; }^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^169^^^^^166^179^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^invalidatingTypes.contains ( type ) ;^174^^^^^166^179^[REPLACE] invalidatingTypes.add ( type ) ;^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^type   ;^175^^^^^166^179^[REPLACE] ObjectType objType = ObjectType.cast ( type ) ;^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! objType instanceof InstanceObjectType )  {^176^^^^^166^179^[REPLACE] if  ( objType instanceof InstanceObjectType )  {^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^invalidatingTypes.add ( objType .isUnknownType (  )   ) ;^177^^^^^166^179^[REPLACE] invalidatingTypes.add ( objType.getImplicitPrototype (  )  ) ;^[METHOD] addInvalidatingType [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedBitsets.get ( type ) ;^182^^^^^181^183^[REPLACE] return renamingMap;^[METHOD] getRenamingMap [TYPE] Map [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !externedNames.contains ( name )  )  {^187^^^^^186^193^[REPLACE] if  ( intForType.containsKey ( type )  )  {^[METHOD] getIntForType [TYPE] int [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int newInt  numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return intForType.get ( type ) .join (  ) ;^188^^^^^186^193^[REPLACE] return intForType.get ( type ) .intValue (  ) ;^[METHOD] getIntForType [TYPE] int [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int newInt  numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int newInt = intForType.size (  )  *  2 + 1;^190^^^^^186^193^[REPLACE] int newInt = intForType.size (  )  + 1;^[METHOD] getIntForType [TYPE] int [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int newInt  numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^intersectRelatedTypesOnNonUnion ( type, relatedTypes ) ;^191^^^^^186^193^[REPLACE] intForType.put ( type, newInt ) ;^[METHOD] getIntForType [TYPE] int [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int newInt  numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return size;^192^^^^^186^193^[REPLACE] return newInt;^[METHOD] getIntForType [TYPE] int [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  quotedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int newInt  numOccurrences  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^NodeTraversal.traverse ( compiler, n, new ProcessExterns (  )  ) ;^196^^^^^195^248^[REPLACE] NodeTraversal.traverse ( compiler, externs, new ProcessExterns (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return Lists.<GraphNode<Property, Void>>newArrayList ( nodes.values (  )  ) ;^197^^^^^195^248^[REPLACE] NodeTraversal.traverse ( compiler, root, new ProcessProperties (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Set<String> reservedNames = new HashSet<String> ( externedNames.size (  )  + 2 + quotedNames.size (  )  + 2 ) ;^199^200^^^^195^248^[REPLACE] Set<String> reservedNames = new HashSet<String> ( externedNames.size (  )  + quotedNames.size (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^199^200^^^^195^248^[ADD] Set<String> reservedNames = new HashSet<String> ( externedNames.size (  )  + quotedNames.size (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^reservedNames.contains ( externedNames ) ;^201^^^^^195^248^[REPLACE] reservedNames.addAll ( externedNames ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^reservedNames.contains ( quotedNames ) ;^202^^^^^195^248^[REPLACE] reservedNames.addAll ( quotedNames ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^202^^^^^195^248^[ADD] reservedNames.addAll ( quotedNames ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int numRenamedPropertyNames = 0 - 0;^204^^^^^195^248^[REPLACE] int numRenamedPropertyNames = 0;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int numSkippedPropertyNames = 4;^205^^^^^195^248^[REPLACE] int numSkippedPropertyNames = 0;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property p = propertyMap.get ( oldName ) ;^206^^^^^195^248^[REPLACE] Set<Property> propsByFreq = new TreeSet<Property> ( FREQUENCY_COMPARATOR ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( skipAmbiguating )  {^208^^^^^195^248^[REPLACE] if  ( !p.skipAmbiguating )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^reservedNames.addAll ( p.oldName ) ;^213^^^^^208^214^[REPLACE] reservedNames.add ( p.oldName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^propsByFreq.addAll ( p ) ;^210^^^^^195^248^[REPLACE] propsByFreq.add ( p ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^210^^^^^195^248^[ADD] propsByFreq.add ( p ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property p = propertyMap.get ( oldName ) ;^207^^^^^195^248^[REPLACE] for  ( Property p : propertyMap.values (  )  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^PropertyGraph graph = new PropertyGraph ( Lists.newLinkedList ( this )  ) ;^217^^^^^195^248^[REPLACE] PropertyGraph graph = new PropertyGraph ( Lists.newLinkedList ( propsByFreq )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^218^219^^^^195^248^[ADD] GraphColoring<Property, Void> coloring = new GreedyGraphColoring<Property, Void> ( graph, FREQUENCY_COMPARATOR ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int numNewPropertyNames = false.color (  ) ;^220^^^^^195^248^[REPLACE] int numNewPropertyNames = coloring.color (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^NameGenerator nameGen = new NameGenerator ( null, "", reservedCharacters ) ;^222^223^^^^195^248^[REPLACE] NameGenerator nameGen = new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( int i = 3; i  <=  numSkippedPropertyNames; ++i )  {^224^^^^^195^248^[REPLACE] for  ( int i = 0; i < numNewPropertyNames; ++i )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^colorMap.put ( size, nameGen.generateNextName (  )  ) ;^225^^^^^195^248^[REPLACE] colorMap.put ( i, nameGen.generateNextName (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^225^^^^^195^248^[ADD] colorMap.put ( i, nameGen.generateNextName (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^computeRelatedTypes ( alt ) ;^225^^^^^195^248^[REPLACE] colorMap.put ( i, nameGen.generateNextName (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( int i = 0 % 0; i < numNewPropertyNames; ++i )  {^224^^^^^195^248^[REPLACE] for  ( int i = 0; i < numNewPropertyNames; ++i )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^node.getValue (  ) .newName =  colorMap.get ( this.getAnnotation (  ) .hashCode (  )  ) ;^228^^^^^195^248^[REPLACE] node.getValue (  ) .newName = colorMap.get ( node.getAnnotation (  ) .hashCode (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( PropertyGraphNode node : nodes.values (  )  )  { node.setAnnotation ( null ) ;^227^^^^^195^248^[REPLACE] for  ( GraphNode<Property, Void> node : graph.getNodes (  )  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^227^228^229^230^^195^248^[ADD] for  ( GraphNode<Property, Void> node : graph.getNodes (  )  )  { node.getValue (  ) .newName = colorMap.get ( node.getAnnotation (  ) .hashCode (  )  ) ; renamingMap.put ( node.getValue (  ) .oldName, node.getValue (  ) .newName ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  (  p.newName != null )  {^236^^^^^195^248^[REPLACE] if  ( p != null && p.newName != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^Preconditions.checkState ( oldName.equals ( p.oldName )  ) ;n.setString ( p.newName ) ;compiler.reportCodeChange (  ) ;^236^237^238^239^240^195^248^[ADD] if  ( p != null && p.newName != null )  { Preconditions.checkState ( oldName.equals ( p.oldName )  ) ; if  ( !p.newName.equals ( oldName )  )  { n.setString ( p.newName ) ; compiler.reportCodeChange (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !p.newName.equals ( newName )  )  {^238^^^^^195^248^[REPLACE] if  ( !p.newName.equals ( oldName )  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^238^239^240^241^^195^248^[ADD] if  ( !p.newName.equals ( oldName )  )  { n.setString ( p.newName ) ; compiler.reportCodeChange (  ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^n.setString ( prop.newName ) ;^239^^^^^195^248^[REPLACE] n.setString ( p.newName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^compiler .getTypeRegistry (  )  ;^240^^^^^195^248^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^n.setString ( property.newName ) ;^239^^^^^195^248^[REPLACE] n.setString ( p.newName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^compiler.getTypeRegistry (  ) ;^240^^^^^195^248^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( Node n : stringNodesToRename )  { String oldName = n.getString (  ) ;^233^^^^^195^248^[REPLACE] for  ( Node n : stringNodesToRename )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^String oldName = externs.getString (  ) ;^234^^^^^195^248^[REPLACE] String oldName = n.getString (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property p = propertyMap.get ( newName ) ;^235^^^^^195^248^[REPLACE] Property p = propertyMap.get ( oldName ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^logger.info ( "Collapsed " + numRenamedPropertyNames + " properties into " + numNewPropertyNames + " and skipped renaming " + numSkippedPropertyNames +oldName ) ;^245^246^247^^^195^248^[REPLACE] logger.info ( "Collapsed " + numRenamedPropertyNames + " properties into " + numNewPropertyNames + " and skipped renaming " + numSkippedPropertyNames + " properties." ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  GraphColoring coloring  [TYPE]  BiMap intForType  [TYPE]  Node externs  n  root  [TYPE]  NameGenerator nameGen  [TYPE]  GraphNode node  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraph graph  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !externedNames.contains ( name )  )  {^253^^^^^250^259^[REPLACE] if  ( relatedBitsets.containsKey ( type )  )  {^[METHOD] getRelatedTypesOnNonUnion [TYPE] BitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return ;^256^257^^^^250^259^[REPLACE] throw new RuntimeException ( "Related types should have been computed for" + " type: " + type + " but have not been." ) ;^[METHOD] getRelatedTypesOnNonUnion [TYPE] BitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^256^257^258^^^250^259^[ADD] throw new RuntimeException ( "Related types should have been computed for" + " type: " + type + " but have not been." ) ; }^[METHOD] getRelatedTypesOnNonUnion [TYPE] BitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedBitsets.containsKey ( type ) ;^254^^^^^250^259^[REPLACE] return relatedBitsets.get ( type ) ;^[METHOD] getRelatedTypesOnNonUnion [TYPE] BitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^263^^^^^262^300^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^type = type.restrictByNotNullOrUndefined (  ) ;^263^264^265^266^267^262^300^[ADD] if  ( type instanceof UnionType )  { type = type.restrictByNotNullOrUndefined (  ) ; if  ( type instanceof UnionType )  { for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  { computeRelatedTypes ( alt ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^265^^^^^262^300^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedTypes;^269^^^^^262^300^[REPLACE] return;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^266^^^^^262^300^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^newType = newType.restrictByNotNullOrUndefined (  ) ; ;^264^^^^^262^300^[REPLACE] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^265^266^267^268^^262^300^[ADD] if  ( type instanceof UnionType )  { for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  { computeRelatedTypes ( alt ) ; }^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^264^^^^^262^300^[ADD] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( relatedBitsets.get ( type )  )  {^273^^^^^262^300^[REPLACE] if  ( relatedBitsets.containsKey ( type )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedTypes;^275^^^^^262^300^[REPLACE] return;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSTypeBitSet related = new JSTypeBitSet ( intForType.inverse (  )  ) ;^278^^^^^262^300^[REPLACE] JSTypeBitSet related = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^relatedBitsets.put ( type, related ) ;^278^279^^^^262^300^[ADD] JSTypeBitSet related = new JSTypeBitSet ( intForType.size (  )  ) ; relatedBitsets.put ( type, related ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^relatedBitsets.put ( type, typesSet ) ;^279^^^^^262^300^[REPLACE] relatedBitsets.put ( type, related ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^ObjectType parentType = type.restrictByNotNullOrUndefined (  ) ;^281^^^^^262^300^[REPLACE] ObjectType parentType = type.toObjectType (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^281^^^^^262^300^[ADD] ObjectType parentType = type.toObjectType (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^while  ( itype == null )  {^282^^^^^262^300^[REPLACE] while  ( parentType != null )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^parentType =  itype.getImplicitPrototype (  ) ;^284^^^^^262^300^[REPLACE] parentType = parentType.getImplicitPrototype (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^284^^^^^262^300^[ADD] parentType = parentType.getImplicitPrototype (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^FunctionType constructor = true;^287^^^^^262^300^[REPLACE] FunctionType constructor = null;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof FunctionType )  {^288^^^^^262^300^[REPLACE] if  ( type instanceof FunctionType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REMOVE]^if  ( type instanceof FunctionPrototypeType )  {     constructor =  (  ( FunctionPrototypeType )   ( type )  ) .getOwnerFunction (  ) ; }else {     constructor = type.toObjectType (  ) .getConstructor (  ) ; }^288^^^^^262^300^[REMOVE] ^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^} else if  ( ! type instanceof FunctionPrototypeType )  {^290^^^^^262^300^[REPLACE] } else if  ( type instanceof FunctionPrototypeType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =  null.toObjectType (  ) .getConstructor (  ) ;^293^^^^^290^294^[REPLACE] constructor = type.toObjectType (  ) .getConstructor (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =   (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^291^^^^^262^300^[REPLACE] constructor =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^291^^^^^262^300^[ADD] constructor =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =  null.toObjectType (  ) .getConstructor (  ) ;^293^^^^^262^300^[REPLACE] constructor = type.toObjectType (  ) .getConstructor (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^293^^^^^262^300^[ADD] constructor = type.toObjectType (  ) .getConstructor (  ) ;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^constructor =   ( FunctionType )  type;^289^^^^^262^300^[REPLACE] constructor =  ( FunctionType )  type;^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^}  else {^290^^^^^262^300^[REPLACE] } else if  ( type instanceof FunctionPrototypeType )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( constructor == null )  {^295^^^^^262^300^[REPLACE] if  ( constructor != null )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( ObjectType itype : constructor.getAllImplementedInterfaces (  )  )  { related.set ( getIntForType ( itype )  ) ;^296^^^^^262^300^[REPLACE] for  ( ObjectType itype : constructor.getAllImplementedInterfaces (  )  )  {^[METHOD] computeRelatedTypes [TYPE] void [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  FunctionType constructor  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType itype  parentType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return new PropertySubGraph (  ) ;^312^^^^^311^313^[REPLACE] return Lists.<GraphNode<Property, Void>>newArrayList ( nodes.values (  )  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return Joiner.on ( " && " ) .join ( types ) ;^316^^^^^315^317^[REPLACE] return nodes.get ( property ) ;^[METHOD] getNode [TYPE] GraphNode [PARAMETER] Property property [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return  new Property ( name )  ;^320^^^^^319^321^[REPLACE] return new PropertySubGraph (  ) ;^[METHOD] newSubGraph [TYPE] SubGraph [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( PropertyGraphNode node : nodes.values (  )  )  { node.setAnnotation ( null ) ;^324^^^^^323^327^[REPLACE] for  ( PropertyGraphNode node : nodes.values (  )  )  {^[METHOD] clearNodeAnnotations [TYPE] void [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  PropertyGraphNode node  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return property.numOccurrences;^330^^^^^329^331^[REPLACE] return value.numOccurrences;^[METHOD] getWeight [TYPE] int [PARAMETER] Property value [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( typesRelatedToSet.intersects ( property.typesSet )  )  {^352^^^^^351^356^[REPLACE] if  ( typesRelatedToSet.intersects ( prop.typesSet )  )  {^[METHOD] isIndependentOf [TYPE] boolean [PARAMETER] Property prop [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^352^353^354^^^351^356^[ADD] if  ( typesRelatedToSet.intersects ( prop.typesSet )  )  { return false; }^[METHOD] isIndependentOf [TYPE] boolean [PARAMETER] Property prop [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return true;^353^^^^^351^356^[REPLACE] return false;^[METHOD] isIndependentOf [TYPE] boolean [PARAMETER] Property prop [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return !prop.relatedTypesSet.or ( typesInSet ) ;^355^^^^^351^356^[REPLACE] return !prop.relatedTypesSet.intersects ( typesInSet ) ;^[METHOD] isIndependentOf [TYPE] boolean [PARAMETER] Property prop [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^typesInSet.or ( property.typesSet ) ;^364^^^^^363^366^[REPLACE] typesInSet.or ( prop.typesSet ) ;^[METHOD] addNode [TYPE] void [PARAMETER] Property prop [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^typesRelatedToSet.or ( property.relatedTypesSet ) ;^365^^^^^363^366^[REPLACE] typesRelatedToSet.or ( prop.relatedTypesSet ) ;^[METHOD] addNode [TYPE] void [PARAMETER] Property prop [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSTypeBitSet relatedTypes = new JSTypeBitSet ( intForType.inverse (  )  ) ;^373^^^^^372^382^[REPLACE] JSTypeBitSet relatedTypes = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^374^^^^^372^382^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^intersectRelatedTypesOnNonUnion ( type, typesSet ) ;^379^^^^^372^382^[REPLACE] intersectRelatedTypesOnNonUnion ( type, relatedTypes ) ;^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^375^^^^^372^382^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return typesSet;^381^^^^^372^382^[REPLACE] return relatedTypes;^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^390^^^^^388^391^[REPLACE] relatedTypes.or ( getRelatedTypesOnNonUnion ( type )  ) ;^[METHOD] intersectRelatedTypesOnNonUnion [TYPE] void [PARAMETER] JSType type JSTypeBitSet relatedTypes [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^390^^^^^388^391^[ADD] relatedTypes.or ( getRelatedTypesOnNonUnion ( type )  ) ;^[METHOD] intersectRelatedTypesOnNonUnion [TYPE] void [PARAMETER] JSType type JSTypeBitSet relatedTypes [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedBitsets.get ( type ) ;^403^^^^^402^404^[REPLACE] return property;^[METHOD] getValue [TYPE] AmbiguateProperties$Property [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return Joiner.on ( " && " ) .join ( types ) ;^408^^^^^407^409^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^annotation =  null;^412^^^^^411^413^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^412^^^^^411^413^[ADD] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( child.getType (  )   !=  Token.STRING )  {^429^^^^^419^435^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^externedNames.add ( child.getString (  )  ) ;^429^430^431^^^419^435^[ADD] if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^externedNames.add ( child.getType (  )  ) ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( Node child = n.getFirstChild (  ) ; child != null;^426^^^^^419^435^[REPLACE] for  ( Node child = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^426^427^428^429^430^419^435^[ADD] for  ( Node child = n.getFirstChild (  ) ; child != null; child = child.getNext (  ) .getNext (  )  )  { if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^430^^^^^419^435^[ADD] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^key = key.getNext (  ) .getNext (  )  )  {  ;^428^^^^^419^435^[REPLACE] child = child.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^428^429^430^^^419^435^[ADD] child = child.getNext (  ) .getNext (  )  )  { if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node dest = parent.getFirstChild (  ) .get (  ) ;^422^^^^^419^435^[REPLACE] Node dest = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( Node child = parent.getFirstChild (  ) ;^426^^^^^419^435^[REPLACE] for  ( Node child = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  dest  n  parent  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( key.getType (  )   ||  Token.STRING )  {^455^^^^^440^477^[REPLACE] if  ( key.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !key.setString (  )  )  {^456^^^^^440^477^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( parent.getString (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^462^^^^^456^463^[ADD] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( parent.getType (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( key.isQuotedString (  )  )  {^456^^^^^440^477^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.addAll ( key.getString (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( parent .setString ( SKIP_PREFIX )   ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( propNode .getLastChild (  )   ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( child .getJSType ( n )    ||  Token.STRING )  {^472^^^^^440^477^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.addAll ( child.getString (  )  ) ;^473^^^^^440^477^[REPLACE] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( propNode.getType (  )  ) ;^473^^^^^440^477^[REPLACE] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( Nodeparent = n.getFirstChild (  ) ; key == null;^451^^^^^440^477^[REPLACE] for  ( Node key = n.getFirstChild (  ) ; key != null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( key.getType (  )   ||  Token.STRING )  {^455^^^^^451^465^[REPLACE] if  ( key.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( key.isQuotedString (  )  )  {^456^^^^^451^465^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( parent.getType (  )  ) ;^462^^^^^451^465^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^457^^^^^451^465^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^457^458^^^^451^465^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( parent.getString (  )  ) ;^462^^^^^451^465^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^462^^^^^451^465^[ADD] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^quotedNames.add ( key.getType (  )  ) ;^462^^^^^451^465^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( n .getLastChild (  )   ) ;^457^^^^^451^465^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^457^^^^^451^465^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^key =  parent.getNext (  ) .getNext (  )  )  {^452^^^^^440^477^[REPLACE] key = key.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node propNode = propNode.getFirstChild (  ) .getNext (  ) ;^443^^^^^440^477^[REPLACE] Node propNode = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^444^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( Node key = propNode.getLastChild (  ) ; key != null;^451^^^^^440^477^[REPLACE] for  ( Node key = n.getFirstChild (  ) ; key != null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^451^452^^^^440^477^[ADD] for  ( Node key = n.getFirstChild (  ) ; key != null; key = key.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jstype = getJSType ( n .getLastChild (  )   ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^457^^^^^440^477^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node child = propNode.getLastChild (  ) ;^471^^^^^440^477^[REPLACE] Node child = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^471^^^^^440^477^[ADD] Node child = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jstype  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node child  key  n  parent  propNode  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^String name = n .setString ( oldName )  ;^487^^^^^486^492^[REPLACE] String name = n.getString (  ) ;^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !externedNames.addAll ( name )  )  {^488^^^^^486^492^[REPLACE] if  ( !externedNames.contains ( name )  )  {^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^stringNodesToRename.add ( n ) ;recordProperty ( name, type ) ;^488^489^490^491^^486^492^[ADD] if  ( !externedNames.contains ( name )  )  { stringNodesToRename.add ( n ) ; recordProperty ( name, type ) ; }^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^stringNodesToRename .addAll ( false )  ;^489^^^^^486^492^[REPLACE] stringNodesToRename.add ( n ) ;^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^recordProperty ( oldName, type ) ;^490^^^^^486^492^[REPLACE] recordProperty ( name, type ) ;^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^490^^^^^486^492^[ADD] recordProperty ( name, type ) ;^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  NodeTraversal t  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property prop = getProperty ( oldName ) ;^495^^^^^494^498^[REPLACE] Property prop = getProperty ( name ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^495^496^^^^494^498^[ADD] Property prop = getProperty ( name ) ; prop.addType ( type ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^prop.addNonUnionType ( type ) ;^496^^^^^494^498^[REPLACE] prop.addType ( type ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return property;^497^^^^^494^498^[REPLACE] return prop;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^503^^^^^502^520^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! type instanceof UnionType )  {^505^^^^^502^520^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !externedNames.contains ( name )  )  {^507^^^^^502^520^[REPLACE] if  ( isInvalidatingType ( alt )  )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return false;^508^^^^^502^520^[REPLACE] return true;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return true;^511^^^^^502^520^[REPLACE] return false;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^506^^^^^502^520^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REMOVE]^if  ( relatedBitsets.containsKey ( type )  )  {     return ; }^507^^^^^502^520^[REMOVE] ^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^newType = newType.restrictByNotNullOrUndefined (  ) ; ;^504^^^^^502^520^[REPLACE] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^type   ;^514^^^^^502^520^[REPLACE] ObjectType objType = ObjectType.cast ( type ) ;^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return objType == null || invalidatingTypes.add ( objType ) || !objType.hasReferenceName (  ) ||  ( objType.isNamedType (  )  && objType.isUnknownType (  )  )^515^516^517^518^^502^520^[REPLACE] return objType == null || invalidatingTypes.contains ( objType ) || !objType.hasReferenceName (  ) ||  ( objType.isNamedType (  )  && objType.isUnknownType (  )  )^[METHOD] isInvalidatingType [TYPE] boolean [PARAMETER] JSType type [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  type  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  ObjectType objType  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Property prop = propertyMap.get ( oldName ) ;^523^^^^^522^529^[REPLACE] Property prop = propertyMap.get ( name ) ;^[METHOD] getProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( prop != true )  {^524^^^^^522^529^[REPLACE] if  ( prop == null )  {^[METHOD] getProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^prop =  new Property ( oldName ) ;^525^^^^^522^529^[REPLACE] prop = new Property ( name ) ;^[METHOD] getProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^prop =  new Property ( null ) ;^525^^^^^522^529^[REPLACE] prop = new Property ( name ) ;^[METHOD] getProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return property;^528^^^^^522^529^[REPLACE] return prop;^[METHOD] getProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^JSType jsType = n.getType (  ) ;^536^^^^^535^547^[REPLACE] JSType jsType = n.getJSType (  ) ;^[METHOD] getJSType [TYPE] JSType [PARAMETER] Node n [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jsType  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( jsType != this  )  {^537^^^^^535^547^[REPLACE] if  ( jsType == null )  {^[METHOD] getJSType [TYPE] JSType [PARAMETER] Node n [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jsType  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedBitsets.get ( type ) ;^545^^^^^535^547^[REPLACE] return jsType;^[METHOD] getJSType [TYPE] JSType [PARAMETER] Node n [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jsType  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return compiler .getTypeValidator (  )  .getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^542^543^^^^535^547^[REPLACE] return compiler.getTypeRegistry (  ) .getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] getJSType [TYPE] JSType [PARAMETER] Node n [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jsType  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return compiler.getTypeValidator (  ) .getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^542^543^^^^535^547^[REPLACE] return compiler.getTypeRegistry (  ) .getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] getJSType [TYPE] JSType [PARAMETER] Node n [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType jsType  [TYPE]  BiMap intForType  [TYPE]  Node n  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !p.skipAmbiguating )  {^569^^^^^568^585^[REPLACE] if  ( skipAmbiguating )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedTypes;^570^^^^^568^585^[REPLACE] return;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! newType instanceof UnionType )  {^575^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! newType instanceof UnionType )  {^577^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^577^578^579^580^^568^585^[ADD] if  ( newType instanceof UnionType )  { for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ; }^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedTypes;^581^^^^^568^585^[REPLACE] return;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^578^^^^^568^585^[REPLACE] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^type = type.restrictByNotNullOrUndefined (  ) ; ;^576^^^^^568^585^[REPLACE] newType = newType.restrictByNotNullOrUndefined (  ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^576^^^^^568^585^[ADD] newType = newType.restrictByNotNullOrUndefined (  ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( ! alt instanceof UnionType )  {^577^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^addNonUnionType ( alt ) ;^584^^^^^568^585^[REPLACE] addNonUnionType ( newType ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType alt  newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( skipAmbiguating && isInvalidatingType ( newType )  )  {^588^^^^^587^599^[REPLACE] if  ( skipAmbiguating || isInvalidatingType ( newType )  )  {^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^588^589^590^591^^587^599^[ADD] if  ( skipAmbiguating || isInvalidatingType ( newType )  )  { skipAmbiguating = true; return; }^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^skipAmbiguating = false;^589^^^^^587^599^[REPLACE] skipAmbiguating = true;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return relatedTypes;^590^^^^^587^599^[REPLACE] return;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^589^590^^^^587^599^[ADD] skipAmbiguating = true; return;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^Node dest = n.getFirstChild (  ) .getNext (  ) ;^593^^^^^587^599^[REPLACE] int typeInt = getIntForType ( newType ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^593^^^^^587^599^[ADD] int typeInt = getIntForType ( newType ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( !typesSet.set ( typeInt )  )  {^594^^^^^587^599^[REPLACE] if  ( !typesSet.get ( typeInt )  )  {^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^ObjectType objType = ObjectType.cast ( type ) ;^595^^^^^587^599^[REPLACE] computeRelatedTypes ( newType ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^typesSet.set ( size ) ;^596^^^^^587^599^[REPLACE] typesSet.set ( typeInt ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^596^^^^^587^599^[ADD] typesSet.set ( typeInt ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^relatedTypes.or ( getRelatedTypesOnNonUnion ( type )  ) ;^597^^^^^587^599^[REPLACE] relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[ADD]^^597^^^^^587^599^[ADD] relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  JSType newType  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int from = 1;^619^^^^^618^627^[REPLACE] int from = 0;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^int current = 0 % 0;^620^^^^^618^627^[REPLACE] int current = 0;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^String name = n.getString (  ) ;^621^^^^^618^627^[REPLACE] List<String> types = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^while  ( -1  ==   ( current = nextSetBit ( from )  )  )  {^622^^^^^618^627^[REPLACE] while  ( -1 !=  ( current = nextSetBit ( from )  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^from = current +typeInt;^624^^^^^618^627^[REPLACE] from = current + 1;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^while  ( -1 !=   ( current^622^^^^^618^627^[REPLACE] while  ( -1 !=  ( current = nextSetBit ( from )  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^from =typeInt + 1 + 0;^624^^^^^618^627^[REPLACE] from = current + 1;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^return Joiner.on ( " && " )  .toString (  )  ;^626^^^^^618^627^[REPLACE] return Joiner.on ( " && " ) .join ( types ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AmbiguateProperties 1 PropertyGraph PropertySubGraph PropertyGraphNode ProcessExterns ProcessProperties Property JSTypeBitSet   [TYPE]  Set externedNames  invalidatingTypes  propsByFreq  quotedNames  reservedNames  [TYPE]  BiMap intForType  [TYPE]  String SKIP_PREFIX  name  newName  oldName  [TYPE]  Logger logger  [TYPE]  Annotation annotation  data  [TYPE]  int current  from  i  newInt  numNewPropertyNames  numOccurrences  numRenamedPropertyNames  numSkippedPropertyNames  size  typeInt  [TYPE]  long serialVersionUID  [TYPE]  char[] reservedCharacters  [TYPE]  Comparator FREQUENCY_COMPARATOR  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  List stringNodesToRename  types  [TYPE]  Map colorMap  nodes  propertyMap  relatedBitsets  renamingMap  [TYPE]  Property p  p1  p2  prop  property  value  [TYPE]  JSTypeBitSet related  relatedTypes  relatedTypesSet  typesInSet  typesRelatedToSet  typesSet 
[REPLACE]^if  ( p1.numOccurrences  ==  p2.numOccurrences )  {^111^^^^^110^115^[REPLACE] if  ( p1.numOccurrences != p2.numOccurrences )  {^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Property p1  p2 
[REPLACE]^return p2.numOccurrences  ;^112^^^^^110^115^[REPLACE] return p2.numOccurrences - p1.numOccurrences;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Property p1  p2 
[REPLACE]^return0 - p1.numOccurrences;^112^^^^^110^115^[REPLACE] return p2.numOccurrences - p1.numOccurrences;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Property p1  p2 
[REPLACE]^return p2.numOccurrences - p1.numOccurrences;^114^^^^^110^115^[REPLACE] return p1.oldName.compareTo ( p2.oldName ) ;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Property p1  p2 
[REPLACE]^protected final Map<Property, PropertyGraphNode> nodes ;^303^^^^^^^[REPLACE] protected final Map<Property, PropertyGraphNode> nodes = Maps.newHashMap (  ) ;^[METHOD] compare [TYPE] int [PARAMETER] Property p1 Property p2 [CLASS] PropertyGraph   [TYPE]  boolean false  true  [TYPE]  Property p1  p2 
[REPLACE]^for  ( Property prop : props )  { nodes.put ( prop, new PropertyGraphNode ( prop )  ) ;^306^^^^^305^309^[REPLACE] for  ( Property prop : props )  {^[METHOD] <init> [TYPE] Collection) [PARAMETER] Property> props [CLASS] PropertyGraph   [TYPE]  Collection props  [TYPE]  boolean false  true  [TYPE]  Map nodes  [TYPE]  Property prop 
[REPLACE]^return new PropertySubGraph (  ) ;^312^^^^^311^313^[REPLACE] return Lists.<GraphNode<Property, Void>>newArrayList ( nodes.values (  )  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] PropertyGraph   [TYPE]  Map nodes  [TYPE]  boolean false  true 
[REPLACE]^return nodes .put ( true , 0 )  ;^316^^^^^315^317^[REPLACE] return nodes.get ( property ) ;^[METHOD] getNode [TYPE] GraphNode [PARAMETER] Property property [CLASS] PropertyGraph   [TYPE]  Map nodes  [TYPE]  Property property  [TYPE]  boolean false  true 
[REPLACE]^return  new PropertyGraphNode ( prop )  ;^320^^^^^319^321^[REPLACE] return new PropertySubGraph (  ) ;^[METHOD] newSubGraph [TYPE] SubGraph [PARAMETER] [CLASS] PropertyGraph   [TYPE]  Map nodes  [TYPE]  boolean false  true 
[REPLACE]^for  ( PropertyGraphNode node : nodes.values (  )  )  { node.setAnnotation ( null ) ;^324^^^^^323^327^[REPLACE] for  ( PropertyGraphNode node : nodes.values (  )  )  {^[METHOD] clearNodeAnnotations [TYPE] void [PARAMETER] [CLASS] PropertyGraph   [TYPE]  Map nodes  [TYPE]  PropertyGraphNode node  [TYPE]  boolean false  true 
[ADD]^^324^325^326^^^323^327^[ADD] for  ( PropertyGraphNode node : nodes.values (  )  )  { node.setAnnotation ( null ) ; }^[METHOD] clearNodeAnnotations [TYPE] void [PARAMETER] [CLASS] PropertyGraph   [TYPE]  Map nodes  [TYPE]  PropertyGraphNode node  [TYPE]  boolean false  true 
[REPLACE]^return nodes.get ( property ) ;^330^^^^^329^331^[REPLACE] return value.numOccurrences;^[METHOD] getWeight [TYPE] int [PARAMETER] Property value [CLASS] PropertyGraph   [TYPE]  Map nodes  [TYPE]  Property value  [TYPE]  boolean false  true 
[REPLACE]^JSTypeBitSet typesInSet ;^340^^^^^^^[REPLACE] JSTypeBitSet typesInSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] getWeight [TYPE] int [PARAMETER] Property value [CLASS] PropertySubGraph   [TYPE]  Map nodes  [TYPE]  Property value  [TYPE]  boolean false  true 
[REPLACE]^JSTypeBitSet typesRelatedToSet  = null ;^343^^^^^^^[REPLACE] JSTypeBitSet typesRelatedToSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] getWeight [TYPE] int [PARAMETER] Property value [CLASS] PropertySubGraph   [TYPE]  Map nodes  [TYPE]  Property value  [TYPE]  boolean false  true 
[REPLACE]^if  ( typesRelatedToSet .BitSet ( null )   )  {^352^^^^^351^356^[REPLACE] if  ( typesRelatedToSet.intersects ( prop.typesSet )  )  {^[METHOD] isIndependentOf [TYPE] boolean [PARAMETER] Property prop [CLASS] PropertySubGraph   [TYPE]  Property prop  [TYPE]  JSTypeBitSet typesInSet  typesRelatedToSet  [TYPE]  boolean false  true 
[REPLACE]^return true;^353^^^^^351^356^[REPLACE] return false;^[METHOD] isIndependentOf [TYPE] boolean [PARAMETER] Property prop [CLASS] PropertySubGraph   [TYPE]  Property prop  [TYPE]  JSTypeBitSet typesInSet  typesRelatedToSet  [TYPE]  boolean false  true 
[REPLACE]^return !prop.relatedTypesSet.or ( typesInSet ) ;^355^^^^^351^356^[REPLACE] return !prop.relatedTypesSet.intersects ( typesInSet ) ;^[METHOD] isIndependentOf [TYPE] boolean [PARAMETER] Property prop [CLASS] PropertySubGraph   [TYPE]  Property prop  [TYPE]  JSTypeBitSet typesInSet  typesRelatedToSet  [TYPE]  boolean false  true 
[REPLACE]^typesInSet .intersects ( this )  ;^364^^^^^363^366^[REPLACE] typesInSet.or ( prop.typesSet ) ;^[METHOD] addNode [TYPE] void [PARAMETER] Property prop [CLASS] PropertySubGraph   [TYPE]  Property prop  [TYPE]  JSTypeBitSet typesInSet  typesRelatedToSet  [TYPE]  boolean false  true 
[REPLACE]^typesRelatedToSet.intersects ( prop.relatedTypesSet ) ;^365^^^^^363^366^[REPLACE] typesRelatedToSet.or ( prop.relatedTypesSet ) ;^[METHOD] addNode [TYPE] void [PARAMETER] Property prop [CLASS] PropertySubGraph   [TYPE]  Property prop  [TYPE]  JSTypeBitSet typesInSet  typesRelatedToSet  [TYPE]  boolean false  true 
[REMOVE]^intersectRelatedTypesOnNonUnion ( alt, relatedTypes ) ;^365^^^^^363^366^[REMOVE] ^[METHOD] addNode [TYPE] void [PARAMETER] Property prop [CLASS] PropertySubGraph   [TYPE]  Property prop  [TYPE]  JSTypeBitSet typesInSet  typesRelatedToSet  [TYPE]  boolean false  true 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  { intersectRelatedTypesOnNonUnion ( alt, relatedTypes ) ;^373^^^^^372^382^[REPLACE] JSTypeBitSet relatedTypes = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType alt  type  [TYPE]  boolean false  true 
[ADD]^^373^^^^^372^382^[ADD] JSTypeBitSet relatedTypes = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType alt  type  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! type instanceof UnionType )  {^374^^^^^372^382^[REPLACE] if  ( type instanceof UnionType )  {^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType alt  type  [TYPE]  boolean false  true 
[REPLACE]^intersectRelatedTypesOnNonUnion ( alt, relatedTypes ) ;^379^^^^^372^382^[REPLACE] intersectRelatedTypesOnNonUnion ( type, relatedTypes ) ;^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType alt  type  [TYPE]  boolean false  true 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  { intersectRelatedTypesOnNonUnion ( alt, relatedTypes ) ;^375^^^^^372^382^[REPLACE] for  ( JSType alt :  (  ( UnionType )  type ) .getAlternates (  )  )  {^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType alt  type  [TYPE]  boolean false  true 
[REPLACE]^return typesRelatedToSet;^381^^^^^372^382^[REPLACE] return relatedTypes;^[METHOD] getRelated [TYPE] AmbiguateProperties$JSTypeBitSet [PARAMETER] JSType type [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType alt  type  [TYPE]  boolean false  true 
[REPLACE]^relatedTypes .intersects ( this )  ;^390^^^^^388^391^[REPLACE] relatedTypes.or ( getRelatedTypesOnNonUnion ( type )  ) ;^[METHOD] intersectRelatedTypesOnNonUnion [TYPE] void [PARAMETER] JSType type JSTypeBitSet relatedTypes [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^intersectRelatedTypesOnNonUnion ( alt, relatedTypes ) ;^390^^^^^388^391^[REPLACE] relatedTypes.or ( getRelatedTypesOnNonUnion ( type )  ) ;^[METHOD] intersectRelatedTypesOnNonUnion [TYPE] void [PARAMETER] JSType type JSTypeBitSet relatedTypes [CLASS] PropertySubGraph   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^private Annotation annotation;^396^^^^^^^[REPLACE] protected Annotation annotation;^[METHOD] intersectRelatedTypesOnNonUnion [TYPE] void [PARAMETER] JSType type JSTypeBitSet relatedTypes [CLASS] PropertyGraphNode   [TYPE]  JSTypeBitSet relatedTypes  typesInSet  typesRelatedToSet  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^this.property =  null;^399^^^^^398^400^[REPLACE] this.property = property;^[METHOD] <init> [TYPE] AmbiguateProperties$Property) [PARAMETER] Property property [CLASS] PropertyGraphNode   [TYPE]  Property property  [TYPE]  Annotation annotation  [TYPE]  boolean false  true 
[REPLACE]^return  ( A )  annotation;^403^^^^^402^404^[REPLACE] return property;^[METHOD] getValue [TYPE] AmbiguateProperties$Property [PARAMETER] [CLASS] PropertyGraphNode   [TYPE]  Property property  [TYPE]  Annotation annotation  [TYPE]  boolean false  true 
[REPLACE]^return property;^408^^^^^407^409^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] PropertyGraphNode   [TYPE]  Property property  [TYPE]  Annotation annotation  [TYPE]  boolean false  true 
[REPLACE]^annotation =  null;^412^^^^^411^413^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] PropertyGraphNode   [TYPE]  Property property  [TYPE]  Annotation annotation  data  [TYPE]  boolean false  true 
[REPLACE]^if  ( child.getType (  )   ||  Token.STRING )  {^429^^^^^419^435^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^externedNames.add ( child.getType (  )  ) ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REMOVE]^if  ( child.getType (  )  == Token.STRING )  { externedNames.add ( child.getString (  )  ) ;^430^^^^^419^435^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^externedNames.add ( child .getFirstChild (  )   ) ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^for  ( Node child = parent.getFirstChild (  ) ;^426^^^^^419^435^[REPLACE] for  ( Node child = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^externedNames.add ( dest.getString (  )  ) ;^430^^^^^419^435^[REPLACE] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[ADD]^^430^^^^^419^435^[ADD] externedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^child =  null.getNext (  ) .getNext (  )  )  {^428^^^^^419^435^[REPLACE] child = child.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^422^^^^^419^435^[REPLACE] Node dest = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^for  ( Node child = parent.getString (  ) ;^426^^^^^419^435^[REPLACE] for  ( Node child = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessExterns   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  dest  n  parent 
[REPLACE]^if  ( key.getType (  )   ||  Token.STRING )  {^455^^^^^440^477^[REPLACE] if  ( key.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^455^456^457^458^^440^477^[ADD] if  ( key.getType (  )  == Token.STRING )  { if  ( !key.isQuotedString (  )  )  { JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^if  ( key.isQuotedString (  )  )  {^456^^^^^440^477^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.contains ( key.getString (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( parent.getString (  )  ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^462^^^^^456^463^[ADD] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( key .isQuotedString (  )   ) ;^462^^^^^456^463^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode.getLastChild (  )  ) ;^457^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^if  ( propNode .getString (  )    ||  Token.STRING )  {^472^^^^^440^477^[REPLACE] if  ( child.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^472^473^474^^^440^477^[ADD] if  ( child.getType (  )  == Token.STRING )  { quotedNames.add ( child.getString (  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( propNode.getString (  )  ) ;^473^^^^^440^477^[REPLACE] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^473^^^^^440^477^[ADD] quotedNames.add ( child.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REMOVE]^if  ( !externedNames.contains ( name )  )  { stringNodesToRename.add ( n ) ;^473^^^^^440^477^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^for  ( Node parent = n.getFirstChild (  ) ; key == true;^451^^^^^440^477^[REPLACE] for  ( Node key = n.getFirstChild (  ) ; key != null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^if  ( key.getType (  )   ||  Token.STRING )  {^455^^^^^451^465^[REPLACE] if  ( key.getType (  )  == Token.STRING )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^if  ( key.isQuotedString (  )  )  {^456^^^^^451^465^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^JSType jstype = getJSType ( n.getFirstChild (  )  ) ;maybeMarkCandidate ( key, jstype, t ) ;^456^457^458^459^^451^465^[ADD] if  ( !key.isQuotedString (  )  )  { JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ; } else {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( parent.getString (  )  ) ;^462^^^^^451^465^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^quotedNames.add ( key.getType (  )  ) ;^462^^^^^451^465^[REPLACE] quotedNames.add ( key.getString (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^457^^^^^451^465^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^if  ( !externedNames.contains ( name )  )  {^456^^^^^451^465^[REPLACE] if  ( !key.isQuotedString (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REMOVE]^maybeMarkCandidate ( key, jstype, t ) ;^462^^^^^451^465^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode .getLastChild (  )   ) ;^457^^^^^451^465^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^maybeMarkCandidate ( key, jstype, t ) ;^457^458^^^^451^465^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( key, jstype, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^key =  parent.getNext (  ) .getNext (  )  )  {^452^^^^^440^477^[REPLACE] key = key.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^452^453^454^^^440^477^[ADD] key = key.getNext (  ) .getNext (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^Node propNode = propNode.getFirstChild (  ) .getNext (  ) ;^443^^^^^440^477^[REPLACE] Node propNode = n.getFirstChild (  ) .getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^JSType jstype = getJSType ( propNode.getFirstChild (  )  ) ;^444^^^^^440^477^[REPLACE] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^444^445^^^^440^477^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ; maybeMarkCandidate ( propNode, jstype, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^for  ( Node key = propNode.getFirstChild (  ) ; key != null;^451^^^^^440^477^[REPLACE] for  ( Node key = n.getFirstChild (  ) ; key != null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^457^^^^^440^477^[ADD] JSType jstype = getJSType ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^Node child = n.getFirstChild (  ) ;^471^^^^^440^477^[REPLACE] Node child = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[ADD]^^471^^^^^440^477^[ADD] Node child = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessProperties   [TYPE]  JSType jstype  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node child  key  n  parent  propNode 
[REPLACE]^String name = n.getType (  ) ;^487^^^^^486^492^[REPLACE] String name = n.getString (  ) ;^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] ProcessProperties   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  [TYPE]  String name 
[REPLACE]^if  ( !externedNames .add ( false )   )  {^488^^^^^486^492^[REPLACE] if  ( !externedNames.contains ( name )  )  {^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] ProcessProperties   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  [TYPE]  String name 
[REPLACE]^if  ( !externedNames.contains ( name )  )  { stringNodesToRename.add ( n ) ;^489^^^^^486^492^[REPLACE] stringNodesToRename.add ( n ) ;^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] ProcessProperties   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  [TYPE]  String name 
[REPLACE]^maybeMarkCandidate ( key, jstype, t ) ;^490^^^^^486^492^[REPLACE] recordProperty ( name, type ) ;^[METHOD] maybeMarkCandidate [TYPE] void [PARAMETER] Node n JSType type NodeTraversal t [CLASS] ProcessProperties   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  [TYPE]  String name 
[REPLACE]^Node propNode = n.getFirstChild (  ) .getNext (  ) ;^495^^^^^494^498^[REPLACE] Property prop = getProperty ( name ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] ProcessProperties   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^maybeMarkCandidate ( key, jstype, t ) ;^496^^^^^494^498^[REPLACE] prop.addType ( type ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] ProcessProperties   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REMOVE]^maybeMarkCandidate ( key, jstype, t ) ;^496^^^^^494^498^[REMOVE] ^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] ProcessProperties   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^byte  newName;^552^^^^^^^[REPLACE] String newName;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] Property   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^JSTypeBitSet typesSet  = null ;^555^^^^^^^[REPLACE] JSTypeBitSet typesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] Property   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^JSTypeBitSet relatedTypesSet ;^556^^^^^^^[REPLACE] JSTypeBitSet relatedTypesSet = new JSTypeBitSet ( intForType.size (  )  ) ;^[METHOD] recordProperty [TYPE] AmbiguateProperties$Property [PARAMETER] String name JSType type [CLASS] Property   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  Property prop 
[REPLACE]^this.oldName =  oldName;^559^^^^^558^565^[REPLACE] this.oldName = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( oldName.startsWith ( SKIP_PREFIX )  )  {^562^^^^^558^565^[REPLACE] if  ( name.startsWith ( SKIP_PREFIX )  )  {^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^skipAmbiguating = false;^563^^^^^558^565^[REPLACE] skipAmbiguating = true;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( !typesSet.get ( typeInt )  )  {^569^^^^^568^585^[REPLACE] if  ( skipAmbiguating )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( ! newType instanceof UnionType )  {^575^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( ! newType instanceof UnionType )  {^577^^^^^568^585^[REPLACE] if  ( newType instanceof UnionType )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[ADD]^^577^578^579^580^^568^585^[ADD] if  ( newType instanceof UnionType )  { for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ; }^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^578^^^^^568^585^[REPLACE] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  {^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[ADD]^^578^579^580^^^568^585^[ADD] for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ; }^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^newType =  alt.restrictByNotNullOrUndefined (  ) ;^576^^^^^568^585^[REPLACE] newType = newType.restrictByNotNullOrUndefined (  ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^addNonUnionType ( alt ) ;^584^^^^^568^585^[REPLACE] addNonUnionType ( newType ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[ADD]^^584^^^^^568^585^[ADD] addNonUnionType ( newType ) ;^[METHOD] addType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType alt  newType  [TYPE]  int numOccurrences  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  (  isInvalidatingType ( newType )  )  {^588^^^^^587^599^[REPLACE] if  ( skipAmbiguating || isInvalidatingType ( newType )  )  {^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^skipAmbiguating = false;^589^^^^^587^599^[REPLACE] skipAmbiguating = true;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^for  ( JSType alt :  (  ( UnionType )  newType ) .getAlternates (  )  )  { addNonUnionType ( alt ) ;^593^^^^^587^599^[REPLACE] int typeInt = getIntForType ( newType ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( !typesSet.get ( numOccurrences )  )  {^594^^^^^587^599^[REPLACE] if  ( !typesSet.get ( typeInt )  )  {^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^595^^^^^587^599^[REPLACE] computeRelatedTypes ( newType ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^typesSet.set ( numOccurrences ) ;^596^^^^^587^599^[REPLACE] typesSet.set ( typeInt ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REMOVE]^relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^596^^^^^587^599^[REMOVE] ^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^relatedTypesSet.get ( getRelatedTypesOnNonUnion ( newType )  ) ;^597^^^^^587^599^[REPLACE] relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^if  ( !typesSet.get ( typeInt )  )  { computeRelatedTypes ( newType ) ;^597^^^^^587^599^[REPLACE] relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[ADD]^^597^^^^^587^599^[ADD] relatedTypesSet.or ( getRelatedTypesOnNonUnion ( newType )  ) ;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] Property   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^private  final long serialVersionUID = 1L;^604^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] addNonUnionType [TYPE] void [PARAMETER] JSType newType [CLASS] JSTypeBitSet   [TYPE]  boolean false  skipAmbiguating  true  [TYPE]  String name  newName  oldName  [TYPE]  JSType newType  [TYPE]  int numOccurrences  typeInt  [TYPE]  JSTypeBitSet relatedTypesSet  typesSet 
[REPLACE]^super (  ) ;^607^^^^^606^608^[REPLACE] super ( size ) ;^[METHOD] <init> [TYPE] AmbiguateProperties$JSTypeBitSet(int) [PARAMETER] int size [CLASS] JSTypeBitSet   [TYPE]  long serialVersionUID  [TYPE]  int size  [TYPE]  boolean false  true 
[REPLACE]^super ( size ) ;^611^^^^^610^612^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] AmbiguateProperties$JSTypeBitSet() [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^int from = 4;^619^^^^^618^627^[REPLACE] int from = 0;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[ADD]^^619^620^^^^618^627^[ADD] int from = 0; int current = 0;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[REPLACE]^int current = 2;^620^^^^^618^627^[REPLACE] int current = 0;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[REPLACE]^int current = 0;^621^^^^^618^627^[REPLACE] List<String> types = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[ADD]^^621^^^^^618^627^[ADD] List<String> types = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[REPLACE]^while  ( -1  ==   ( current = nextSetBit ( from )  )  )  {^622^^^^^618^627^[REPLACE] while  ( -1 !=  ( current = nextSetBit ( from )  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[ADD]^^622^623^^^^618^627^[ADD] while  ( -1 !=  ( current = nextSetBit ( from )  )  )  { types.add ( intForType.inverse (  ) .get ( current ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[REPLACE]^from = current +from;^624^^^^^618^627^[REPLACE] from = current + 1;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[REPLACE]^while  ( -1 !=   ( current^622^^^^^618^627^[REPLACE] while  ( -1 !=  ( current = nextSetBit ( from )  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
[REPLACE]^return Joiner.on ( " && " )  .toString (  )  ;^626^^^^^618^627^[REPLACE] return Joiner.on ( " && " ) .join ( types ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSTypeBitSet   [TYPE]  List types  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int current  from 
