[REPLACE]^private  FlatFlowScopeCache cache;^42^^^^^^^[REPLACE] private final FlatFlowScopeCache cache;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^static final  short  MAX_DEPTH = 250;^50^^^^^^^[REPLACE] static final int MAX_DEPTH = 250;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^private boolean frozen = true;^57^^^^^^^[REPLACE] private boolean frozen = false;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^LinkedFlowSlot parent;^371^^^^^^^[REPLACE] final LinkedFlowSlot parent;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^private Map<String, StaticSlot<JSType>> symbols ;^392^^^^^^^[REPLACE] private Map<String, StaticSlot<JSType>> symbols = Maps.newHashMap (  ) ;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^final Set<String> dirtySymbols  = null ;^402^^^^^^^[REPLACE] final Set<String> dirtySymbols = Sets.newHashSet (  ) ;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^linkedEquivalent = true;^423^^^^^422^485^[REPLACE] linkedEquivalent = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^functionScope =  parent.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : parent.getFunctionScope (  ) ;^427^428^^^^422^485^[REPLACE] functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsA = parent.flowsFromBottom (  ) ;^430^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsB = parent.allFlowSlots (  ) ;^431^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols =  this;^433^^^^^422^485^[REPLACE] symbols = slotsA;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^LinkedFlowScope linkedA =  (  ( LinkedFlowScope )   ( a )  )  ;^446^^^^^422^485^[REPLACE] Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbolNames.addAll ( true.keySet (  )  ) ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.keySet (  )  ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REMOVE]^symbols.containsKey ( name )  ;^447^^^^^422^485^[REMOVE] ^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^} else if   (  slotA == null || slotA.getType  (    )   == null  )   {  ;^454^^^^^422^485^[REPLACE] if  ( slotB == null || slotB.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^454^455^456^457^^422^485^[ADD] if  ( slotB == null || slotB.getType (  )  == null )  { StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^}  else {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType =  false.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (joinedType != false )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^473^^^^^468^474^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols .put ( parent )  ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^470^^^^^422^485^[ADD] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^473^^^^^422^485^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA.createChildFlowScope (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType nullType  =  null ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( fnSlotType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^473^^^^^422^485^[ADD] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  )  .diffSlots ( this , this )  ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  false ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( fnSlotType != null )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^462^^^^^458^463^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^462^^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getVar ( name ) ;^455^456^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType nullType  =  fnSlot.getType (  ) ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( fnSlotType != true )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^458^459^460^^462^422^485^[ADD] if  ( fnSlotType == null )  {  } else { joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if   (  slotB == null || slotB.getType  (    )   == null  )   {  ;^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^477^478^^^^464^479^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^468^469^470^471^^422^485^[ADD] if  ( fnSlotType == null )  {  symbols.put ( name, slotB ) ; } else {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^contains ( name )  ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getVar ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^467^^^^^422^485^[ADD] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (joinedType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^473^^^^^468^474^[ADD] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( joinedType == this )  {^481^^^^^422^485^[REPLACE] if  ( joinedType != null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, new SimpleSlot ( name, joinedType, false )  ) ;^482^^^^^422^485^[REPLACE] symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^482^^^^^422^485^[ADD] symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( slotB != true ) {^454^^^^^422^485^[REPLACE] if  ( slotB == null || slotB.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType =  true.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, null ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^465^466^^^^422^485^[ADD] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, false ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^477^478^^^^422^485^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  fnSlot.getType (  ) ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if   (  joinedType != null  )   {  ;^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  null ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^}   = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^464^465^466^467^^422^485^[ADD] else if  ( slotA == null || slotA.getType (  )  == null )  { StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, 0 ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = parent.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType flowType = getSlot ( var.getName (  )  ) .getType (  )  ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( joinedType == null )  {^481^^^^^422^485^[REPLACE] if  ( joinedType != null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REMOVE]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^482^^^^^422^485^[REMOVE] ^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType> slot  ;^450^^^^^422^485^[REPLACE] StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType> slotA = slotsA.get ( name )  ;^451^^^^^422^485^[REPLACE] StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^453^^^^^422^485^[ADD] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^455^456^^^^422^485^[ADD] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^457^^^^^422^485^[ADD] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType falseType  =  null.getName (  ) ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^449^450^451^^453^422^485^[ADD] for  ( String name : symbolNames )  { StaticSlot<JSType> slotA = slotsA.get ( name ) ; StaticSlot<JSType> slotB = slotsB.get ( name ) ; JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> slotA = slotsA .put ( lastSlot )  ;^450^^^^^422^485^[REPLACE] StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^451^^^^^422^485^[ADD] StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType joinedType = true;^453^^^^^422^485^[REPLACE] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType trueType  =  fnSlot.getName (  ) ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  null ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> result = true;^179^^^^^178^198^[REPLACE] StaticSlot<JSType> result = null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^if  ( false != null )  {^189^^^^^178^198^[REPLACE] if  ( result == null )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^}  else {^191^^^^^178^198^[REPLACE] } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return this;^192^^^^^178^198^[REPLACE] return null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return null;  ;^192^^^^^178^198^[REPLACE] return null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^^190^^^^^178^198^[ADD] result = currentSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^currentSlot = currentSlot.parent  ;^183^^^^^178^198^[REPLACE] currentScope = currentScope.parent )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^^188^189^190^^^178^198^[ADD] currentSlot = currentSlot.parent )  { if  ( result == null )  { result = currentSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^result =  slot;^190^^^^^178^198^[REPLACE] result = currentSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return true;^192^^^^^178^198^[REPLACE] return null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^LinkedFlowScope current  ;^181^^^^^178^198^[REPLACE] for  ( LinkedFlowScope currentScope = this;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^LinkedFlowSlot slot = lastSlot  ;^184^^^^^178^198^[REPLACE] for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return this;^197^^^^^178^198^[REPLACE] return result;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^if  ( ! other instanceof LinkedFlowScope )  {^256^^^^^255^304^[REPLACE] if  ( other instanceof LinkedFlowScope )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (   that.optimize (  )  )  {^258^^^^^255^304^[REPLACE] if  ( this.optimize (  )  == that.optimize (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^259^^^^^255^304^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( this.getFunctionScope (  )   ==  that.getFunctionScope (  )  )  {^270^^^^^255^304^[REPLACE] if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^271^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( cache  &&  that.cache )  {^274^^^^^255^304^[REPLACE] if  ( cache == that.cache )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots (.equals ( name ) , that.getSlot ( name )  )  )  {^279^^^^^255^304^[REPLACE] if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;  ;^280^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^278^279^280^281^^274^285^[ADD] for  ( String name : cache.dirtySymbols )  { if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^280^^^^^274^285^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;  ;^284^^^^^274^285^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^280^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( slot, this.get ( slot.getName (  )  )  )  )  {^291^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^292^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( slot, null.get ( slot.getName (  )  )  )  )  {^297^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^298^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( StaticSlot<JSType> slot : true.values (  )  )  {^290^^^^^274^285^[REPLACE] for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( StaticSlot<JSType> slot : null.values (  )  )  {^296^^^^^274^285^[REPLACE] for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^259^^^^^274^285^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;  ;^271^^^^^274^285^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;  ;^280^^^^^274^285^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^284^^^^^274^285^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;  ;^292^^^^^274^285^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^298^^^^^274^285^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^301^^^^^274^285^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^LinkedFlowScope linkedA =  (  ( LinkedFlowScope )   ( a )  )  ;^257^^^^^274^285^[REPLACE] LinkedFlowScope that =  ( LinkedFlowScope )  other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^String, JSType>> slotsA = joinedScopeA.allFlowSlots (  )  ;^287^^^^^274^285^[REPLACE] Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^String, JSType>> slotsA = joinedScopeA.allFlowSlots (  )  ;^288^^^^^274^285^[REPLACE] Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^290^291^292^293^^274^285^[ADD] for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  { if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType> slotA = slotsA.get ( name )  ;^296^^^^^274^285^[REPLACE] for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if   (  linkedA.optimize  (    )   == linkedB.optimize  (    )    )   {  ;^258^^^^^255^304^[REPLACE] if  ( this.optimize (  )  == that.optimize (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;  ;^259^^^^^255^304^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (scope (  )   ==  parent .createChildFlowScope (  )   )  {^270^^^^^255^304^[REPLACE] if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( cache  !=  that.cache )  {^274^^^^^255^304^[REPLACE] if  ( cache == that.cache )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if   (  cache == that.cache  )   {  ;^279^^^^^255^304^[REPLACE] if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^279^280^281^^^255^304^[ADD] if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^String key  ;^278^^^^^274^285^[REPLACE] for  ( String name : cache.dirtySymbols )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( getSlot ( name ) , parent.getSlot ( name )  )  )  {^279^^^^^255^304^[REPLACE] if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if   (  diffSlots  (  slot, myFlowSlots.get  (  slot.getName  (    )    )    )    )   {  ;^291^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( slot, myFlowSlots .put ( parent )  ( slot^297^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( StaticSlot<JSType> slot : null.values (  )  )  {^290^^^^^274^285^[REPLACE] for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( StaticSlot<JSType> slot : otherFlowSlots.get (  )  )  {^296^^^^^274^285^[REPLACE] for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^271^^^^^274^285^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^292^^^^^274^285^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> otherFlowSlots = parent.allFlowSlots (  ) ;^288^^^^^274^285^[REPLACE] Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^303^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^boolean bIsNull =  ( slotB == null )  ||  (  ( slotB.getType (  )  )  == null )  ;^312^^^^^311^329^[REPLACE] boolean aIsNull = slotA == null || slotA.getType (  )  == null;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^313^^^^^311^329^[ADD] boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( aIsNull ||true )  {^314^^^^^311^329^[REPLACE] if  ( aIsNull && bIsNull )  {^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^}  else {^316^^^^^311^329^[REPLACE] } else if  ( aIsNull ^ bIsNull )  {^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;  ;^317^^^^^311^329^[REPLACE] return true;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^317^^^^^311^329^[REPLACE] return true;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;  ;^315^^^^^311^329^[REPLACE] return false;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^} else if  (true  bIsNull )  {^316^^^^^311^329^[REPLACE] } else if  ( aIsNull ^ bIsNull )  {^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^321^^^^^311^329^[ADD] JSType aType = slotA.getType (  ) ;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType bType = true.getType (  ) ;^322^^^^^311^329^[REPLACE] JSType bType = slotB.getType (  ) ;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( aType.isNoType (  )  && bType.isNoType (  )  )  {^323^^^^^311^329^[REPLACE] if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^324^^^^^311^329^[REPLACE] return false;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return aType.differsFrom  (  bType  )  ;  ;^328^^^^^311^329^[REPLACE] return aType.differsFrom ( bType ) ;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^String, JSType>> slotsA = joinedScopeA.allFlowSlots (  )  ;^350^^^^^349^365^[REPLACE] Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( !slots.containsKey ( slot .getType (  )   )  )  {^353^^^^^349^365^[REPLACE] if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( parent.getName (  ) , slot ) ;^354^^^^^349^365^[REPLACE] slots.put ( slot.getName (  ) , slot ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( slot.getType (  ) , slot ) ;^354^^^^^349^365^[REPLACE] slots.put ( slot.getName (  ) , slot ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^352^353^354^^^349^365^[ADD] slot != null; slot = slot.parent )  { if  ( !slots.containsKey ( slot.getName (  )  )  )  { slots.put ( slot.getName (  ) , slot ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^351^352^353^354^355^349^365^[ADD] for  ( LinkedFlowSlot slot = lastSlot; slot != null; slot = slot.parent )  { if  ( !slots.containsKey ( slot.getName (  )  )  )  { slots.put ( slot.getName (  ) , slot ) ; }^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if   (  symbols.containsKey  (  name  )    )   {  ;^359^^^^^349^365^[REPLACE] if  ( !slots.containsKey ( key )  )  {^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( key, cache.symbols.put ( key )  ) ;^360^^^^^349^365^[REPLACE] slots.put ( key, cache.symbols.get ( key )  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( key, cache.symbols .put ( parent )   ) ;^360^^^^^349^365^[REPLACE] slots.put ( key, cache.symbols.get ( key )  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( key, cache.symbols .put ( lastSlot )   ) ;^360^^^^^349^365^[REPLACE] slots.put ( key, cache.symbols.get ( key )  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^358^359^360^361^^349^365^[ADD] for  ( String key : cache.symbols.keySet (  )  )  { if  ( !slots.containsKey ( key )  )  { slots.put ( key, cache.symbols.get ( key )  ) ; }^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return null;^364^^^^^349^365^[REPLACE] return slots;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^private  LinkedFlowScope linkedEquivalent;^388^^^^^^^[REPLACE] private final LinkedFlowScope linkedEquivalent;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^private Map<String, StaticSlot<JSType>> symbols ;^392^^^^^^^[REPLACE] private Map<String, StaticSlot<JSType>> symbols = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^final Set<String> dirtySymbols ;^402^^^^^^^[REPLACE] final Set<String> dirtySymbols = Sets.newHashSet (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^linkedEquivalent = this;^423^^^^^422^485^[REPLACE] linkedEquivalent = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^functionScope =  linkedEquivalent.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : linkedEquivalent.getFunctionScope (  ) ;^427^428^^^^422^485^[REPLACE] functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsA = linkedEquivalent.allFlowSlots (  ) ;^430^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsB = linkedEquivalent.allFlowSlots (  ) ;^431^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols =  null;^433^^^^^422^485^[REPLACE] symbols = slotsA;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^String, JSType>> slotsB = joinedScopeB.allFlowSlots (  )  ;^446^^^^^422^485^[REPLACE] Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbolNames.addAll ( null .get ( name )   ) ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.keySet (  )  ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( slotB != null || slotB.getType (  )  == null )  {^454^^^^^422^485^[REPLACE] if  ( slotB == null || slotB.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^454^455^456^457^^422^485^[ADD] if  ( slotB == null || slotB.getType (  )  == null )  { StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^}  else {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^477^478^^^^464^479^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^473^^^^^468^474^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols .get ( name )  ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^470^^^^^422^485^[ADD] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^473^^^^^422^485^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  )  .getSlot ( name )  ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^467^^^^^422^485^[ADD] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  (joinedType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^468^469^470^471^^422^485^[ADD] if  ( fnSlotType == null )  {  symbols.put ( name, slotB ) ; } else {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA.allFlowSlots (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType fnSlotType = fnSlot != null ? null : fnSlot.getType (  ) ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != null )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^462^^^^^458^463^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^462^^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^455^456^^^^422^485^[ADD] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType fnSlotType  =  null ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  (joinedType != null )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^458^459^460^^462^422^485^[ADD] if  ( fnSlotType == null )  {  } else { joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  )  ;^462^^^^^458^463^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^}  if  ( slotA != true || slotA.getType (  )  == true )  {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType !=joinedType )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.containsKey ( name )  ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType nullType  =  this  ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( joinedType != this  )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.put ( name, null ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( joinedType == this  )  {^481^^^^^422^485^[REPLACE] if  ( joinedType != null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^481^482^483^^^422^485^[ADD] if  ( joinedType != null )  { symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.put ( name, new SimpleSlot ( name, fnSlotType, false )  ) ;^482^^^^^422^485^[REPLACE] symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( slotB != true || slotB.getType (  )  == true )  {^454^^^^^422^485^[REPLACE] if  ( slotB == null || slotB.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^}  if  ( slotA != null ) {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != this )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^473^^^^^422^485^[ADD] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^465^466^^^^422^485^[ADD] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != true )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^477^478^^^^422^485^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  (joinedType != this )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^462^^^^^422^485^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^457^^^^^422^485^[ADD] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != true )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^} else if  ( slotA != this || slotA.getType (  )  == this )  {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.put ( name, this ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType fnSlotType  =  fnSlot.getType (  ) ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^473^^^^^468^474^[ADD] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( joinedType == null )  {^481^^^^^422^485^[REPLACE] if  ( joinedType != null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^481^482^483^^^422^485^[ADD] if  ( joinedType != null )  { symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols .get ( name )  ;^482^^^^^422^485^[REPLACE] symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType =  false.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType> slotB = slotsB.get ( name )  ;^450^^^^^422^485^[REPLACE] StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^451^^^^^422^485^[ADD] StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^453^^^^^422^485^[ADD] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeB.allFlowSlots (  ) .getSlot ( name ) ;^455^456^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^String, JSType>> slotsB = joinedScopeB.allFlowSlots (  )  ;^449^^^^^422^485^[REPLACE] for  ( String name : symbolNames )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> slotA = slotsA.containsKey ( name ) ;^450^^^^^422^485^[REPLACE] StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> slotB = slotsB.containsKey ( name ) ;^451^^^^^422^485^[REPLACE] StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType joinedType = this;^453^^^^^422^485^[REPLACE] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType fnSlotType  =  null ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
