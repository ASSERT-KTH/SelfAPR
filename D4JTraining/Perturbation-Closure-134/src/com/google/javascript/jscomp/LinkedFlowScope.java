[REPLACE]^private  LinkedFlowScope parent;^45^^^^^^^[REPLACE] private final LinkedFlowScope parent;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^static final int MAX_DEPTH = 0;^50^^^^^^^[REPLACE] static final int MAX_DEPTH = 250;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^private boolean frozen ;^57^^^^^^^[REPLACE] private boolean frozen = false;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^private  Scope functionScope;^385^^^^^^^[REPLACE] private final Scope functionScope;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^private  LinkedFlowScope linkedEquivalent;^388^^^^^^^[REPLACE] private final LinkedFlowScope linkedEquivalent;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^private Map<String, StaticSlot<JSType>> symbols  = null ;^392^^^^^^^[REPLACE] private Map<String, StaticSlot<JSType>> symbols = Maps.newHashMap (  ) ;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^final Set<String> dirtySymbols  = null ;^402^^^^^^^[REPLACE] final Set<String> dirtySymbols = Sets.newHashSet (  ) ;^ [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  
[REPLACE]^this.cache =  flattened;^65^^^^^63^75^[REPLACE] this.cache = cache;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( directParent != null )  {^66^^^^^63^75^[REPLACE] if  ( directParent == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.lastSlot =  parent.lastSlot;^71^^^^^63^75^[REPLACE] this.lastSlot = directParent.lastSlot;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^71^^^^^63^75^[ADD] this.lastSlot = directParent.lastSlot;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.depth =depth + 1;^72^^^^^63^75^[REPLACE] this.depth = directParent.depth + 1;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^72^^^^^63^75^[ADD] this.depth = directParent.depth + 1;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.parent = parent; ;^73^^^^^63^75^[REPLACE] this.parent = directParent;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.lastSlot = false;^67^^^^^63^75^[REPLACE] this.lastSlot = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^67^^^^^63^75^[ADD] this.lastSlot = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.depth = 4;^68^^^^^63^75^[REPLACE] this.depth = 0;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^68^^^^^63^75^[ADD] this.depth = 0;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.parent =  flattened.linkedEquivalent;^69^^^^^63^75^[REPLACE] this.parent = cache.linkedEquivalent;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.depth = 1;^68^^^^^63^75^[REPLACE] this.depth = 0;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^69^^^^^63^75^[ADD] this.parent = cache.linkedEquivalent;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] FlatFlowScopeCache cache LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this ( cache, false ) ;^78^^^^^77^79^[REPLACE] this ( cache, null ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$FlatFlowScopeCache) [PARAMETER] FlatFlowScopeCache cache [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^78^^^^^77^79^[ADD] this ( cache, null ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$FlatFlowScopeCache) [PARAMETER] FlatFlowScopeCache cache [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this ( parent.cache, directParent ) ;^82^^^^^81^83^[REPLACE] this ( directParent.cache, directParent ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^super ( name, type, false ) ;^374^^^^^373^376^[REPLACE] super ( name, type, true ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  JSType type  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.parent = directParent; ;^375^^^^^373^376^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  JSType type  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^this.functionScope =  null;^406^^^^^405^409^[REPLACE] this.functionScope = functionScope;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope functionScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols ;^407^^^^^405^409^[REPLACE] symbols = ImmutableMap.of (  ) ;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope functionScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^linkedEquivalent = this;^408^^^^^405^409^[REPLACE] linkedEquivalent = null;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope functionScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^FlatFlowScopeCache cache = parent.cache;^413^^^^^412^418^[REPLACE] FlatFlowScopeCache cache = directParent.cache;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^functionScope =  flattened.functionScope;^415^^^^^412^418^[REPLACE] functionScope = cache.functionScope;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^415^^^^^412^418^[ADD] functionScope = cache.functionScope;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols =  parent.allFlowSlots (  ) ;^416^^^^^412^418^[REPLACE] symbols = directParent.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^416^417^^^^412^418^[ADD] symbols = directParent.allFlowSlots (  ) ; linkedEquivalent = directParent;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^linkedEquivalent =  parent;^417^^^^^412^418^[REPLACE] linkedEquivalent = directParent;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^linkedEquivalent = false;^423^^^^^422^485^[REPLACE] linkedEquivalent = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^423^^^^^422^485^[ADD] linkedEquivalent = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^functionScope =  parent.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : parent.getFunctionScope (  ) ;^427^428^^^^422^485^[REPLACE] functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^427^428^^^^422^485^[ADD] functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsA = parent.allFlowSlots (  ) ;^430^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsB = parent.flowsFromBottom (  ) ;^431^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols =  0;^433^^^^^422^485^[REPLACE] symbols = slotsA;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Set<String> symbolNames =   symbols.keySet (  )  ;^446^^^^^422^485^[REPLACE] Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbolNames .add ( this )  ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbolNames.addAll ( 0.keySet (  )  ) ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( slotB != null ) {^454^^^^^422^485^[REPLACE] if  ( slotB == null || slotB.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^454^455^456^457^^422^485^[ADD] if  ( slotB == null || slotB.getType (  )  == null )  { StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^}  else {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^}   = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^464^465^466^467^^422^485^[ADD] else if  ( slotA == null || slotA.getType (  )  == null )  { StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( fnSlotType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; ;^473^^^^^468^474^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, this ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; ;^473^^^^^422^485^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = parent .createChildFlowScope (  )  .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  null ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (joinedType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, 1 ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^473^^^^^422^485^[ADD] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType =  this.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = parent.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType thisType  =  fnSlot.getType (  ) ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( fnSlotType != true )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ; ;^462^^^^^458^463^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ; ;^462^^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^462^^^^^422^485^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = parent.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  null ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( fnSlotType != this  )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^458^459^460^^462^422^485^[ADD] if  ( fnSlotType == null )  {  } else { joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^}  if  ( slotA != null || slotA.getType (  )  == null )  {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^468^469^470^471^^422^485^[ADD] if  ( fnSlotType == null )  {  symbols.put ( name, slotB ) ; } else {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbolNames.addAll ( slotsB.keySet (  )  ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REMOVE]^cache.dirtySymbols.add ( symbol ) ;^470^^^^^422^485^[REMOVE] ^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  false ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( fnSlotType != this  )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, null ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( joinedType == this )  {^481^^^^^422^485^[REPLACE] if  ( joinedType != null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^symbols.put ( name, new SimpleSlot ( name, joinedType, false )  ) ;^482^^^^^422^485^[REPLACE] symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^joinedType =  1.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^477^478^^^^422^485^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( String name : symbolNames )  { StaticSlot<JSType> slotA = slotsA.get ( name ) ;^449^^^^^422^485^[REPLACE] for  ( String name : symbolNames )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> slotA = slotsA .put ( lastSlot )  ;^450^^^^^422^485^[REPLACE] StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> slotB = null.get ( name ) ;^451^^^^^422^485^[REPLACE] StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType joinedType = this;^453^^^^^422^485^[REPLACE] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^453^^^^^422^485^[ADD] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeB .createChildFlowScope (  )  .getSlot ( name ) ;^455^456^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType nullType  =  fnSlot.getType (  ) ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot = parent.createChildFlowScope (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType fnSlotType  =  fnSlot .setType ( fnSlotType )  ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return cache.getSlot ( name ) ;^87^^^^^86^88^[REPLACE] return cache.functionScope;^[METHOD] getFunctionScope [TYPE] Scope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return cache.getSlot ( name ) ;^92^^^^^91^93^[REPLACE] return getFunctionScope (  ) .isBottom (  ) ;^[METHOD] flowsFromBottom [TYPE] boolean [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return  new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  )   ) ;^99^^^^^98^100^[REPLACE] return new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  ) ;^[METHOD] createEntryLattice [TYPE] LinkedFlowScope [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return functionScope.getSlot ( name ) ;^104^^^^^103^108^[REPLACE] Preconditions.checkState ( !frozen ) ;^[METHOD] inferSlotType [TYPE] void [PARAMETER] String symbol JSType type [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType type  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^104^105^^^^103^108^[ADD] Preconditions.checkState ( !frozen ) ; lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[METHOD] inferSlotType [TYPE] void [PARAMETER] String symbol JSType type [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType type  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^lastSlot =  new LinkedFlowSlot ( null, type, lastSlot ) ;^105^^^^^103^108^[REPLACE] lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[METHOD] inferSlotType [TYPE] void [PARAMETER] String symbol JSType type [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType type  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^cache.dirtySymbols .addAll ( this )  ;^107^^^^^103^108^[REPLACE] cache.dirtySymbols.add ( symbol ) ;^[METHOD] inferSlotType [TYPE] void [PARAMETER] String symbol JSType type [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType type  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType bType = slotB.getType (  ) ;^113^^^^^111^125^[REPLACE] Scope functionScope = getFunctionScope (  ) ;^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( cache == that.cache )  {^114^^^^^111^125^[REPLACE] if  ( functionScope.isLocal (  )  )  {^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (  !functionScope.isBottom (  )  )  {^115^^^^^111^125^[REPLACE] if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^115^116^^^^111^125^[ADD] if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^functionScope.declare ( symbol, this, bottomType, this ) ;^120^^^^^111^125^[REPLACE] functionScope.declare ( symbol, null, bottomType, null ) ;^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^120^^^^^111^125^[ADD] functionScope.declare ( symbol, null, bottomType, null ) ;^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( scope.getVar ( symbol )  != this && !functionScope.isBottom (  )  )  {^115^^^^^111^125^[REPLACE] if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^functionScope.declare ( symbol, false, bottomType, false ) ;^120^^^^^111^125^[REPLACE] functionScope.declare ( symbol, null, bottomType, null ) ;^[METHOD] inferQualifiedSlot [TYPE] void [PARAMETER] String symbol JSType bottomType JSType inferredType [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType bottomType  inferredType  [TYPE]  Scope functionScope  scope  [TYPE]  String symbol  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return cache.functionScope.getVars (  ) ;^129^^^^^128^130^[REPLACE] return cache.functionScope.getTypeOfThis (  ) ;^[METHOD] getTypeOfThis [TYPE] JSType [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return cache.getSlot ( name ) ;^134^^^^^133^135^[REPLACE] return getFunctionScope (  ) .getParentScope (  ) ;^[METHOD] getParentScope [TYPE] StaticScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( cache == that.cache )  {^141^^^^^140^150^[REPLACE] if  ( cache.dirtySymbols.contains ( name )  )  {^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( slot.getName (  ) .getLeastSupertype ( name )  )  {^144^^^^^140^150^[REPLACE] if  ( slot.getName (  ) .equals ( name )  )  {^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^return slot;^144^145^146^^^140^150^[ADD] if  ( slot.getName (  ) .equals ( name )  )  { return slot; }^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return parent;^145^^^^^140^150^[REPLACE] return slot;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( LinkedFlowSlot parent = lastSlot;^142^^^^^140^150^[REPLACE] for  ( LinkedFlowSlot slot = lastSlot;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slot !=  null; parent^143^^^^^140^150^[REPLACE] slot != null; slot = slot.parent )  {^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^143^144^145^^^140^150^[ADD] slot != null; slot = slot.parent )  { if  ( slot.getName (  ) .equals ( name )  )  { return slot;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return slots;^145^^^^^140^150^[REPLACE] return slot;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( LinkedFlowScope currentScope = this;^142^^^^^140^150^[REPLACE] for  ( LinkedFlowSlot slot = lastSlot;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( slot .getType (  )  .equals ( name )  )  {^144^^^^^140^150^[REPLACE] if  ( slot.getName (  ) .equals ( name )  )  {^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( LinkedFlowSlotparent = lastSlot;^142^^^^^140^150^[REPLACE] for  ( LinkedFlowSlot slot = lastSlot;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( parent.getName (  )  .getName (  )   )  {^144^^^^^140^150^[REPLACE] if  ( slot.getName (  ) .equals ( name )  )  {^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^142^143^144^145^146^140^150^[ADD] for  ( LinkedFlowSlot slot = lastSlot; slot != null; slot = slot.parent )  { if  ( slot.getName (  ) .equals ( name )  )  { return slot; }^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return cache.FlatFlowScopeCache ( name ) ;^149^^^^^140^150^[REPLACE] return cache.getSlot ( name ) ;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return ;^155^^^^^154^156^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] getOwnSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^frozen = false;^160^^^^^159^170^[REPLACE] frozen = true;^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( depth  !=  MAX_DEPTH )  {^162^^^^^159^170^[REPLACE] if  ( depth > MAX_DEPTH )  {^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^162^163^164^165^^159^170^[ADD] if  ( depth > MAX_DEPTH )  { if  ( flattened == null )  { flattened = new FlatFlowScopeCache ( this ) ; }^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( flattened != true )  {^163^^^^^159^170^[REPLACE] if  ( flattened == null )  {^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^flattened =  new LinkedFlowSlot ( symbol, type, lastSlot )  ;^164^^^^^159^170^[REPLACE] flattened = new FlatFlowScopeCache ( this ) ;^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^164^^^^^159^170^[ADD] flattened = new FlatFlowScopeCache ( this ) ;^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return  new FlatFlowScopeCache ( scope )  ;^166^^^^^159^170^[REPLACE] return new LinkedFlowScope ( flattened ) ;^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( flattened != null )  {^163^^^^^159^170^[REPLACE] if  ( flattened == null )  {^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^flattened = new FlatFlowScopeCache ( this ) ;^163^164^165^^^159^170^[ADD] if  ( flattened == null )  { flattened = new FlatFlowScopeCache ( this ) ; }^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return  new FlatFlowScopeCache ( scope )  ;^169^^^^^159^170^[REPLACE] return new LinkedFlowScope ( this ) ;^[METHOD] createChildFlowScope [TYPE] FlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> result = false;^179^^^^^178^198^[REPLACE] StaticSlot<JSType> result = null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^^179^^^^^178^198^[ADD] StaticSlot<JSType> result = null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^if  ( result != null )  {^189^^^^^178^198^[REPLACE] if  ( result == null )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^}  if  ( !currentSlot.getName (  ) .equals ( false.getName (  )  )  )  {^191^^^^^178^198^[REPLACE] } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return this;^192^^^^^178^198^[REPLACE] return null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^result =  slot;^190^^^^^178^198^[REPLACE] result = currentSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^}  if  ( !currentSlot.getType (  ) .equals ( result.getName (  )  )  )  {^191^^^^^178^198^[REPLACE] } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^}^191^192^193^^^178^198^[ADD] else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  { return null; }^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return true;^192^^^^^178^198^[REPLACE] return null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^for  ( LinkedFlowScopeparent = this;^181^^^^^178^198^[REPLACE] for  ( LinkedFlowScope currentScope = this;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^if  ( result != false )  {^189^^^^^178^198^[REPLACE] if  ( result == null )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^result = currentSlot;return null;^189^190^191^192^193^178^198^[ADD] if  ( result == null )  { result = currentSlot; } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  { return null; }^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^} else if  ( !currentSlot.getType (  ) .equals ( result.getName (  )  )  )  {^191^^^^^178^198^[REPLACE] } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return false;^192^^^^^178^198^[REPLACE] return null;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^for  ( LinkedFlowSlot slot = currentScope.lastSlot;^184^^^^^178^198^[REPLACE] for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^^184^185^186^187^^178^198^[ADD] for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot; currentSlot != null && ( currentScope.parent == null || currentScope.parent.lastSlot != currentSlot ) ;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^}  else {^191^^^^^178^198^[REPLACE] } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^result =  null;^190^^^^^178^198^[REPLACE] result = currentSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^^190^^^^^178^198^[ADD] result = currentSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^currentSlot =  slot.parent )  {^188^^^^^178^198^[REPLACE] currentSlot = currentSlot.parent )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[ADD]^^188^189^190^^^178^198^[ADD] currentSlot = currentSlot.parent )  { if  ( result == null )  { result = currentSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^for  ( LinkedFlowSlot currentSlot = parent.lastSlot;^184^^^^^178^198^[REPLACE] for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^for  ( current = this; current.parent != null &&^184^^^^^178^198^[REPLACE] for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^if  ( null != null )  {^189^^^^^178^198^[REPLACE] if  ( result == null )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^} else if  ( !currentSlot .getType (  )  .equals ( result^191^^^^^178^198^[REPLACE] } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^currentScope =  parent.parent )  {^183^^^^^178^198^[REPLACE] currentScope = currentScope.parent )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^currentSlot =  null.parent )  {^188^^^^^178^198^[REPLACE] currentSlot = currentSlot.parent )  {^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^for  ( LinkedFlowSlot slot = lastSlot;^181^^^^^178^198^[REPLACE] for  ( LinkedFlowScope currentScope = this;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^return false;^197^^^^^178^198^[REPLACE] return result;^[METHOD] findUniqueRefinedSlot [TYPE] StaticSlot [PARAMETER] FlowScope blindScope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot result  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope blindScope 
[REPLACE]^if  ( cache == that.cache )  {^208^^^^^205^216^[REPLACE] if  ( var.isTypeInferred (  )  )  {^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (  type.isUnknownType (  )  )  {^210^^^^^205^216^[REPLACE] if  ( type == null || type.isUnknownType (  )  )  {^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType flowType = getSlot ( var.getName (  )  ) .getLeastSupertype (  ) ;^211^^^^^205^216^[REPLACE] JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType type = var.getName (  ) ;^209^^^^^205^216^[REPLACE] JSType type = var.getType (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( type != null ) {^210^^^^^205^216^[REPLACE] if  ( type == null || type.isUnknownType (  )  )  {^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( Iterator<Var> it = functionScope.getVars (  ) ; it.hasNext (  ) ; )  {^206^^^^^205^216^[REPLACE] for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ; )  {^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( type != null || type.isUnknownType (  )  )  {^210^^^^^205^216^[REPLACE] if  ( type == null || type.isUnknownType (  )  )  {^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;var.setType ( flowType ) ;^210^211^212^213^^205^216^[ADD] if  ( type == null || type.isUnknownType (  )  )  { JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ; var.setType ( flowType ) ; }^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^209^^^^^205^216^[ADD] JSType type = var.getType (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( type != this || type.isUnknownType (  )  )  {^210^^^^^205^216^[REPLACE] if  ( type == null || type.isUnknownType (  )  )  {^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^210^211^212^213^^205^216^[ADD] if  ( type == null || type.isUnknownType (  )  )  { JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ; var.setType ( flowType ) ; }^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Var var = null.hasNext (  ) ;^207^^^^^205^216^[REPLACE] Var var = it.next (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^207^^^^^205^216^[ADD] Var var = it.next (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType type = var .setType ( flowType )  ;^209^^^^^205^216^[REPLACE] JSType type = var.getType (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType bType = slotB.getType (  ) ;^211^^^^^205^216^[REPLACE] JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^206^207^208^209^^205^216^[ADD] for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ; )  { Var var = it.next (  ) ; if  ( var.isTypeInferred (  )  )  { JSType type = var.getType (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Var var = false.next (  ) ;^207^^^^^205^216^[REPLACE] Var var = it.next (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType type = var .setType ( type )  ;^209^^^^^205^216^[REPLACE] JSType type = var.getType (  ) ;^[METHOD] completeScope [TYPE] void [PARAMETER] Scope scope [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType flowType  type  [TYPE]  Scope functionScope  scope  [TYPE]  Var var  [TYPE]  Iterator it  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( LinkedFlowScope currentScope = this;^229^^^^^228^235^[REPLACE] LinkedFlowScope current;^[METHOD] optimize [TYPE] LinkedFlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( current = this; current.parent != null &&^230^^^^^228^235^[REPLACE] for  ( current = this;^[METHOD] optimize [TYPE] LinkedFlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( current  =  for  ( current ;^230^^^^^228^235^[REPLACE] for  ( current = this;^[METHOD] optimize [TYPE] LinkedFlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^current =  parent.parent )  {}^233^^^^^228^235^[REPLACE] current = current.parent )  {}^[METHOD] optimize [TYPE] LinkedFlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^233^234^^^^228^235^[ADD] current = current.parent )  {} return current;^[METHOD] optimize [TYPE] LinkedFlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return parent;^234^^^^^228^235^[REPLACE] return current;^[METHOD] optimize [TYPE] LinkedFlowScope [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^243^^^^^241^251^[REPLACE] LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^244^^^^^241^251^[REPLACE] LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[ADD]^linkedA.frozen = true;^244^245^^^^241^251^[ADD] LinkedFlowScope linkedB =  ( LinkedFlowScope )  b; linkedA.frozen = true;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^linkedB.frozen = true; ;^245^^^^^241^251^[REPLACE] linkedA.frozen = true;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^linkedA.frozen = true; ;^246^^^^^241^251^[REPLACE] linkedB.frozen = true;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^if  ( linkedA (  )   ||  joinedScopeB (  )  )  {^247^^^^^241^251^[REPLACE] if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^return linkedA .LinkedFlowScope ( flattened , joinedScopeA )  ;^248^^^^^241^251^[REPLACE] return linkedA.createChildFlowScope (  ) ;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^return linkedA.getFunctionScope (  ) ;^248^^^^^241^251^[REPLACE] return linkedA.createChildFlowScope (  ) ;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^return new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  ) ;^250^^^^^241^251^[REPLACE] return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Map slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened  [TYPE]  FlowScope a  b 
[REPLACE]^if  ( ! other instanceof LinkedFlowScope )  {^256^^^^^255^304^[REPLACE] if  ( other instanceof LinkedFlowScope )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^LinkedFlowScope that =  ( LinkedFlowScope )  other;return true;^256^257^258^259^260^255^304^[ADD] if  ( other instanceof LinkedFlowScope )  { LinkedFlowScope that =  ( LinkedFlowScope )  other; if  ( this.optimize (  )  == that.optimize (  )  )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( this.optimize (  )   ||  that.optimize (  )  )  {^258^^^^^255^304^[REPLACE] if  ( this.optimize (  )  == that.optimize (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^return true;^258^259^260^^^255^304^[ADD] if  ( this.optimize (  )  == that.optimize (  )  )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^259^^^^^255^304^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (scope (  )   ==  that.getFunctionScope (  )  )  {^270^^^^^255^304^[REPLACE] if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^271^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( cache  &&  that.cache )  {^274^^^^^255^304^[REPLACE] if  ( cache == that.cache )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots (.equals ( name ) , that.getSlot ( name )  )  )  {^279^^^^^255^304^[REPLACE] if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^280^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^284^^^^^255^304^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( String name : symbolNames )  { StaticSlot<JSType> slotA = slotsA.get ( name ) ;^278^^^^^255^304^[REPLACE] for  ( String name : cache.dirtySymbols )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( cache == that.cache )  {^279^^^^^255^304^[REPLACE] if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( null, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^291^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^292^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( true, myFlowSlots.get ( slot.getType (  )  )  )  )  {^297^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^297^298^299^^^255^304^[ADD] if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^298^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^301^^^^^255^304^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( LinkedFlowScope currentScope = this;^257^^^^^255^304^[REPLACE] LinkedFlowScope that =  ( LinkedFlowScope )  other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^287^^^^^255^304^[REPLACE] Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^287^^^^^255^304^[ADD] Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> otherFlowSlots = parent.flowsFromBottom (  ) ;^288^^^^^255^304^[REPLACE] Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^288^^^^^255^304^[ADD] Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot^290^^^^^255^304^[REPLACE] for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> fnSlot^296^^^^^255^304^[REPLACE] for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( this.equals (  )   &&  parent.optimize (  )  )  {^258^^^^^255^304^[REPLACE] if  ( this.optimize (  )  == that.optimize (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REMOVE]^if  (  ( linkedA.optimize (  )  )  ==  ( linkedB.optimize (  )  )  )  {     return linkedA.createChildFlowScope (  ) ; }^258^^^^^255^304^[REMOVE] ^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (scope (  )   ==  that.getSlot (  )  )  {^270^^^^^255^304^[REPLACE] if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^return false;^270^271^272^^^255^304^[ADD] if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( cache  || flattened )  {^274^^^^^255^304^[REPLACE] if  ( cache == that.cache )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^274^275^^^^255^304^[ADD] if  ( cache == that.cache )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( getSlot ( name ) , parent.getSlot ( name )  )  )  {^279^^^^^255^304^[REPLACE] if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( slot, otherFlowSlots .put ( lastSlot )  ( slot^291^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^return false;^291^292^293^^^255^304^[ADD] if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( diffSlots ( null, myFlowSlots.get ( slot.getName (  )  )  )  )  {^297^^^^^255^304^[REPLACE] if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^278^279^280^281^^255^304^[ADD] for  ( String name : cache.dirtySymbols )  { if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Map<String, StaticSlot<JSType>> otherFlowSlots = parent.allFlowSlots (  ) ;^288^^^^^255^304^[REPLACE] Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^290^291^292^293^^255^304^[ADD] for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  { if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^303^^^^^255^304^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slot  [TYPE]  boolean false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  Object other  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^boolean aIsNull = null == null  <  slotA.getType (  )  == null;^312^^^^^310^329^[REPLACE] boolean aIsNull = slotA == null || slotA.getType (  )  == null;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^boolean bIsNull = slotB != null ;^313^^^^^310^329^[REPLACE] boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^313^^^^^310^329^[ADD] boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  (  bIsNull )  {^314^^^^^310^329^[REPLACE] if  ( aIsNull && bIsNull )  {^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^}  else {^316^^^^^310^329^[REPLACE] } else if  ( aIsNull ^ bIsNull )  {^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return false;^317^^^^^310^329^[REPLACE] return true;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^315^^^^^310^329^[REPLACE] return false;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType aType = null .setType ( aType )  ;^321^^^^^310^329^[REPLACE] JSType aType = slotA.getType (  ) ;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^JSType bType = slotB.getName (  ) ;^322^^^^^310^329^[REPLACE] JSType bType = slotB.getType (  ) ;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( aType.isNoType (  )  && bType.isNoType (  )  )  {^323^^^^^310^329^[REPLACE] if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^323^324^325^^^310^329^[ADD] if  ( aType.isNoType (  )  || bType.isNoType (  )  )  { return false; }^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return true;^324^^^^^310^329^[REPLACE] return false;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return cache.getSlot ( name ) ;^328^^^^^310^329^[REPLACE] return aType.differsFrom ( bType ) ;^[METHOD] diffSlots [TYPE] boolean [PARAMETER] JSType> slotA JSType> slotB [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  StaticSlot slotA  slotB  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType aType  bType  [TYPE]  Scope functionScope  scope  [TYPE]  Map myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^350^^^^^349^365^[REPLACE] Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^350^^^^^349^365^[ADD] Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( !slots.containsKey ( slot.getType (  )  )  )  {^353^^^^^349^365^[REPLACE] if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( parent.getName (  ) , slot ) ;^354^^^^^349^365^[REPLACE] slots.put ( slot.getName (  ) , slot ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( slot .getType (  )  , slot ) ;^354^^^^^349^365^[REPLACE] slots.put ( slot.getName (  ) , slot ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^354^^^^^349^365^[ADD] slots.put ( slot.getName (  ) , slot ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( LinkedFlowScope currentScope = this; currentScope != blindScope;^351^^^^^349^365^[REPLACE] for  ( LinkedFlowSlot slot = lastSlot;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^^351^352^353^354^355^349^365^[ADD] for  ( LinkedFlowSlot slot = lastSlot; slot != null; slot = slot.parent )  { if  ( !slots.containsKey ( slot.getName (  )  )  )  { slots.put ( slot.getName (  ) , slot ) ; }^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( !slots.containsKey ( parent.getName (  )  )  )  {^353^^^^^349^365^[REPLACE] if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[ADD]^slots.put ( slot.getName (  ) , slot ) ;^353^354^355^^^349^365^[ADD] if  ( !slots.containsKey ( slot.getName (  )  )  )  { slots.put ( slot.getName (  ) , slot ) ; }^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slot !=  null; parent^352^^^^^349^365^[REPLACE] slot != null; slot = slot.parent )  {^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^for  ( LinkedFlowScope currentScope = this;^351^^^^^349^365^[REPLACE] for  ( LinkedFlowSlot slot = lastSlot;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( slots.containsKey ( key )  )  {^359^^^^^349^365^[REPLACE] if  ( !slots.containsKey ( key )  )  {^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^360^^^^^349^365^[REPLACE] slots.put ( key, cache.symbols.get ( key )  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^slots.put ( key, cache.symbols.put ( key )  ) ;^360^^^^^349^365^[REPLACE] slots.put ( key, cache.symbols.get ( key )  ) ;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^358^^^^^349^365^[REPLACE] for  ( String key : cache.symbols.keySet (  )  )  {^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return slot;^364^^^^^349^365^[REPLACE] return slots;^[METHOD] allFlowSlots [TYPE] Map [PARAMETER] [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String key  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^if  ( !slots.containsKey ( key )  )  {^491^^^^^490^496^[REPLACE] if  ( symbols.containsKey ( name )  )  {^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return functionScope.getVar ( name ) ;^494^^^^^490^496^[REPLACE] return functionScope.getSlot ( name ) ;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return symbols.put ( name ) ;^492^^^^^490^496^[REPLACE] return symbols.get ( name ) ;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^return functionScope .diffSlots ( null , true )  ;^494^^^^^490^496^[REPLACE] return functionScope.getSlot ( name ) ;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [TYPE]  LinkedFlowScope current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  [TYPE]  LinkedFlowSlot currentSlot  lastSlot  parent  slot  [TYPE]  boolean aIsNull  bIsNull  false  frozen  true  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  Scope functionScope  scope  [TYPE]  String name  [TYPE]  Map myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  [TYPE]  int MAX_DEPTH  depth  [TYPE]  FlatFlowScopeCache cache  flattened 
[REPLACE]^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^243^^^^^241^251^[REPLACE] LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[ADD]^^243^^^^^241^251^[ADD] LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^244^^^^^241^251^[REPLACE] LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[ADD]^^244^^^^^241^251^[ADD] LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^linkedA.frozen = false;^245^^^^^241^251^[REPLACE] linkedA.frozen = true;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[ADD]^^245^^^^^241^251^[ADD] linkedA.frozen = true;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^linkedB.frozen = false;^246^^^^^241^251^[REPLACE] linkedB.frozen = true;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^if  ( linkedA.optimize (  )   &&  linkedB (  )  )  {^247^^^^^241^251^[REPLACE] if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[ADD]^^247^248^249^^^241^251^[ADD] if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  { return linkedA.createChildFlowScope (  ) ; }^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^return linkedA .LinkedFlowScope ( 0 )  ;^248^^^^^241^251^[REPLACE] return linkedA.createChildFlowScope (  ) ;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^return linkedA.optimize (  ) ;^248^^^^^241^251^[REPLACE] return linkedA.createChildFlowScope (  ) ;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^return linkedA.createChildFlowScope (  ) ;^250^^^^^241^251^[REPLACE] return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] FlowScopeJoinOp   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^LinkedFlowSlot parent;^371^^^^^^^[REPLACE] final LinkedFlowSlot parent;^[METHOD] apply [TYPE] FlowScope [PARAMETER] FlowScope a FlowScope b [CLASS] LinkedFlowSlot   [TYPE]  LinkedFlowScope linkedA  linkedB  [TYPE]  boolean false  true  [TYPE]  FlowScope a  b 
[REPLACE]^super ( name, type, false ) ;^374^^^^^373^376^[REPLACE] super ( name, type, true ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] LinkedFlowSlot   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[ADD]^this.parent = parent;^374^375^^^^373^376^[ADD] super ( name, type, true ) ; this.parent = parent;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] LinkedFlowSlot   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^this.parent =  null;^375^^^^^373^376^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] LinkedFlowSlot   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[ADD]^^375^^^^^373^376^[ADD] this.parent = parent;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] LinkedFlowSlot   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^private Map<String, StaticSlot<JSType>> symbols  = null ;^392^^^^^^^[REPLACE] private Map<String, StaticSlot<JSType>> symbols = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^final Set<String> dirtySymbols  = null ;^402^^^^^^^[REPLACE] final Set<String> dirtySymbols = Sets.newHashSet (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope$LinkedFlowSlot) [PARAMETER] String name JSType type LinkedFlowSlot parent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowSlot parent  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  true 
[REPLACE]^this.functionScope =  null;^406^^^^^405^409^[REPLACE] this.functionScope = functionScope;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope functionScope [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope linkedEquivalent  [TYPE]  Set dirtySymbols  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map symbols 
[REPLACE]^symbols ;^407^^^^^405^409^[REPLACE] symbols = ImmutableMap.of (  ) ;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope functionScope [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope linkedEquivalent  [TYPE]  Set dirtySymbols  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map symbols 
[REPLACE]^linkedEquivalent = true;^408^^^^^405^409^[REPLACE] linkedEquivalent = null;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope functionScope [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope linkedEquivalent  [TYPE]  Set dirtySymbols  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map symbols 
[REPLACE]^FlatFlowScopeCache cache = linkedEquivalent.cache;^413^^^^^412^418^[REPLACE] FlatFlowScopeCache cache = directParent.cache;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  [TYPE]  Set dirtySymbols  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  FlatFlowScopeCache cache 
[REPLACE]^functionScope =  null.functionScope;^415^^^^^412^418^[REPLACE] functionScope = cache.functionScope;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  [TYPE]  Set dirtySymbols  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  FlatFlowScopeCache cache 
[REPLACE]^symbols =  linkedEquivalent.allFlowSlots (  ) ;^416^^^^^412^418^[REPLACE] symbols = directParent.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  [TYPE]  Set dirtySymbols  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  FlatFlowScopeCache cache 
[REPLACE]^linkedEquivalent =  null;^417^^^^^412^418^[REPLACE] linkedEquivalent = directParent;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope directParent [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  linkedEquivalent  [TYPE]  Set dirtySymbols  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map symbols  [TYPE]  FlatFlowScopeCache cache 
[REPLACE]^linkedEquivalent = true;^423^^^^^422^485^[REPLACE] linkedEquivalent = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^423^^^^^422^485^[ADD] linkedEquivalent = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^functionScope =  linkedEquivalent.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : linkedEquivalent.getFunctionScope (  ) ;^427^428^^^^422^485^[REPLACE] functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsA = linkedEquivalent.allFlowSlots (  ) ;^430^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^430^^^^^422^485^[ADD] Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^Map<String, StaticSlot<JSType>> slotsB = linkedEquivalent.allFlowSlots (  ) ;^431^^^^^422^485^[REPLACE] Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols =  null;^433^^^^^422^485^[REPLACE] symbols = slotsA;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^Set<String> symbolNames = Sets.newHashSet ( symbols .get ( name )   ) ;^446^^^^^422^485^[REPLACE] Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^446^^^^^422^485^[ADD] Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbolNames.addAll ( this.keySet (  )  ) ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbolNames.addAll ( false .get ( name )   ) ;^447^^^^^422^485^[REPLACE] symbolNames.addAll ( slotsB.keySet (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( slotB != null ) {^454^^^^^422^485^[REPLACE] if  ( slotB == null || slotB.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^454^455^456^457^^422^485^[ADD] if  ( slotB == null || slotB.getType (  )  == null )  { StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^}  else {^464^^^^^422^485^[REPLACE] } else if  ( slotA == null || slotA.getType (  )  == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( joinedType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; ;^473^^^^^468^474^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.put ( name, true ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^470^^^^^422^485^[ADD] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; ;^473^^^^^422^485^[REPLACE] joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA.allFlowSlots (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType falseType  =  fnSlot.getType (  ) ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != true )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols .get ( name )  ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA .allFlowSlots (  )  .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType fnSlotType = fnSlot != true ? true : fnSlot.getType (  ) ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( joinedType != false )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^458^459^460^^462^422^485^[ADD] if  ( fnSlotType == null )  {  } else { joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ; ;^462^^^^^458^463^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ; ;^462^^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^462^^^^^422^485^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  )  .getSlot ( name )  ;^455^456^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^455^456^^^^422^485^[ADD] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType fnSlotType  =  null ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != false )  {^458^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType =  this.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  (joinedType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^468^469^470^471^^422^485^[ADD] if  ( fnSlotType == null )  {  symbols.put ( name, slotB ) ; } else {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.put ( name, this ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  )  .getSlot ( name )  ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType nullType  =  null ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( fnSlotType != null )  {^468^^^^^422^485^[REPLACE] if  ( fnSlotType == null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.put ( name, false ) ;^470^^^^^422^485^[REPLACE] symbols.put ( name, slotB ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( joinedType == false )  {^481^^^^^422^485^[REPLACE] if  ( joinedType != null )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^symbols.put ( name, new SimpleSlot ( name, joinedType, false )  ) ;^482^^^^^422^485^[REPLACE] symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^joinedType =  this.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^422^485^[REPLACE] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^477^478^^^^422^485^[ADD] joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^for  ( String name : symbolNames )  { StaticSlot<JSType> slotA = slotsA.get ( name ) ;^449^^^^^422^485^[REPLACE] for  ( String name : symbolNames )  {^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> slotA = true.get ( name ) ;^450^^^^^422^485^[REPLACE] StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> slotB = true.get ( name ) ;^451^^^^^422^485^[REPLACE] StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType joinedType = this;^453^^^^^422^485^[REPLACE] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[ADD]^^453^^^^^422^485^[ADD] JSType joinedType = null;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = linkedEquivalent.allFlowSlots (  ) .getSlot ( name ) ;^455^456^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType thisType  =  fnSlot.getType (  ) ;^457^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^StaticSlot<JSType> fnSlot = linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^422^485^[REPLACE] StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^JSType nullType  =  this ;^467^^^^^422^485^[REPLACE] JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[METHOD] <init> [TYPE] LinkedFlowScope) [PARAMETER] LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  StaticSlot fnSlot  slotA  slotB  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  JSType fnSlotType  joinedType  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  String name  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^if  ( joinedType != null )  {^491^^^^^490^496^[REPLACE] if  ( symbols.containsKey ( name )  )  {^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^return function  name   ;^494^^^^^490^496^[REPLACE] return functionScope.getSlot ( name ) ;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^return symbols.containsKey ( name ) ;^492^^^^^490^496^[REPLACE] return symbols.get ( name ) ;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map slotsA  slotsB  symbols 
[REPLACE]^return functionScope .getSlot ( name )  ;^494^^^^^490^496^[REPLACE] return functionScope.getSlot ( name ) ;^[METHOD] getSlot [TYPE] StaticSlot [PARAMETER] String name [CLASS] FlatFlowScopeCache   [TYPE]  LinkedFlowScope directParent  joinedScopeA  joinedScopeB  linkedEquivalent  [TYPE]  Set dirtySymbols  symbolNames  [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Scope functionScope  [TYPE]  Map slotsA  slotsB  symbols 
