[REPLACE]^static   long  DEFAULT_LINE_LENGTH_THRESHOLD = 14;^36^^^^^^^[REPLACE] static final int DEFAULT_LINE_LENGTH_THRESHOLD = 500;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^static   byte  INDENT = "  ";^196^^^^^^^[REPLACE] static final String INDENT = "  ";^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private final StringBuilder code ;^198^^^^^^^[REPLACE] private final StringBuilder code = new StringBuilder ( 1024 ) ;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private  int lineLengthThreshold;^199^^^^^^^[REPLACE] private final int lineLengthThreshold;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int indent  = null ;^200^^^^^^^[REPLACE] private int indent = 0;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int lineLength = 3;^201^^^^^^^[REPLACE] private int lineLength = 0;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int lineIndex  = null ;^202^^^^^^^[REPLACE] private int lineIndex = 0;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private final StringBuilder code ;^358^^^^^^^[REPLACE] private final StringBuilder code = new StringBuilder ( 1024 ) ;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int lineIndex ;^363^^^^^^^[REPLACE] private int lineIndex = 0;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int lineLength ;^364^^^^^^^[REPLACE] private int lineLength = 0;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int lineStartPosition  = null ;^365^^^^^^^[REPLACE] private int lineStartPosition = 0;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int preferredBreakPosition  = null ;^366^^^^^^^[REPLACE] private int preferredBreakPosition = 0;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private  Node root;^479^^^^^^^[REPLACE] private final Node root;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private boolean prettyPrint ;^480^^^^^^^[REPLACE] private boolean prettyPrint = false;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private boolean lineBreak ;^481^^^^^^^[REPLACE] private boolean lineBreak = false;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private boolean outputTypes = true;^482^^^^^^^[REPLACE] private boolean outputTypes = false;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private int lineLengthThreshold  = null ;^483^^^^^^^[REPLACE] private int lineLengthThreshold = DEFAULT_LINE_LENGTH_THRESHOLD;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private SourceMap sourceMap ;^484^^^^^^^[REPLACE] private SourceMap sourceMap = null;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private Charset outputCharset ;^487^^^^^^^[REPLACE] private Charset outputCharset = null;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^private boolean validation = false;^488^^^^^^^[REPLACE] private boolean validation = true;^ [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format  
[REPLACE]^if  ( createSrcMap && node.getProp ( Node.SOURCEFILE_PROP )  == null && node.getLineno (  )  > 0 )  {^84^85^86^^^83^99^[REPLACE] if  ( createSrcMap && node.getProp ( Node.SOURCEFILE_PROP )  != null && node.getLineno (  )  > 0 )  {^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( index  > preferredBreakPosition )  {^91^^^^^84^98^[REPLACE] if  ( index >= 0 )  {^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^mapping.node =  node;^93^^^^^84^98^[REPLACE] mapping.node = node;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^mapping.end = new Position ( line, index )  ;^94^^^^^84^98^[REPLACE] mapping.start = new Position ( line, index ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int index = getCurrentCharIndex (  )  ;^87^^^^^84^98^[REPLACE] int line = getCurrentLineIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int line = getCurrentLineIndex (  )  ;^88^^^^^84^98^[REPLACE] int index = getCurrentCharIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^92^^^^^84^98^[ADD] Mapping mapping = new Mapping (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( preferredBreakPosition  <=  0 )  {^91^^^^^83^99^[REPLACE] if  ( index >= 0 )  {^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^93^94^^^^83^99^[ADD] mapping.node = node; mapping.start = new Position ( line, index ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^94^95^^^^83^99^[ADD] mapping.start = new Position ( line, index ) ; mappings.push ( mapping ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^92^^^^^83^99^[ADD] Mapping mapping = new Mapping (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^mapping.node =  node;^93^^^^^83^99^[REPLACE] mapping.node = node;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^mapping.end =  new Position ( pLine, pChar )   ;^94^^^^^83^99^[REPLACE] mapping.start = new Position ( line, index ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int index = getCurrentCharIndex (  )  ;^87^^^^^83^99^[REPLACE] int line = getCurrentLineIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int line = getCurrentLineIndex (  )  ;^88^^^^^83^99^[REPLACE] int index = getCurrentCharIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^String code =  (  ( HasGetCode )   ( cp )  ) .getCode (  )  ;^92^^^^^83^99^[REPLACE] Mapping mapping = new Mapping (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( createSrcMap && root.getProp ( Node.SOURCEFILE_PROP )  == false && node.getLineno (  )  > 0 )  {^107^108^109^^^106^122^[REPLACE] if  ( createSrcMap && node.getProp ( Node.SOURCEFILE_PROP )  != null && node.getLineno (  )  > 0 )  {^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  (preferredBreakPosition  <=  0 )  {^114^^^^^107^121^[REPLACE] if  ( index >= 0 )  {^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^114^115^116^^118^107^121^[ADD] if  ( index >= 0 )  { Preconditions.checkState ( !mappings.empty (  ) , "Mismatch in start and end of mapping" ) ; Mapping mapping = mappings.pop (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^mapping.start = new Position ( line, index )  ;^119^^^^^107^121^[REPLACE] mapping.end = new Position ( line, index ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int index = getCurrentCharIndex (  )  ;^110^^^^^107^121^[REPLACE] int line = getCurrentLineIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int line = getCurrentLineIndex (  )  ;^111^^^^^107^121^[REPLACE] int index = getCurrentCharIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^Mapping mapping = mappings.empty (  ) ;^118^^^^^107^121^[REPLACE] Mapping mapping = mappings.pop (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  (lineStartPosition  ==  0 )  {^114^^^^^106^122^[REPLACE] if  ( index >= 0 )  {^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^mapping.start = new Position ( line, index )  ;^119^^^^^106^122^[REPLACE] mapping.end = new Position ( line, index ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^Mapping mapping = mappings.empty (  ) ;^118^^^^^106^122^[REPLACE] Mapping mapping = mappings.pop (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^110^^^^^106^122^[ADD] int line = getCurrentLineIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^111^^^^^106^122^[ADD] int index = getCurrentCharIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^Mapping mapping = mappings .push ( this )  ;^118^^^^^106^122^[REPLACE] Mapping mapping = mappings.pop (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  start  [TYPE]  Node node  root  [TYPE]  SourceMap sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int pLine = start.getLineNumber (  ) ;^170^^^^^169^189^[REPLACE] int pLine = position.getLineNumber (  ) ;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^int pChar = start.getCharacterIndex (  ) ;^171^^^^^169^189^[REPLACE] int pChar = position.getCharacterIndex (  ) ;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if   (  position.getLineNumber  (    )   > lineIndex  )   {  ;^175^^^^^169^189^[REPLACE] if  ( position.getLineNumber (  )  == lineIndex )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^175^176^177^178^179^169^189^[ADD] if  ( position.getLineNumber (  )  == lineIndex )  { if  ( position.getCharacterIndex (  )  >= characterPosition )  { pLine++; pChar -= characterPosition; }^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( position.getCharacterIndex (  )   >  lineStartPosition )  {^176^^^^^169^189^[REPLACE] if  ( position.getCharacterIndex (  )  >= characterPosition )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^176^177^178^179^^169^189^[ADD] if  ( position.getCharacterIndex (  )  >= characterPosition )  { pLine++; pChar -= characterPosition; }^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^pChar -=  preferredBreakPosition;^178^^^^^169^189^[REPLACE] pChar -= characterPosition;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^pChar -=  null;^178^^^^^169^189^[REPLACE] pChar -= characterPosition;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( position.getCharacterIndex (  )   <=  pChar )  {^176^^^^^169^189^[REPLACE] if  ( position.getCharacterIndex (  )  >= characterPosition )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^pChar -=  pLine;^178^^^^^169^189^[REPLACE] pChar -= characterPosition;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( position.getLineNumber (  )   ==  lineIndex )  {^184^^^^^169^189^[REPLACE] if  ( position.getLineNumber (  )  > lineIndex )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^return  new Position ( line, index )  ;^188^^^^^169^189^[REPLACE] return new Position ( pLine, pChar ) ;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  indent  index  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if   (  statementContext  )   {  ;^430^^^^^429^448^[REPLACE] if  ( lineBreak )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if   (  statementContext  )   {  ;^431^^^^^429^448^[REPLACE] if  ( sawFunction )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^sawFunction = true;^433^^^^^429^448^[REPLACE] sawFunction = false;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^String code =  (  ( HasGetCode )   ( cp )  ) .getCode (  )  ;^440^^^^^429^448^[REPLACE] int len = code.length (  ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( preferredBreakPosition  !=  len - 1 )  {^441^^^^^429^448^[REPLACE] if  ( preferredBreakPosition == len - 1 )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^char ch = code.charAt ( len - 1 ) ;preferredBreakPosition = len;^441^442^443^444^445^429^448^[ADD] if  ( preferredBreakPosition == len - 1 )  { char ch = code.charAt ( len - 1 ) ; if  ( ch == ';' )  { preferredBreakPosition = len; }^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^if  ( ch  !=  ';' )  {^443^^^^^429^448^[REPLACE] if  ( ch == ';' )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[ADD]^^444^^^^^429^448^[ADD] preferredBreakPosition = len;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^char ch = code.charAt ( len  1 ) ;^442^^^^^429^448^[REPLACE] char ch = code.charAt ( len - 1 ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^preferredBreakPosition = code.length (  )  ;^444^^^^^429^448^[REPLACE] preferredBreakPosition = len;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^char ch = code.length ( len  1 ) ;^442^^^^^429^448^[REPLACE] char ch = code.charAt ( len - 1 ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^code.charAt (  ( len - 1 )  )  ;^447^^^^^429^448^[REPLACE] maybeCutLine (  ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  SourceMap map  sourceMap  [TYPE]  char ch  [TYPE]  Charset outputCharset  [TYPE]  List allMappings  [TYPE]  String INDENT  op  str  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  preferredBreakPosition  [TYPE]  Stack mappings 
[REPLACE]^boolean createSourceMap =  (map == true ) ;^598^^^^^597^617^[REPLACE] boolean createSourceMap =  ( sourceMap != null ) ;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^CodeConsumer cp = outputFormat  ||  Format.COMPACT ? new CompactCodePrinter ( lineBreak, lineLengthThreshold, createSourceMap )^599^600^601^602^^597^617^[REPLACE] CodeConsumer cp = outputFormat == Format.COMPACT ? new CompactCodePrinter ( lineBreak, lineLengthThreshold, createSourceMap )^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^CodeGenerator cg = outputFormat  !=  Format.TYPED ? new TypedCodeGenerator ( cp, outputCharset ) : new CodeGenerator ( cp, outputCharset, validation ) ;^604^605^606^607^^597^617^[REPLACE] CodeGenerator cg = outputFormat == Format.TYPED ? new TypedCodeGenerator ( cp, outputCharset ) : new CodeGenerator ( cp, outputCharset, validation ) ;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^cg.add ( node ) ;^608^^^^^597^617^[REPLACE] cg.add ( root ) ;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REMOVE]^code.append ( '\n' )  ;^608^^^^^597^617^[REMOVE] ^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^boolean createSourceMap = sourceMap != null  ;^610^^^^^597^617^[REPLACE] String code =  (  ( HasGetCode )  cp ) .getCode (  ) ;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^if   (  createSrcMap  )   {  ;^612^^^^^597^617^[REPLACE] if  ( createSourceMap )  {^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^cp.generateSourceMap ( map ) ;^613^^^^^597^617^[REPLACE] cp.generateSourceMap ( sourceMap ) ;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^return op;^616^^^^^597^617^[REPLACE] return code;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] CodePrinter MappedCodePrinter Mapping PrettyCodePrinter CompactCodePrinter Builder Format   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^private List<Mapping> allMappings;^54^^^^^^^[REPLACE] final private List<Mapping> allMappings;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] MappedCodePrinter Mapping   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^private boolean createSrcMap;^55^^^^^^^[REPLACE] final private boolean createSrcMap;^[METHOD] toSource [TYPE] String [PARAMETER] Node root Format outputFormat boolean lineBreak int lineLengthThreshold SourceMap sourceMap Charset outputCharset boolean validation [CLASS] MappedCodePrinter Mapping   [TYPE]  StringBuilder code  [TYPE]  Position end  position  start  [TYPE]  Node node  root  [TYPE]  Charset outCharset  outputCharset  [TYPE]  String INDENT  code  op  str  [TYPE]  CodeGenerator cg  [TYPE]  int DEFAULT_LINE_LENGTH_THRESHOLD  characterPosition  i  indent  index  len  line  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  pChar  pLine  position  preferredBreakPosition  threshold  [TYPE]  Stack mappings  [TYPE]  boolean binOp  createSourceMap  createSrcMap  false  lineBreak  outputTypes  prettyPrint  statementContext  true  validation  [TYPE]  Format COMPACT  PRETTY  TYPED  outputFormat  [TYPE]  SourceMap map  sourceMap  [TYPE]  CodeConsumer cp  [TYPE]  List allMappings 
[REPLACE]^if  ( createSrcMap && node.getProp ( Node.SOURCEFILE_PROP )  == null && node.getLineno (  )  > 0 )  {^84^85^86^^^83^99^[REPLACE] if  ( createSrcMap && node.getProp ( Node.SOURCEFILE_PROP )  != null && node.getLineno (  )  > 0 )  {^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^if  ( index  > line )  {^91^^^^^84^98^[REPLACE] if  ( index >= 0 )  {^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REMOVE]^if  ( createSrcMap )  {     for  ( Mapping mapping : allMappings )  {         map.addMapping ( mapping.node, mapping.start, mapping.end ) ;     } }^91^^^^^84^98^[REMOVE] ^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^mapping.node =  node;^93^^^^^84^98^[REPLACE] mapping.node = node;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^mapping.end = new Position ( line, index )  ;^94^^^^^84^98^[REPLACE] mapping.start = new Position ( line, index ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int index = getCurrentCharIndex (  )  ;^87^^^^^84^98^[REPLACE] int line = getCurrentLineIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int line = getCurrentLineIndex (  )  ;^88^^^^^84^98^[REPLACE] int index = getCurrentCharIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int pLine = position.getLineNumber (  )  ;^92^^^^^84^98^[REPLACE] Mapping mapping = new Mapping (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^if  ( index  !=  0 )  {^91^^^^^83^99^[REPLACE] if  ( index >= 0 )  {^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^mapping.node =  node;^93^^^^^83^99^[REPLACE] mapping.node = node;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^mapping.end = new Position ( line, index )  ;^94^^^^^83^99^[REPLACE] mapping.start = new Position ( line, index ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int pLine = position.getLineNumber (  )  ;^92^^^^^83^99^[REPLACE] Mapping mapping = new Mapping (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^^94^^^^^83^99^[ADD] mapping.start = new Position ( line, index ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int index = getCurrentCharIndex (  )  ;^87^^^^^83^99^[REPLACE] int line = getCurrentLineIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int line = getCurrentLineIndex (  )  ;^88^^^^^83^99^[REPLACE] int index = getCurrentCharIndex (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^^92^^^^^83^99^[ADD] Mapping mapping = new Mapping (  ) ;^[METHOD] startSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^if  (  node.getProp ( Node.SOURCEFILE_PROP )  == null && node.getLineno (  )  > 0 )  {^107^108^109^^^106^122^[REPLACE] if  ( createSrcMap && node.getProp ( Node.SOURCEFILE_PROP )  != null && node.getLineno (  )  > 0 )  {^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^^107^108^109^110^111^106^122^[ADD] if  ( createSrcMap && node.getProp ( Node.SOURCEFILE_PROP )  != null && node.getLineno (  )  > 0 )  { int line = getCurrentLineIndex (  ) ; int index = getCurrentCharIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^if  ( index  <  0 )  {^114^^^^^107^121^[REPLACE] if  ( index >= 0 )  {^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^^119^^^^^107^121^[ADD] mapping.end = new Position ( line, index ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^int index = getCurrentCharIndex (  ) ;^110^111^^^^107^121^[ADD] int line = getCurrentLineIndex (  ) ; int index = getCurrentCharIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int line = getCurrentLineIndex (  )  ;^111^^^^^107^121^[REPLACE] int index = getCurrentCharIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^Mapping mapping = mappings.empty (  ) ;^118^^^^^107^121^[REPLACE] Mapping mapping = mappings.pop (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^if  ( index  >  0 )  {^114^^^^^106^122^[REPLACE] if  ( index >= 0 )  {^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^^114^115^116^^118^106^122^[ADD] if  ( index >= 0 )  { Preconditions.checkState ( !mappings.empty (  ) , "Mismatch in start and end of mapping" ) ; Mapping mapping = mappings.pop (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^^119^^^^^106^122^[ADD] mapping.end = new Position ( line, index ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[ADD]^mapping.end = new Position ( line, index ) ;^118^119^^^^106^122^[ADD] Mapping mapping = mappings.pop (  ) ; mapping.end = new Position ( line, index ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^mapping.start = new Position ( line, index )  ;^119^^^^^106^122^[REPLACE] mapping.end = new Position ( line, index ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int index = getCurrentCharIndex (  )  ;^110^^^^^106^122^[REPLACE] int line = getCurrentLineIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int line = getCurrentLineIndex (  )  ;^111^^^^^106^122^[REPLACE] int index = getCurrentCharIndex (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^Mapping mapping  ;^118^^^^^106^122^[REPLACE] Mapping mapping = mappings.pop (  ) ;^[METHOD] endSourceMapping [TYPE] void [PARAMETER] Node node [CLASS] MappedCodePrinter Mapping   [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  List allMappings  [TYPE]  Mapping mapping  [TYPE]  int index  line  [TYPE]  Stack mappings 
[REPLACE]^int pLine = start.getLineNumber (  ) ;^170^^^^^169^189^[REPLACE] int pLine = position.getLineNumber (  ) ;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^int pChar = start.getCharacterIndex (  ) ;^171^^^^^169^189^[REPLACE] int pChar = position.getCharacterIndex (  ) ;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^if  ( position.getLineNumber (  )   !=  lineIndex )  {^175^^^^^169^189^[REPLACE] if  ( position.getLineNumber (  )  == lineIndex )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^if  ( position.getCharacterIndex (  )   <=  pLine )  {^176^^^^^169^189^[REPLACE] if  ( position.getCharacterIndex (  )  >= characterPosition )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[ADD]^pLine++;pChar -= characterPosition;^176^177^178^179^^169^189^[ADD] if  ( position.getCharacterIndex (  )  >= characterPosition )  { pLine++; pChar -= characterPosition; }^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^pChar -=  pLine;^178^^^^^169^189^[REPLACE] pChar -= characterPosition;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^pChar -=  null;^178^^^^^169^189^[REPLACE] pChar -= characterPosition;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^if  ( start.getCharacterIndex (  )   <=  characterPosition )  {^176^^^^^169^189^[REPLACE] if  ( position.getCharacterIndex (  )  >= characterPosition )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[ADD]^^176^177^178^179^^169^189^[ADD] if  ( position.getCharacterIndex (  )  >= characterPosition )  { pLine++; pChar -= characterPosition; }^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[ADD]^^178^^^^^169^189^[ADD] pChar -= characterPosition;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^if  ( position.getLineNumber (  )   >=  lineIndex )  {^184^^^^^169^189^[REPLACE] if  ( position.getLineNumber (  )  > lineIndex )  {^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[ADD]^pLine++;^184^185^186^^^169^189^[ADD] if  ( position.getLineNumber (  )  > lineIndex )  { pLine++; }^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^return  new Position ( line, index )  ;^188^^^^^169^189^[REPLACE] return new Position ( pLine, pChar ) ;^[METHOD] convertPosition [TYPE] Position [PARAMETER] Position position int lineIndex int characterPosition [CLASS] MappedCodePrinter Mapping   [TYPE]  List allMappings  [TYPE]  boolean createSrcMap  false  true  [TYPE]  Position end  position  start  [TYPE]  int characterPosition  lineIndex  pChar  pLine  [TYPE]  Node node  [TYPE]  Stack mappings 
[REPLACE]^static final String INDENT  = null ;^196^^^^^^^[REPLACE] static final String INDENT = "  ";^[METHOD] <init> [TYPE] CodePrinter$MappedCodePrinter$Mapping() [PARAMETER] [CLASS] PrettyCodePrinter   [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  boolean false  true 
[REPLACE]^private final StringBuilder code = new StringBuilder ( 947 ) ;^198^^^^^^^[REPLACE] private final StringBuilder code = new StringBuilder ( 1024 ) ;^[METHOD] <init> [TYPE] CodePrinter$MappedCodePrinter$Mapping() [PARAMETER] [CLASS] PrettyCodePrinter   [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  boolean false  true 
[REPLACE]^private  int lineLengthThreshold;^199^^^^^^^[REPLACE] private final int lineLengthThreshold;^[METHOD] <init> [TYPE] CodePrinter$MappedCodePrinter$Mapping() [PARAMETER] [CLASS] PrettyCodePrinter   [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  boolean false  true 
[REPLACE]^private int indent  = null ;^200^^^^^^^[REPLACE] private int indent = 0;^[METHOD] <init> [TYPE] CodePrinter$MappedCodePrinter$Mapping() [PARAMETER] [CLASS] PrettyCodePrinter   [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  boolean false  true 
[REPLACE]^private  short  lineLength = 0;^201^^^^^^^[REPLACE] private int lineLength = 0;^[METHOD] <init> [TYPE] CodePrinter$MappedCodePrinter$Mapping() [PARAMETER] [CLASS] PrettyCodePrinter   [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  boolean false  true 
[REPLACE]^private int lineIndex ;^202^^^^^^^[REPLACE] private int lineIndex = 0;^[METHOD] <init> [TYPE] CodePrinter$MappedCodePrinter$Mapping() [PARAMETER] [CLASS] PrettyCodePrinter   [TYPE]  Position end  start  [TYPE]  Node node  [TYPE]  boolean false  true 
[REPLACE]^private final StringBuilder code  = null ;^358^^^^^^^[REPLACE] private final StringBuilder code = new StringBuilder ( 1024 ) ;^[METHOD] appendOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CompactCodePrinter   [TYPE]  String INDENT  op  str  [TYPE]  boolean binOp  false  true  [TYPE]  StringBuilder code  [TYPE]  int i  indent  lineIndex  lineLength  lineLengthThreshold 
[REPLACE]^private  int lineLengthThreshold;^361^^^^^^^[REPLACE] private final int lineLengthThreshold;^[METHOD] appendOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CompactCodePrinter   [TYPE]  String INDENT  op  str  [TYPE]  boolean binOp  false  true  [TYPE]  StringBuilder code  [TYPE]  int i  indent  lineIndex  lineLength  lineLengthThreshold 
[REPLACE]^private int lineIndex  = null ;^363^^^^^^^[REPLACE] private int lineIndex = 0;^[METHOD] appendOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CompactCodePrinter   [TYPE]  String INDENT  op  str  [TYPE]  boolean binOp  false  true  [TYPE]  StringBuilder code  [TYPE]  int i  indent  lineIndex  lineLength  lineLengthThreshold 
[REPLACE]^private int lineLength  = null ;^364^^^^^^^[REPLACE] private int lineLength = 0;^[METHOD] appendOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CompactCodePrinter   [TYPE]  String INDENT  op  str  [TYPE]  boolean binOp  false  true  [TYPE]  StringBuilder code  [TYPE]  int i  indent  lineIndex  lineLength  lineLengthThreshold 
[REPLACE]^private int lineStartPosition  = null ;^365^^^^^^^[REPLACE] private int lineStartPosition = 0;^[METHOD] appendOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CompactCodePrinter   [TYPE]  String INDENT  op  str  [TYPE]  boolean binOp  false  true  [TYPE]  StringBuilder code  [TYPE]  int i  indent  lineIndex  lineLength  lineLengthThreshold 
[REPLACE]^private int preferredBreakPosition ;^366^^^^^^^[REPLACE] private int preferredBreakPosition = 0;^[METHOD] appendOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CompactCodePrinter   [TYPE]  String INDENT  op  str  [TYPE]  boolean binOp  false  true  [TYPE]  StringBuilder code  [TYPE]  int i  indent  lineIndex  lineLength  lineLengthThreshold 
[REPLACE]^if   (  lineLength > lineLengthThreshold  )   {  ;^430^^^^^429^448^[REPLACE] if  ( lineBreak )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^if   (  lineLength > lineLengthThreshold  )   {  ;^431^^^^^429^448^[REPLACE] if  ( sawFunction )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[ADD]^startNewLine (  ) ;sawFunction = false;^431^432^433^434^^429^448^[ADD] if  ( sawFunction )  { startNewLine (  ) ; sawFunction = false; }^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^sawFunction = true;^433^^^^^429^448^[REPLACE] sawFunction = false;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[ADD]^^431^432^433^434^^429^448^[ADD] if  ( sawFunction )  { startNewLine (  ) ; sawFunction = false; }^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[ADD]^^433^^^^^429^448^[ADD] sawFunction = false;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^int position = preferredBreakPosition  ;^440^^^^^429^448^[REPLACE] int len = code.length (  ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^if  ( preferredBreakPosition  ) {^441^^^^^429^448^[REPLACE] if  ( preferredBreakPosition == len - 1 )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^if  ( ch  ||  ';' )  {^443^^^^^429^448^[REPLACE] if  ( ch == ';' )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REMOVE]^if  ( sawFunction )  {     startNewLine (  ) ;     sawFunction = false; }^443^^^^^429^448^[REMOVE] ^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^preferredBreakPosition = code.length (  )  ;^444^^^^^429^448^[REPLACE] preferredBreakPosition = len;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[ADD]^^444^^^^^429^448^[ADD] preferredBreakPosition = len;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^char ch = code.length ( len  1 ) ;^442^^^^^429^448^[REPLACE] char ch = code.charAt ( len - 1 ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^if  ( ch  !=  ';' )  {^443^^^^^429^448^[REPLACE] if  ( ch == ';' )  {^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^char ch = code.charAt ( preferredBreakPosition  1 ) ;^442^^^^^429^448^[REPLACE] char ch = code.charAt ( len - 1 ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^code.charAt (  (  ( code.length (  )  )  - 1 )  )  ;^447^^^^^429^448^[REPLACE] maybeCutLine (  ) ;^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REMOVE]^code.toString (  )  ;^447^^^^^429^448^[REMOVE] ^[METHOD] maybeLineBreak [TYPE] void [PARAMETER] [CLASS] CompactCodePrinter   [TYPE]  char ch  [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  preferredBreakPosition 
[REPLACE]^private  Node root;^479^^^^^^^[REPLACE] private final Node root;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
[REPLACE]^private boolean prettyPrint = true;^480^^^^^^^[REPLACE] private boolean prettyPrint = false;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
[REPLACE]^private boolean lineBreak ;^481^^^^^^^[REPLACE] private boolean lineBreak = false;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
[REPLACE]^private boolean outputTypes = true;^482^^^^^^^[REPLACE] private boolean outputTypes = false;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
[REPLACE]^private  long  lineLengthThreshold = DEFAULT_LINE_LENGTH_THRESHOLD;^483^^^^^^^[REPLACE] private int lineLengthThreshold = DEFAULT_LINE_LENGTH_THRESHOLD;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
[REPLACE]^private SourceMap sourceMap ;^484^^^^^^^[REPLACE] private SourceMap sourceMap = null;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
[REPLACE]^private Charset outputCharset ;^487^^^^^^^[REPLACE] private Charset outputCharset = null;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
[REPLACE]^private boolean validation ;^488^^^^^^^[REPLACE] private boolean validation = true;^[METHOD] notePreferredLineBreak [TYPE] void [PARAMETER] [CLASS] Builder   [TYPE]  boolean createSrcMap  false  lineBreak  true  [TYPE]  StringBuilder code  [TYPE]  int len  lineIndex  lineLength  lineLengthThreshold  lineStartPosition  position  preferredBreakPosition 
