[REPLACE]^private  FunctionNames functionNames;^34^^^^^^^[REPLACE] private final FunctionNames functionNames;^ [CLASS] RecordFunctionInformation 1  
[REPLACE]^this.compiler =  null;^49^^^^^47^52^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Compiler compiler FunctionNames functionNames [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.functionNames =  null;^50^^^^^47^52^[REPLACE] this.functionNames = functionNames;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Compiler compiler FunctionNames functionNames [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.mapBuilder  =  this.mapBuilder ;^51^^^^^47^52^[REPLACE] this.mapBuilder = FunctionInformationMap.newBuilder (  ) ;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Compiler compiler FunctionNames functionNames [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^return mapBuilder.addModule (  ) ;^58^^^^^57^59^[REPLACE] return mapBuilder.build (  ) ;^[METHOD] getMap [TYPE] FunctionInformationMap [PARAMETER] [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^NodeTraversal .getSourceName (  )  ;^63^^^^^62^78^[REPLACE] NodeTraversal.traverse ( compiler, root, this ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[REPLACE]^JSModuleGraph graph = compiler.setModuleName (  ) ;^65^^^^^62^78^[REPLACE] JSModuleGraph graph = compiler.getModuleGraph (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[ADD]^^65^^^^^62^78^[ADD] JSModuleGraph graph = compiler.getModuleGraph (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( graph != null )  {^66^^^^^62^78^[REPLACE] if  ( graph == null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[REPLACE]^return o1.getName (  ) .setCompiledSource ( o2.getName (  )  ) ;^72^^^^^62^78^[REPLACE] return o1.getName (  ) .compareTo ( o2.getName (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[REPLACE]^JSModule module = t.getModule (  ) ;^70^^^^^62^78^[REPLACE] for  ( JSModule m : Sets.newTreeSet ( new Comparator<JSModule> (  )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[REPLACE]^addModuleInformation ( false ) ;^67^^^^^62^78^[REPLACE] addModuleInformation ( null ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[REPLACE]^return mapBuilder.build (  ) ;^72^^^^^62^78^[REPLACE] return o1.getName (  ) .compareTo ( o2.getName (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  Node externs  root  [TYPE]  JSModule m  o1  o2  [TYPE]  JSModuleGraph graph  [TYPE]  FunctionNames functionNames 
[REPLACE]^return mapBuilder.build (  ) ;^72^^^^^71^73^[REPLACE] return o1.getName (  ) .compareTo ( o2.getName (  )  ) ;^[METHOD] compare [TYPE] int [PARAMETER] JSModule o1 JSModule o2 [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule o1  o2  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( n .getLineno (  )    ==  Token.FUNCTION )  {^82^^^^^81^102^[REPLACE] if  ( n.getType (  )  != Token.FUNCTION )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^return mapBuilder.build (  ) ;^83^^^^^81^102^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^int id = functionNames.getFunctionName ( n ) ;^86^^^^^81^102^[REPLACE] int id = functionNames.getFunctionId ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( id  ==  0L )  {^87^^^^^81^102^[REPLACE] if  ( id < 0 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^String compiledSource = compiler.toSource ( parent ) ;^92^^^^^81^102^[REPLACE] String compiledSource = compiler.toSource ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^JSModule module = t.getSourceName (  ) ;^93^^^^^81^102^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( parent.getLineno (  )  )^94^95^96^97^^81^102^[REPLACE] mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id )  .setModuleName (  )  .setLineNumber ( n.getLineno (  )  )^94^95^96^97^^81^102^[REPLACE] mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  )  .setName (  )^94^95^96^97^^81^102^[REPLACE] mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getType (  )  )^94^95^96^97^^81^102^[REPLACE] mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t .getModule (  )   ) .setLineNumber ( n.getLineno (  )  )^94^95^96^97^^81^102^[REPLACE] mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setSize ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  )^94^95^96^97^^81^102^[REPLACE] mapBuilder.addEntry ( FunctionInformationMap.Entry.newBuilder (  ) .setId ( id ) .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^.setSourceName ( t .getModule (  )   ) .setLineNumber ( n.getLineno (  )  ) .setModuleName ( module == null ? "" : module.getName (  )  ) .setSize ( compiledSource.length (  )  )^96^97^98^99^^81^102^[REPLACE] .setSourceName ( t.getSourceName (  )  ) .setLineNumber ( n.getLineno (  )  ) .setModuleName ( module == null ? "" : module.getName (  )  ) .setSize ( compiledSource.length (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^.setLineNumber ( parent.getLineno (  )  ) .setModuleName ( module == null ? "" : module.getName (  )  ) .setSize ( compiledSource.length (  )  ) .setName ( functionNames.getFunctionName ( n )  )^97^98^99^100^^81^102^[REPLACE] .setLineNumber ( n.getLineno (  )  ) .setModuleName ( module == null ? "" : module.getName (  )  ) .setSize ( compiledSource.length (  )  ) .setName ( functionNames.getFunctionName ( n )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[ADD]^^97^98^99^^^81^102^[ADD] .setLineNumber ( n.getLineno (  )  ) .setModuleName ( module == null ? "" : module.getName (  )  ) .setSize ( compiledSource.length (  )  )^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[ADD]^^99^100^101^^^81^102^[ADD] .setSize ( compiledSource.length (  )  ) .setName ( functionNames.getFunctionName ( n )  ) .setCompiledSource ( compiledSource ) .build (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^.setName ( functionNames.getFunctionName ( parent )  ) .setCompiledSource ( compiledSource ) .build (  )  ) ;^100^101^^^^81^102^[REPLACE] .setName ( functionNames.getFunctionName ( n )  ) .setCompiledSource ( compiledSource ) .build (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Builder mapBuilder  [TYPE]  Node n  parent  [TYPE]  JSModule module  [TYPE]  String compiledSource  [TYPE]  int id  [TYPE]  FunctionNames functionNames 
[REPLACE]^String source;^116^^^^^115^129^[REPLACE] String name;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^String name;^117^^^^^115^129^[REPLACE] String source;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[ADD]^^117^^^^^115^129^[ADD] String source;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( module == null )  {^118^^^^^115^129^[REPLACE] if  ( module != null )  {^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^name  =  name ;^122^^^^^115^129^[REPLACE] name = "";^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^source = compiler.toSource ( module ) ; ;^123^^^^^115^129^[REPLACE] source = compiler.toSource (  ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[ADD]^^123^^^^^115^129^[ADD] source = compiler.toSource (  ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^name =  null.getName (  ) ;^119^^^^^115^129^[REPLACE] name = module.getName (  ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^source = compiler.toSource (  ) ; ;^120^^^^^115^129^[REPLACE] source = compiler.toSource ( module ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[ADD]^^120^^^^^115^129^[ADD] source = compiler.toSource ( module ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( name )  .toSource ( null )  .build (  )  ) ;^126^127^128^^^115^129^[REPLACE] mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( name ) .setCompiledSource ( source ) .build (  )  ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( name ) .setCompiledSource ( source ) .setId (  )  ) ;^126^127^128^^^115^129^[REPLACE] mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( name ) .setCompiledSource ( source ) .build (  )  ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( name ) .setName ( source ) .build (  )  ) ;^126^127^128^^^115^129^[REPLACE] mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( name ) .setCompiledSource ( source ) .build (  )  ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
[REPLACE]^mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( source ) .setCompiledSource ( source ) .build (  )  ) ;^126^127^128^^^115^129^[REPLACE] mapBuilder.addModule ( FunctionInformationMap.Module.newBuilder (  ) .setName ( name ) .setCompiledSource ( source ) .build (  )  ) ;^[METHOD] addModuleInformation [TYPE] void [PARAMETER] JSModule module [CLASS] RecordFunctionInformation 1   [TYPE]  Compiler compiler  [TYPE]  JSModule module  [TYPE]  String name  source  [TYPE]  boolean false  true  [TYPE]  Builder mapBuilder  [TYPE]  FunctionNames functionNames 
