[REPLACE]^private static final char[] HEX_CHARS ;^38^39^40^^^38^40^[REPLACE] private static final char[] HEX_CHARS = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };^ [CLASS] CodeGenerator Context  
[REPLACE]^private  boolean validation;^49^^^^^^^[REPLACE] private final boolean validation;^ [CLASS] CodeGenerator Context  
[REPLACE]^if  ( !cc.addOp (  )  )  {^87^^^^^86^614^[REPLACE] if  ( !cc.continueProcessing (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^return;^87^88^89^^^86^614^[ADD] if  ( !cc.continueProcessing (  )  )  { return; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;  ;^88^^^^^86^614^[REPLACE] return;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int type = next.getType (  ) ;^91^^^^^86^614^[REPLACE] int type = n.getType (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^92^93^^^^86^614^[ADD] String opstr = NodeUtil.opToStr ( type ) ; int childCount = n.getChildCount (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^93^^^^^86^614^[ADD] int childCount = n.getChildCount (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node first = next.getFirstChild (  ) ;^94^^^^^86^614^[REPLACE] Node first = n.getFirstChild (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^95^^^^^86^614^[ADD] Node last = n.getLastChild (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( opstr == null ) {^98^^^^^86^614^[REPLACE] if  ( opstr != null && first != last )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( last.getType (  )  == type || NodeUtil.isAssociative ( type )  )  {^111^112^^^^86^614^[REPLACE] if  ( last.getType (  )  == type && NodeUtil.isAssociative ( type )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^}  if  ( NodeUtil.containsCall ( n )  || NodeUtil.isAssignmentOp ( last )  )  {^114^^^^^86^614^[REPLACE] } else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addLeftExpr ( first,  ( p + 1 ) , context )  ;^118^^^^^114^119^[REPLACE] addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, p, STATEMENT ) ;^116^^^^^86^614^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^116^^^^^86^614^[ADD] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( next, p, rhsContext ) ;^113^^^^^111^119^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^}  else {^114^^^^^86^614^[REPLACE] } else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last,type  1 * 4, rhsContext ) ;^118^^^^^114^119^[REPLACE] addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^118^^^^^114^119^[ADD] addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last,  ( p + 1 ) , rhsContext )  ;^116^^^^^86^614^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;  ;^120^^^^^86^614^[REPLACE] return;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = NodeUtil.opToStr ( type ) ;^100^^^^^86^614^[REPLACE] int p = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Context rhsContext = getContextForNoInOperator ( rhsContext ) ;^106^^^^^86^614^[REPLACE] Context rhsContext = getContextForNoInOperator ( context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, p  1, rhsContext ) ;^118^^^^^114^119^[REPLACE] addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, p, START_OF_EXPR ) ;^116^^^^^86^614^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, p, context ) ;^113^^^^^111^119^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = NodeUtil.precedence ( precedence ) ;^100^^^^^86^614^[REPLACE] int p = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Context rhsContext = getContextForNoInOperator ( START_OF_EXPR ) ;^106^^^^^86^614^[REPLACE] Context rhsContext = getContextForNoInOperator ( context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .endSourceMapping ( n )  ;^123^^^^^86^614^[REPLACE] cc.startSourceMapping ( n ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (last == null )  {^137^^^^^86^614^[REPLACE] if  ( catchblock != null )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^137^138^139^^^86^614^[ADD] if  ( catchblock != null )  { add ( catchblock ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( last ) ;^138^^^^^86^614^[REPLACE] add ( catchblock ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( childCount  !=  1 )  {^141^^^^^86^614^[REPLACE] if  ( childCount == 3 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^getFirstNonEmptyChild ( n )  ;^142^^^^^86^614^[REPLACE] add ( "finally" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next, Context.PRESERVE_BLOCK ) ;^143^^^^^86^614^[REPLACE] add ( last, Context.PRESERVE_BLOCK ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first.getNext (  ) .getType (  )   ==  Token.EMPTY )  {^150^^^^^86^614^[REPLACE] if  ( first.getNext (  ) .getType (  )  != Token.EMPTY )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^151^152^^^^86^614^[REPLACE] throw new Error ( "Catch conditions not suppored because I think" + " that it may be a netscape only feature." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( childCount  !=  1 )  {^173^^^^^86^614^[REPLACE] if  ( childCount == 1 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Preconditions.checkState ( postProp  &&  0 ) ;^176^^^^^173^177^[REPLACE] Preconditions.checkState ( childCount == 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^174^^^^^86^614^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^174^^^^^86^614^[ADD] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first == null )  {^182^^^^^86^614^[REPLACE] if  ( first != null )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^183^^^^^86^614^[REPLACE] add ( "var " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( first, true, getContextForNoInOperator ( rhsContext )  ) ;^184^^^^^86^614^[REPLACE] addList ( first, false, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( first, false, getContextForNoInOperator ( rhsContext )  ) ;^184^^^^^86^614^[REPLACE] addList ( first, false, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first != null || first.getType (  )  == Token.EMPTY )  {^189^^^^^86^614^[REPLACE] if  ( first == null || first.getType (  )  == Token.EMPTY )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first.getIntProp (  )   &&  Token.COMMA )  {^195^^^^^189^202^[REPLACE] if  ( first.getType (  )  == Token.COMMA )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addIdentifier ( next.getString (  )  ) ;^190^^^^^86^614^[REPLACE] addIdentifier ( n.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^190^191^192^193^194^86^614^[ADD] addIdentifier ( n.getString (  )  ) ; } else { Preconditions.checkState ( childCount == 1 ) ; addIdentifier ( n.getString (  )  ) ; cc.addOp ( "=", true ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first.getType (  )   ) {^195^^^^^86^614^[REPLACE] if  ( first.getType (  )  == Token.COMMA )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, 0 + 3, getContextForNoInOperator ( context )  ) ;^200^^^^^195^201^[REPLACE] addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^getContextForNonEmptyExpression ( context )  ;^200^^^^^195^201^[REPLACE] addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^precedence ( type )  ;^196^^^^^86^614^[REPLACE] addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, NodeUtil .isAssociative ( p )   ) ;^196^^^^^86^614^[REPLACE] addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  next.getType (  )  != Token.STRING )  {^252^253^^^^86^614^[REPLACE] if  ( first.getType (  )  != Token.STRING || last.getType (  )  != Token.STRING )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^254^^^^^252^255^[ADD] throw new Error ( "Expected children to be strings" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( childCount  != postProp )  {^260^^^^^86^614^[REPLACE] if  ( childCount == 2 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Preconditions.checkState ( childCount  &&  1 ) ;^263^^^^^260^265^[REPLACE] Preconditions.checkState ( childCount == 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^263^^^^^260^265^[ADD] Preconditions.checkState ( childCount == 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^getFirstNonEmptyChild ( n )  ;^264^^^^^260^265^[REPLACE] add ( regexp ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^264^^^^^260^265^[ADD] add ( regexp ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( regexp  next.getString (  )  ) ;^261^^^^^86^614^[REPLACE] add ( regexp + last.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( regexp + next.getString (  )  ) ;^261^^^^^86^614^[REPLACE] add ( regexp + last.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  needsParens  )   {  ;^282^^^^^86^614^[REPLACE] if  ( funcNeedsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^if  ( funcNeedsParens )  {     add ( " ) " ) ; }^282^^^^^86^614^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^283^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( true )  {^293^^^^^86^614^[REPLACE] if  ( funcNeedsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^294^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( !needsParens )  {^302^^^^^86^614^[REPLACE] if  ( !stripBlock )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .endBlock ( stripBlock )  ;^303^^^^^86^614^[REPLACE] cc.beginBlock (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )   !=  Token.VAR )  {^309^^^^^86^614^[REPLACE] if  ( c.getType (  )  == Token.VAR )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .endStatement ( hasElse )  ;^310^^^^^86^614^[REPLACE] cc.endStatement (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (   Token.FUNCTION )  {^313^^^^^86^614^[REPLACE] if  ( c.getType (  )  == Token.FUNCTION )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .notePreferredLineBreak (  )  ;^314^^^^^86^614^[REPLACE] cc.maybeLineBreak (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (   Token.SCRIPT )  {^319^^^^^86^614^[REPLACE] if  ( type == Token.SCRIPT )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .maybeLineBreak (  )  ;^320^^^^^86^614^[REPLACE] cc.notePreferredLineBreak (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( stripBlock )  {^323^^^^^86^614^[REPLACE] if  ( !stripBlock )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^cc.endBlock ( context == Context.STATEMENT ) ;^323^324^325^^^86^614^[ADD] if  ( !stripBlock )  { cc.endBlock ( context == Context.STATEMENT ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endBlock ( context  &&  Context.STATEMENT ) ;^324^^^^^86^614^[REPLACE] cc.endBlock ( context == Context.STATEMENT ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^324^^^^^86^614^[ADD] cc.endBlock ( context == Context.STATEMENT ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (postProp  !=  4 / 0 )  {^330^^^^^86^614^[REPLACE] if  ( childCount == 4 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^330^331^332^333^^86^614^[ADD] if  ( childCount == 4 )  { add ( "for ( " ) ; if  ( first.getType (  )  == Token.VAR )  { add ( first, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Preconditions.checkState ( childCount  !=  3 ) ;^345^^^^^330^353^[REPLACE] Preconditions.checkState ( childCount == 3 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " )  ;^346^^^^^330^353^[REPLACE] add ( "for ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^346^347^348^349^350^330^353^[ADD] add ( "for ( " ) ; add ( first ) ; add ( "in" ) ; add ( first.getNext (  )  ) ; add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^347^^^^^330^353^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^348^^^^^330^353^[REPLACE] add ( "in" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next.getNext (  )  ) ;^349^^^^^330^353^[REPLACE] add ( first.getNext (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( first .getType (  )   ) ;^349^^^^^330^353^[REPLACE] add ( first.getNext (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^350^^^^^330^353^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^351^352^^^^330^353^[REPLACE] addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^last, getContextForNonEmptyExpression ( rhsContext ) , false ) ;^352^^^^^330^353^[REPLACE] last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  nodeToProcess.getType  (    )   == Token.VAR  )   {  ;^332^^^^^86^614^[REPLACE] if  ( first.getType (  )  == Token.VAR )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( first, Context.IN_FOR_INIT_CLAUSE ) ;addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^332^333^334^335^336^86^614^[ADD] if  ( first.getType (  )  == Token.VAR )  { add ( first, Context.IN_FOR_INIT_CLAUSE ) ; } else { addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, 0 * 2, Context.IN_FOR_INIT_CLAUSE ) ;^335^^^^^332^336^[REPLACE] addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next, Context.IN_FOR_INIT_CLAUSE ) ;^333^^^^^86^614^[REPLACE] add ( first, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( firstInList, true, OTHER )  ;^335^^^^^332^336^[REPLACE] addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^335^^^^^332^336^[ADD] addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( n, OTHER )  ;^333^^^^^86^614^[REPLACE] add ( first, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^333^^^^^86^614^[ADD] add ( first, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  funcNeedsParens  )   {  ;^383^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^384^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( stripBlock )  {^387^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^387^388^389^^^86^614^[ADD] if  ( needsParens )  { add ( " ) " ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^388^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^388^^^^^86^614^[ADD] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( postProp  ==  0 )  {^419^^^^^86^614^[REPLACE] if  ( postProp != 0 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.addOp ( opstr, true ) ;^423^^^^^419^425^[REPLACE] cc.addOp ( o, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^423^^^^^419^425^[ADD] cc.addOp ( o, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^424^^^^^419^425^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^precedence ( type )  ;^420^^^^^86^614^[REPLACE] addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addLeftExpr ( first, NodeUtil.precedence ( precedence ) , context ) ;^420^^^^^86^614^[REPLACE] addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.addOp ( o, true ) ;^421^^^^^86^614^[REPLACE] cc.addOp ( o, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( validation )  {^440^^^^^86^614^[REPLACE] if  ( ambiguousElseClause )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^440^441^442^^^86^614^[ADD] if  ( ambiguousElseClause )  { cc.beginBlock (  ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endBlock (  ) ;^441^^^^^86^614^[REPLACE] cc.beginBlock (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  singleq < doubleq  )   {  ;^448^^^^^86^614^[REPLACE] if  ( hasElse )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, true ) ;^455^^^^^448^457^[REPLACE] addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( next.getNext (  ) , Context.OTHER, false ) ;^455^^^^^448^457^[REPLACE] addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^checkState (  ( childCount == 0 )  )  ;^456^^^^^448^457^[REPLACE] Preconditions.checkState ( childCount == 2 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^( isLatin ( c.getString (  )  )  )  ;^456^^^^^448^457^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( first.getType (  ) , Context.BEFORE_DANGLING_ELSE, true ) ;^449^450^^^^86^614^[REPLACE] addNonEmptyExpression ( first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^c.getNext (  )  ;^450^^^^^86^614^[REPLACE] first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^450^451^^^^86^614^[ADD] first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, false ) ; add ( "else" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( "delete " )  ;^451^^^^^86^614^[REPLACE] add ( "else" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( rhsContext ) , true ) ;^452^453^^^^86^614^[REPLACE] addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^last, getContextForNonEmptyExpression ( rhsContext ) , false ) ;^453^^^^^86^614^[REPLACE] last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( validation )  {^459^^^^^86^614^[REPLACE] if  ( ambiguousElseClause )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.beginBlock (  ) ;^460^^^^^86^614^[REPLACE] cc.endBlock (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (postProp  &&  1 << 2 )  {^475^^^^^86^614^[REPLACE] if  ( childCount == 1 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " )  ;^476^^^^^86^614^[REPLACE] add ( " " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^477^^^^^86^614^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( postProp  !=  4 )  {^491^^^^^86^614^[REPLACE] if  ( childCount == 1 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( " " ) ;add ( first ) ;^491^492^493^494^^86^614^[ADD] if  ( childCount == 1 )  { add ( " " ) ; add ( first ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " )  ;^492^^^^^86^614^[REPLACE] add ( " " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^493^^^^^86^614^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^493^^^^^86^614^[ADD] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  validation )  {^500^^^^^86^614^[REPLACE] if  ( type == Token.EXPR_VOID && validation )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^501^^^^^86^614^[REPLACE] throw new Error ( "Unexpected EXPR_VOID. Should be EXPR_RESULT." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( NodeUtil.containsCall ( next )  )  {^515^^^^^86^614^[REPLACE] if  ( NodeUtil.containsCall ( first )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^precedence = NodeUtil.precedence ( first.getType (  )  )   4;^516^^^^^86^614^[REPLACE] precedence = NodeUtil.precedence ( first.getType (  )  )  + 1;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( next == null )  {^522^^^^^86^614^[REPLACE] if  ( next != null )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^522^523^524^525^526^86^614^[ADD] if  ( next != null )  { add ( " ( " ) ; addList ( next ) ; add ( " ) " ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^523^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( first )  ;^524^^^^^86^614^[REPLACE] addList ( next ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^525^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  funcNeedsParens  )   {  ;^543^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( " ( " ) ;^543^544^545^^^86^614^[ADD] if  ( needsParens )  { add ( " ( " ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^544^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^544^^^^^86^614^[ADD] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c  ==  first )  {^548^^^^^86^614^[REPLACE] if  ( c != first )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement (  ) ;^549^^^^^86^614^[REPLACE] cc.listSeparator (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )  == Token.STRING && TokenStream.isKeyword ( c.getString (  )  )  && TokenStream.isJSIdentifier ( c.getString (  )  )  &&^554^555^556^557^^86^614^[REPLACE] if  ( c.getType (  )  == Token.STRING && !TokenStream.isKeyword ( c.getString (  )  )  && TokenStream.isJSIdentifier ( c.getString (  )  )  &&^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( c, 3 ) ;^562^^^^^554^563^[REPLACE] addExpr ( c, 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^c.getString (  )  ;^560^^^^^554^563^[REPLACE] add ( c.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^( last.getString (  )  )  ;^560^^^^^554^563^[REPLACE] add ( c.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^560^^^^^554^563^[ADD] add ( c.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( stripBlock )  {^568^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " " )  ;^569^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^add ( " " )  ;^569^^^^^86^614^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^n = n.getNext (  )  ;^305^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^516^^^^^86^614^[ADD] precedence = NodeUtil.precedence ( first.getType (  )  )  + 1;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c =  first; catchblock !^547^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  ) .getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^136^^^^^86^614^[ADD] Node catchblock = first.getNext (  ) .getFirstChild (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int precedence = precedence ( type )  ;^242^^^^^86^614^[REPLACE] int p = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^String regexp = regexpEscape ( next.getString (  ) , outputCharsetEncoder ) ;^257^^^^^86^614^[REPLACE] String regexp = regexpEscape ( first.getString (  ) , outputCharsetEncoder ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean funcNeedsParens =  (rhsContext  !=  Context.START_OF_EXPR ) ;^281^^^^^86^614^[REPLACE] boolean funcNeedsParens =  ( context == Context.START_OF_EXPR ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean stripBlock = n.isSyntheticBlock (  )  && (  ( context != Context.PRESERVE_BLOCK )  ;^300^301^^^^86^614^[REPLACE] boolean stripBlock = n.isSyntheticBlock (  )  || (  ( context != Context.PRESERVE_BLOCK )  &&  ( n.getChildCount (  )  < 2 )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node c = n  ;^305^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean needsParens =  ( first.getType (  )   &&  Token.NUMBER ) ;^382^^^^^86^614^[REPLACE] boolean needsParens =  ( first.getType (  )  == Token.NUMBER ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^int postProp = n.getIntProp ( Node.INCRDECR_PROP, 0 ) ;^415^416^^^^86^614^[ADD] String o = type == Token.INC ? "++" : "--"; int postProp = n.getIntProp ( Node.INCRDECR_PROP, 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^416^^^^^86^614^[ADD] int postProp = n.getIntProp ( Node.INCRDECR_PROP, 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean hasElse = childCount  ||  3;^437^^^^^86^614^[REPLACE] boolean hasElse = childCount == 3;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean ambiguousElseClause = rhsContext == Context.BEFORE_DANGLING_ELSE  ==  !hasElse;^438^439^^^^86^614^[REPLACE] boolean ambiguousElseClause = context == Context.BEFORE_DANGLING_ELSE && !hasElse;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = precedence ( type )  ;^510^^^^^86^614^[REPLACE] int precedence = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node next = next .getType (  )  ;^521^^^^^86^614^[REPLACE] Node next = first.getNext (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^542^^^^^86^614^[ADD] boolean needsParens =  ( context == Context.START_OF_EXPR ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^547^548^549^550^^86^614^[ADD] for  ( Node c = first; c != null; c = c.getNext (  ) .getNext (  )  )  { if  ( c != first )  { cc.listSeparator (  ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^151^152^^^^86^614^[ADD] throw new Error ( "Catch conditions not suppored because I think" + " that it may be a netscape only feature." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^254^^^^^86^614^[ADD] throw new Error ( "Expected children to be strings" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^throw new Error ( "Expected children to be strings" )  ;^501^^^^^86^614^[REPLACE] throw new Error ( "Unexpected EXPR_VOID. Should be EXPR_RESULT." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^610^^^^^86^614^[REPLACE] throw new Error ( "Unknown type " + type + "\n" + n.toStringTree (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .startSourceMapping ( last )  ;^613^^^^^86^614^[REPLACE] cc.endSourceMapping ( n ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node nodeToProcessodeToProcess = n;^625^^^^^624^671^[REPLACE] Node nodeToProcess = n;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( !allowNonBlockChild ) {^627^^^^^624^671^[REPLACE] if  ( !allowNonBlockChild && n.getType (  )  != Token.BLOCK )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  singleq < doubleq  )   {  ;^628^^^^^624^671^[REPLACE] if  ( validation )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^628^629^630^^^624^671^[ADD] if  ( validation )  { throw new Error ( "Missing BLOCK child." ) ; }^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^629^^^^^624^671^[ADD] throw new Error ( "Missing BLOCK child." ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^throw new Error ( "Expected children to be strings" )  ;^629^^^^^624^671^[REPLACE] throw new Error ( "Missing BLOCK child." ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( n.getType (  )   &&  Token.BLOCK )  {^634^^^^^624^671^[REPLACE] if  ( n.getType (  )  == Token.BLOCK )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( count  !=  1 )  {^636^^^^^624^671^[REPLACE] if  ( count == 0 )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;  ;^638^^^^^624^671^[REPLACE] return;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (   1 )  {^641^^^^^624^671^[REPLACE] if  ( count == 1 )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION && firstAndOnlyChild.getType (  )  == Token.DO )  {^646^647^^^^624^671^[REPLACE] if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION || firstAndOnlyChild.getType (  )  == Token.DO )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^646^647^648^649^650^624^671^[ADD] if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION || firstAndOnlyChild.getType (  )  == Token.DO )  { cc.beginBlock (  ) ; add ( firstAndOnlyChild, Context.STATEMENT ) ; cc.maybeLineBreak (  ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^nodeToProcess =  n;^655^^^^^646^656^[REPLACE] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;  ;^652^^^^^646^656^[REPLACE] return;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^nodeToProcess =  n;^655^^^^^624^671^[REPLACE] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;  ;^652^^^^^624^671^[REPLACE] return;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node firstAndOnlyChild = getFirstNonEmptyChild ( nodeToProcess ) ;^645^^^^^624^671^[REPLACE] Node firstAndOnlyChild = getFirstNonEmptyChild ( n ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int count = getNonEmptyChildCount ( nodeToProcess ) ;^635^^^^^624^671^[REPLACE] int count = getNonEmptyChildCount ( n ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  childCount == 1  )   {  ;^636^^^^^624^671^[REPLACE] if  ( count == 0 )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^636^637^638^639^^624^671^[ADD] if  ( count == 0 )  { cc.endStatement ( true ) ; return; }^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( count  &&  1 )  {^641^^^^^624^671^[REPLACE] if  ( count == 1 )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION ) {^646^647^^^^624^671^[REPLACE] if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION || firstAndOnlyChild.getType (  )  == Token.DO )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^645^^^^^624^671^[ADD] Node firstAndOnlyChild = getFirstNonEmptyChild ( n ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^655^^^^^624^671^[ADD] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( nodeToProcess .getString (  )    ||  Token.EMPTY )  {^660^^^^^624^671^[REPLACE] if  ( nodeToProcess.getType (  )  == Token.EMPTY )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( n.getIntProp (  )   !=  Token.VAR )  {^667^^^^^660^670^[REPLACE] if  ( nodeToProcess.getType (  )  == Token.VAR )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement ( false ) ;^661^^^^^624^671^[REPLACE] cc.endStatement ( true ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( n.getType (  )   &&  Token.VAR )  {^667^^^^^624^671^[REPLACE] if  ( nodeToProcess.getType (  )  == Token.VAR )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement ( true )  ;^668^^^^^624^671^[REPLACE] cc.endStatement (  ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^668^^^^^624^671^[ADD] cc.endStatement (  ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int nextSlot = 2;^734^^^^^733^752^[REPLACE] int nextSlot = 0;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^^735^^^^^733^752^[ADD] int nextSkipSlot = 0;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (nextSkipSlot  &&  skipIndexes[nextSkipSlot] )  {^738^^^^^733^752^[REPLACE] if  ( nextSlot == skipIndexes[nextSkipSlot] )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^cc.listSeparator (  ) ;nextSlot++;nextSkipSlot++;^738^739^740^741^^733^752^[ADD] if  ( nextSlot == skipIndexes[nextSkipSlot] )  { cc.listSeparator (  ) ; nextSlot++; nextSkipSlot++;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement (  ) ;^739^^^^^733^752^[REPLACE] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^^739^^^^^733^752^[ADD] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( n  ==  firstInList )  {^746^^^^^733^752^[REPLACE] if  ( n != firstInList )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement (  ) ;^747^^^^^733^752^[REPLACE] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^c = c.getNext (  )  ;^736^^^^^733^752^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node n = n; n != null; n = n.getNext (  )  )  {^736^^^^^733^752^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int singleq = 0 - 4, doubleq = 0 - 4;^768^^^^^767^794^[REPLACE] int singleq = 0, doubleq = 0;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^768^^^^^767^794^[ADD] int singleq = 0, doubleq = 0;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^771^772^773^774^775^767^794^[ADD] for  ( int i = 0; i < s.length (  ) ; i++ )  { switch  ( s.charAt ( i )  )  { case '"': doubleq++; break; case '\'': singleq++; break; }^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^String singlequote  ;^778^^^^^767^794^[REPLACE] String doublequote, singlequote;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^String doublequote  ;^778^^^^^767^794^[REPLACE] String doublequote, singlequote;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = precedence ( type )  ;^779^^^^^767^794^[REPLACE] char quote;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (i  ==  doubleq )  {^780^^^^^767^794^[REPLACE] if  ( singleq < doubleq )  {^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^quote = '\''  ;^787^^^^^780^790^[REPLACE] quote = '\"';^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^doublequote = "\""  ;^788^^^^^780^790^[REPLACE] doublequote = "\\\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^doublequote = "\""  ;^789^^^^^780^790^[REPLACE] singlequote = "\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^quote = '\"'  ;^782^^^^^767^794^[REPLACE] quote = '\'';^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^singlequote = "\'"  ;^783^^^^^767^794^[REPLACE] doublequote = "\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^singlequote = "\'"  ;^784^^^^^767^794^[REPLACE] singlequote = "\\\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^doublequote = "\"";^782^783^^^^767^794^[ADD] quote = '\''; doublequote = "\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^783^^^^^767^794^[ADD] doublequote = "\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^quote = '\''  ;^787^^^^^767^794^[REPLACE] quote = '\"';^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^doublequote = "\""  ;^788^^^^^767^794^[REPLACE] doublequote = "\\\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^789^^^^^767^794^[ADD] singlequote = "\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return strEscape  (  s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder  )  ;  ;^792^793^^^^767^794^[REPLACE] return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = precedence ( type )  ;^814^^^^^813^870^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( "<\\" )  ;^815^^^^^813^870^[REPLACE] sb.append ( quote ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  (  ( s.charAt ( i - 1 )  == '-' || s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' || s.charAt ( i - 2 )  == ']' )  )  )  {^826^827^828^^^813^870^[REPLACE] if  ( i >= 2 && (  ( s.charAt ( i - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( quote )  ;^831^^^^^826^832^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( quote )  ;^829^^^^^826^832^[REPLACE] sb.append ( "\\>" ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  - 5 )  )  {^836^837^^^^813^870^[REPLACE] if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^836^837^838^839^840^813^870^[ADD] if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  { sb.append ( "<\\" ) ; } else { sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^840^^^^^836^841^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( quote )  ;^838^^^^^836^841^[REPLACE] sb.append ( "<\\" ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( outputCharsetEncoder == this )  {^846^^^^^813^870^[REPLACE] if  ( outputCharsetEncoder != null )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c > 0x1f || c <= 0x7f )  {^857^^^^^846^865^[REPLACE] if  ( c > 0x1f && c <= 0x7f )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^sb.append ( c ) ;^857^858^859^^^846^865^[ADD] if  ( c > 0x1f && c <= 0x7f )  { sb.append ( c ) ; } else {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^identifierEscape ( identifier )  ;^863^^^^^857^864^[REPLACE] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^858^^^^^846^865^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^858^^^^^846^865^[ADD] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  singleq < doubleq  )   {  ;^847^^^^^813^870^[REPLACE] if  ( outputCharsetEncoder.canEncode ( c )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^sb.append ( c ) ;appendHexJavaScriptRepresentation ( sb, c ) ;^847^848^849^^851^813^870^[ADD] if  ( outputCharsetEncoder.canEncode ( c )  )  { sb.append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^identifierEscape ( identifier )  ;^851^^^^^847^852^[REPLACE] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( quote )  ;^848^^^^^813^870^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^848^^^^^813^870^[ADD] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c > 0x1f || c <= 0x7f )  {^857^^^^^813^870^[REPLACE] if  ( c > 0x1f && c <= 0x7f )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( quote )  ;^858^^^^^813^870^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0 ; i < s.length (  ) ; i++ )  {^816^^^^^813^870^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^char c = doublequoteEscape.charAt ( i ) ;^817^^^^^813^870^[REPLACE] char c = s.charAt ( i ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^835^^^^^813^870^[ADD] final String END_SCRIPT = "/script";^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( "<\\" )  ;^868^^^^^813^870^[REPLACE] sb.append ( quote ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return sb.StringBuilder (  ) ;^869^^^^^813^870^[REPLACE] return sb.toString (  ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( NodeUtil.isAssociative ( s )  )  {^874^^^^^872^892^[REPLACE] if  ( NodeUtil.isLatin ( s )  )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;  ;^875^^^^^872^892^[REPLACE] return s;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^879^^^^^872^892^[ADD] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  c < 0x7F )  {^885^^^^^872^892^[REPLACE] if  ( c > 0x1F && c < 0x7F )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^identifierEscape ( identifier )  ;^888^^^^^885^889^[REPLACE] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( quote )  ;^886^^^^^872^892^[REPLACE] sb.append ( c ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0 ; i < s.length (  ) ; i++ )  {^880^^^^^872^892^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = precedence ( type )  ;^881^^^^^872^892^[REPLACE] char c = s.charAt ( i ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return sb.StringBuilder (  ) ;^891^^^^^872^892^[REPLACE] return sb.toString (  ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if   (  singleq < doubleq  )   {  ;^978^^^^^977^993^[REPLACE] if  ( Character.isSupplementaryCodePoint ( codePoint )  )  {^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[ADD]^^978^979^^^^977^993^[ADD] if  ( Character.isSupplementaryCodePoint ( codePoint )  )  {^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^return i;  ;^986^^^^^977^993^[REPLACE] return;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^char[] surrogates = Character.isSupplementaryCodePoint ( codePoint ) ;^983^^^^^977^993^[REPLACE] char[] surrogates = Character.toChars ( codePoint ) ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  | 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  | 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  | 0xf] )^988^989^990^991^^977^993^[REPLACE] out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  & 0xf] )^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[ADD]^^988^989^990^^^977^993^[ADD] out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] )^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
