[REPLACE]^private static final char[] HEX_CHARS ;^38^39^40^^^38^40^[REPLACE] private static final char[] HEX_CHARS = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };^ [CLASS] CodeGenerator Context  
[REPLACE]^this.validation =  true;^53^^^^^51^64^[REPLACE] this.validation = validation;^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc =  null;^54^^^^^51^64^[REPLACE] cc = consumer;^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( outputCharset != false ) {^55^^^^^51^64^[REPLACE] if  ( outputCharset == null || outputCharset == Charsets.US_ASCII )  {^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[ADD]^^55^56^^^^51^64^[ADD] if  ( outputCharset == null || outputCharset == Charsets.US_ASCII )  {^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^this.outputCharsetEncoder =  null.newEncoder (  ) ;^62^^^^^51^64^[REPLACE] this.outputCharsetEncoder = outputCharset.newEncoder (  ) ;^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[ADD]^^62^^^^^51^64^[ADD] this.outputCharsetEncoder = outputCharset.newEncoder (  ) ;^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^this.outputCharsetEncoder = this;^60^^^^^51^64^[REPLACE] this.outputCharsetEncoder = null;^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^this.outputCharsetEncoder = false;^60^^^^^51^64^[REPLACE] this.outputCharsetEncoder = null;^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[ADD]^^60^^^^^51^64^[ADD] this.outputCharsetEncoder = null;^[METHOD] <init> [TYPE] Charset,boolean) [PARAMETER] CodeConsumer consumer Charset outputCharset boolean validation [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^this ( consumer, outputCharset, false ) ;^67^^^^^66^68^[REPLACE] this ( consumer, outputCharset, true ) ;^[METHOD] <init> [TYPE] Charset) [PARAMETER] CodeConsumer consumer Charset outputCharset [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  Charset outputCharset  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^this ( consumer, true, false ) ;^71^^^^^70^72^[REPLACE] this ( consumer, null, false ) ;^[METHOD] <init> [TYPE] CodeConsumer) [PARAMETER] CodeConsumer consumer [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.addIdentifier ( str ) ;^75^^^^^74^76^[REPLACE] cc.add ( str ) ;^[METHOD] add [TYPE] void [PARAMETER] String str [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean false  true  validation  [TYPE]  String str  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .addNumber (  )  ;^79^^^^^78^80^[REPLACE] cc.addIdentifier ( identifierEscape ( identifier )  ) ;^[METHOD] addIdentifier [TYPE] void [PARAMETER] String identifier [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean false  true  validation  [TYPE]  String identifier  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^83^^^^^82^84^[REPLACE] add ( n, Context.OTHER ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean false  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node n 
[REPLACE]^if  ( !cc .endSourceMapping ( last )   )  {^87^^^^^86^614^[REPLACE] if  ( !cc.continueProcessing (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;^88^^^^^86^614^[REPLACE] return;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int type = next.getType (  ) ;^91^^^^^86^614^[REPLACE] int type = n.getType (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^91^^^^^86^614^[ADD] int type = n.getType (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^String opstr = NodeUtil.opToStr ( precedence ) ;^92^^^^^86^614^[REPLACE] String opstr = NodeUtil.opToStr ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^int childCount = n.getChildCount (  ) ;^92^93^^^^86^614^[ADD] String opstr = NodeUtil.opToStr ( type ) ; int childCount = n.getChildCount (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int childCount = next.getChildCount (  ) ;^93^^^^^86^614^[REPLACE] int childCount = n.getChildCount (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node first = next.getFirstChild (  ) ;^94^^^^^86^614^[REPLACE] Node first = n.getFirstChild (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node last = next.getLastChild (  ) ;^95^^^^^86^614^[REPLACE] Node last = n.getLastChild (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^95^^^^^86^614^[ADD] Node last = n.getLastChild (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( opstr == null ) {^98^^^^^86^614^[REPLACE] if  ( opstr != null && first != last )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^98^99^100^101^102^86^614^[ADD] if  ( opstr != null && first != last )  { Preconditions.checkState ( childCount == 2 ) ; int p = NodeUtil.precedence ( type ) ; addLeftExpr ( first, p, context ) ; cc.addOp ( opstr, true ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( last.getType (  )  == type || NodeUtil.isAssociative ( type )  )  {^111^112^^^^86^614^[REPLACE] if  ( last.getType (  )  == type && NodeUtil.isAssociative ( type )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^}  if  (  NodeUtil.isAssignmentOp ( last )  )  {^114^^^^^86^614^[REPLACE] } else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^}   addExpr ( last, p, rhsContext ) ;addExpr ( last, p + 1, rhsContext ) ;^114^115^116^117^118^86^614^[ADD] else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {  addExpr ( last, p, rhsContext ) ; } else { addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last,type + 1, rhsContext ) ;^118^^^^^114^119^[REPLACE] addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, type, rhsContext ) ;^116^^^^^86^614^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^116^^^^^86^614^[ADD] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, type, rhsContext ) ;^113^^^^^111^119^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^}  else {^114^^^^^86^614^[REPLACE] } else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExtyper ( last, p + 1, rhsContext ) ;^118^^^^^114^119^[REPLACE] addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;^120^^^^^86^614^[REPLACE] return;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = NodeUtil.opToStr ( type ) ;^100^^^^^86^614^[REPLACE] int p = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Context rhsContext = getContextForNoInOperator ( STATEMENT ) ;^106^^^^^86^614^[REPLACE] Context rhsContext = getContextForNoInOperator ( context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( last.getIntProp (  )  == type || NodeUtil.isAssociative ( type )  )  {^111^112^^^^86^614^[REPLACE] if  ( last.getType (  )  == type && NodeUtil.isAssociative ( type )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^111^112^113^114^^86^614^[ADD] if  ( last.getType (  )  == type && NodeUtil.isAssociative ( type )  )  { addExpr ( last, p, rhsContext ) ; } else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^}  if  ( NodeUtil.isAssignmentOp ( n )  || NodeUtil.isAssignmentOp ( last )  )  {^114^^^^^86^614^[REPLACE] } else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, p, context ) ;^116^^^^^86^614^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^add ( ";" ) ;^116^^^^^86^614^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( next, p, rhsContext ) ;^113^^^^^111^119^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, p  &  1, rhsContext ) ;^118^^^^^114^119^[REPLACE] addExpr ( last, p + 1, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^118^^^^^114^119^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( last, p + 1, rhsContext ) ;^116^^^^^86^614^[REPLACE] addExpr ( last, p, rhsContext ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = NodeUtil.precedence ( precedence ) ;^100^^^^^86^614^[REPLACE] int p = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Context rhsContext = getContextForNoInOperator ( rhsContext ) ;^106^^^^^86^614^[REPLACE] Context rhsContext = getContextForNoInOperator ( context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endSourceMapping ( n ) ;^123^^^^^86^614^[REPLACE] cc.startSourceMapping ( n ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( catchblock ==last )  {^137^^^^^86^614^[REPLACE] if  ( catchblock != null )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( last ) ;^138^^^^^86^614^[REPLACE] add ( catchblock ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( childCount  &&  3 + 0 )  {^141^^^^^86^614^[REPLACE] if  ( childCount == 3 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( "finally" ) ;add ( last, Context.PRESERVE_BLOCK ) ;^141^142^143^144^^86^614^[ADD] if  ( childCount == 3 )  { add ( "finally" ) ; add ( last, Context.PRESERVE_BLOCK ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^142^^^^^86^614^[REPLACE] add ( "finally" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next, Context.PRESERVE_BLOCK ) ;^143^^^^^86^614^[REPLACE] add ( last, Context.PRESERVE_BLOCK ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first.getNext (  ) .getType (  )   ==  Token.EMPTY )  {^150^^^^^86^614^[REPLACE] if  ( first.getNext (  ) .getType (  )  != Token.EMPTY )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^151^152^^^^86^614^[REPLACE] throw new Error ( "Catch conditions not suppored because I think" + " that it may be a netscape only feature." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^151^152^^^^86^614^[ADD] throw new Error ( "Catch conditions not suppored because I think" + " that it may be a netscape only feature." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( childCount  !=  1 )  {^173^^^^^86^614^[REPLACE] if  ( childCount == 1 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Preconditions.checkState ( postProp  !=  0L ) ;^176^^^^^173^177^[REPLACE] Preconditions.checkState ( childCount == 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^174^^^^^86^614^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (next == this )  {^182^^^^^86^614^[REPLACE] if  ( first != null )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^183^^^^^86^614^[REPLACE] add ( "var " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( first, true, getContextForNoInOperator ( context )  ) ;^184^^^^^86^614^[REPLACE] addList ( first, false, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( first, false, getContextForNoInOperator ( rhsContext )  ) ;^184^^^^^86^614^[REPLACE] addList ( first, false, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first != nextull || first.getType (  )  == Token.EMPTY )  {^189^^^^^86^614^[REPLACE] if  ( first == null || first.getType (  )  == Token.EMPTY )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^addIdentifier ( n.getString (  )  ) ;Preconditions.checkState ( childCount == 1 ) ;addIdentifier ( n.getString (  )  ) ;^189^190^191^192^193^86^614^[ADD] if  ( first == null || first.getType (  )  == Token.EMPTY )  { addIdentifier ( n.getString (  )  ) ; } else { Preconditions.checkState ( childCount == 1 ) ; addIdentifier ( n.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first.getType (  )   ||  Token.COMMA )  {^195^^^^^189^202^[REPLACE] if  ( first.getType (  )  == Token.COMMA )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, 3, getContextForNoInOperator ( context )  ) ;^200^^^^^189^202^[REPLACE] addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( first, false, getContextForNoInOperator ( context )  ) ;^200^^^^^189^202^[REPLACE] addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( next, NodeUtil.precedence ( Token.ASSIGN )  ) ;^196^^^^^189^202^[REPLACE] addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^196^^^^^189^202^[ADD] addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, NodeUtil .isAssociative ( p )   ) ;^196^^^^^189^202^[REPLACE] addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addIdentifier ( next.getString (  )  ) ;^190^^^^^86^614^[REPLACE] addIdentifier ( n.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first.getType (  )   &&  Token.COMMA )  {^195^^^^^86^614^[REPLACE] if  ( first.getType (  )  == Token.COMMA )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, 1, getContextForNoInOperator ( context )  ) ;^200^^^^^195^201^[REPLACE] addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, 0, getContextForNoInOperator ( rhsContext )  ) ;^200^^^^^195^201^[REPLACE] addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^String opstr = NodeUtil.opToStr ( type ) ;^200^^^^^195^201^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( next, NodeUtil.precedence ( Token.ASSIGN )  ) ;^196^^^^^86^614^[REPLACE] addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first.getType (  )  == Token.COMMA )  { addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^196^^^^^86^614^[REPLACE] addExpr ( first, NodeUtil.precedence ( Token.ASSIGN )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( first .getString (  )   != Token.STRING && last^252^253^^^^86^614^[REPLACE] if  ( first.getType (  )  != Token.STRING || last.getType (  )  != Token.STRING )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^throw new Error ( "Unexpected EXPR_VOID. Should be EXPR_RESULT." ) ; ;^254^^^^^252^255^[REPLACE] throw new Error ( "Expected children to be strings" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( childCount  !=  2 )  {^260^^^^^86^614^[REPLACE] if  ( childCount == 2 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^260^261^262^263^264^86^614^[ADD] if  ( childCount == 2 )  { add ( regexp + last.getString (  )  ) ; } else { Preconditions.checkState ( childCount == 1 ) ; add ( regexp ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Preconditions .checkState ( validation )  ;^263^^^^^260^265^[REPLACE] Preconditions.checkState ( childCount == 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^263^^^^^260^265^[ADD] Preconditions.checkState ( childCount == 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^264^^^^^260^265^[REPLACE] add ( regexp ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( regexp  ^  last.getString (  )  ) ;^261^^^^^86^614^[REPLACE] add ( regexp + last.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( regexp + next.getString (  )  ) ;^261^^^^^86^614^[REPLACE] add ( regexp + last.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( validation )  {^282^^^^^86^614^[REPLACE] if  ( funcNeedsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( "if ( " ) ;^283^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( validation )  {^293^^^^^86^614^[REPLACE] if  ( funcNeedsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " ) ;^294^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( !validation )  {^302^^^^^86^614^[REPLACE] if  ( !stripBlock )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^302^303^304^^^86^614^[ADD] if  ( !stripBlock )  { cc.beginBlock (  ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endBlock (  ) ;^303^^^^^86^614^[REPLACE] cc.beginBlock (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )   !=  Token.VAR )  {^309^^^^^86^614^[REPLACE] if  ( c.getType (  )  == Token.VAR )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .endStatement ( true )  ;^310^^^^^86^614^[REPLACE] cc.endStatement (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )   ||  Token.FUNCTION )  {^313^^^^^86^614^[REPLACE] if  ( c.getType (  )  == Token.FUNCTION )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.beginBlock (  ) ;^314^^^^^86^614^[REPLACE] cc.maybeLineBreak (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^314^^^^^86^614^[ADD] cc.maybeLineBreak (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( type  !=  Token.SCRIPT )  {^319^^^^^86^614^[REPLACE] if  ( type == Token.SCRIPT )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .maybeLineBreak (  )  ;^320^^^^^86^614^[REPLACE] cc.notePreferredLineBreak (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( stripBlock )  {^323^^^^^86^614^[REPLACE] if  ( !stripBlock )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^cc.endBlock ( context == Context.STATEMENT ) ;^323^324^325^^^86^614^[ADD] if  ( !stripBlock )  { cc.endBlock ( context == Context.STATEMENT ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endBlock ( rhsContext  &&  Context.STATEMENT ) ;^324^^^^^86^614^[REPLACE] cc.endBlock ( context == Context.STATEMENT ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (postProp  !=  4 )  {^330^^^^^86^614^[REPLACE] if  ( childCount == 4 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Preconditions.checkState ( childCount  || postProp ) ;^345^^^^^330^353^[REPLACE] Preconditions.checkState ( childCount == 3 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^Preconditions.checkState ( first.getNext (  ) .getType (  )  == Token.BLOCK && first.getNext (  ) .getChildCount (  )  <= 1 ) ;^345^^^^^330^353^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^346^^^^^330^353^[REPLACE] add ( "for ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^347^^^^^330^353^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^348^^^^^330^353^[REPLACE] add ( "in" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( first.getNext (  )  ) ;^348^349^^^^330^353^[ADD] add ( "in" ) ; add ( first.getNext (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next.getNext (  )  ) ;^349^^^^^330^353^[REPLACE] add ( first.getNext (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " ) ;^350^^^^^330^353^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^351^352^^^^330^353^[REPLACE] addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^351^352^^^^330^353^[ADD] addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^last, getContextForNonEmptyExpression ( rhsContext ) , false ) ;^352^^^^^330^353^[REPLACE] last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^352^^^^^330^353^[ADD] last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( next.getType (  )   !=  Token.VAR )  {^332^^^^^86^614^[REPLACE] if  ( first.getType (  )  == Token.VAR )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, 0 + 0, Context.IN_FOR_INIT_CLAUSE ) ;^335^^^^^332^336^[REPLACE] addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next, Context.IN_FOR_INIT_CLAUSE ) ;^333^^^^^86^614^[REPLACE] add ( first, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( first, 0 - 2, Context.IN_FOR_INIT_CLAUSE ) ;^335^^^^^332^336^[REPLACE] addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^333^^^^^86^614^[ADD] add ( first, Context.IN_FOR_INIT_CLAUSE ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( true )  {^383^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( "if ( " ) ;^384^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( funcNeedsParens )  {^387^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( " ) " ) ;^387^388^389^^^86^614^[ADD] if  ( needsParens )  { add ( " ) " ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " ) ;^388^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^add ( ";" ) ;^388^^^^^86^614^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (type  ==  0 >>> 3 )  {^419^^^^^86^614^[REPLACE] if  ( postProp != 0 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.addOp ( o, true ) ;^423^^^^^419^425^[REPLACE] cc.addOp ( o, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REMOVE]^add ( ";" ) ;^423^^^^^419^425^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^424^^^^^419^425^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addLeftExpr ( first, NodeUtil.precedence ( precedence ) , context ) ;^420^^^^^86^614^[REPLACE] addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^420^^^^^86^614^[ADD] addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.addOp ( o, true ) ;^421^^^^^86^614^[REPLACE] cc.addOp ( o, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^421^^^^^86^614^[ADD] cc.addOp ( o, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( validation )  {^440^^^^^86^614^[REPLACE] if  ( ambiguousElseClause )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endBlock (  ) ;^441^^^^^86^614^[REPLACE] cc.beginBlock (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( validation )  {^448^^^^^86^614^[REPLACE] if  ( hasElse )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^448^449^450^451^452^86^614^[ADD] if  ( hasElse )  { addNonEmptyExpression ( first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, false ) ; add ( "else" ) ; addNonEmptyExpression (^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, true ) ;^455^^^^^448^457^[REPLACE] addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( next.getNext (  ) , Context.OTHER, false ) ;^455^^^^^448^457^[REPLACE] addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Preconditions .checkState ( funcNeedsParens )  ;^456^^^^^448^457^[REPLACE] Preconditions.checkState ( childCount == 2 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, true ) ;^449^450^^^^86^614^[REPLACE] addNonEmptyExpression ( first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^first.getType (  ) , Context.BEFORE_DANGLING_ELSE, false ) ;^450^^^^^86^614^[REPLACE] first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^451^^^^^86^614^[REPLACE] add ( "else" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^452^453^^^^86^614^[REPLACE] addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^last, getContextForNonEmptyExpression ( context ) , true ) ;^453^^^^^86^614^[REPLACE] last, getContextForNonEmptyExpression ( context ) , false ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( stripBlock )  {^459^^^^^86^614^[REPLACE] if  ( ambiguousElseClause )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.beginBlock (  ) ;^460^^^^^86^614^[REPLACE] cc.endBlock (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( postProp  &&  1 )  {^475^^^^^86^614^[REPLACE] if  ( childCount == 1 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^476^^^^^86^614^[REPLACE] add ( " " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^476^^^^^86^614^[ADD] add ( " " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^477^^^^^86^614^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( childCount  !=  2 )  {^491^^^^^86^614^[REPLACE] if  ( childCount == 1 )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( " " ) ;add ( first ) ;^491^492^493^494^^86^614^[ADD] if  ( childCount == 1 )  { add ( " " ) ; add ( first ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^492^^^^^86^614^[REPLACE] add ( " " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^492^^^^^86^614^[ADD] add ( " " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( next ) ;^493^^^^^86^614^[REPLACE] add ( first ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  validation )  {^500^^^^^86^614^[REPLACE] if  ( type == Token.EXPR_VOID && validation )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^501^^^^^86^614^[REPLACE] throw new Error ( "Unexpected EXPR_VOID. Should be EXPR_RESULT." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( singleq < doubleq )  {^515^^^^^86^614^[REPLACE] if  ( NodeUtil.containsCall ( first )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^precedence = NodeUtil.precedence ( first.getType (  )  )   |  1;^516^^^^^86^614^[REPLACE] precedence = NodeUtil.precedence ( first.getType (  )  )  + 1;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( next == this )  {^522^^^^^86^614^[REPLACE] if  ( next != null )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( "if ( " ) ;^523^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( n ) ;^524^^^^^86^614^[REPLACE] addList ( next ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( " ) " ) ;^524^525^^^^86^614^[ADD] addList ( next ) ; add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " ) ;^525^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( true )  {^543^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^543^544^545^^^86^614^[ADD] if  ( needsParens )  { add ( " ( " ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( "if ( " ) ;^544^^^^^86^614^[REPLACE] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^544^^^^^86^614^[ADD] add ( " ( " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c  ==  first )  {^548^^^^^86^614^[REPLACE] if  ( c != first )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement (  ) ;^549^^^^^86^614^[REPLACE] cc.listSeparator (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^549^^^^^86^614^[ADD] cc.listSeparator (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )  == Token.STRING &&   c.getString (  )   &&^554^555^556^557^^86^614^[REPLACE] if  ( c.getType (  )  == Token.STRING && !TokenStream.isKeyword ( c.getString (  )  )  && TokenStream.isJSIdentifier ( c.getString (  )  )  &&^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( catchblock, 0 ) ;^562^^^^^554^563^[REPLACE] addExpr ( c, 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( catchblock.getString (  )  ) ;^560^^^^^554^563^[REPLACE] add ( c.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( c.getType (  )  ) ;^560^^^^^554^563^[REPLACE] add ( c.getString (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( funcNeedsParens )  {^568^^^^^86^614^[REPLACE] if  ( needsParens )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " ) ;^569^^^^^86^614^[REPLACE] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^569^^^^^86^614^[ADD] add ( " ) " ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node catchblock = first; c == null; c = c.getNext (  )  )  {^305^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )   &&  Token.VAR )  {^309^^^^^86^614^[REPLACE] if  ( c.getType (  )  == Token.VAR )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endCaseBody (  ) ;^310^^^^^86^614^[REPLACE] cc.endStatement (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .notePreferredLineBreak (  )  ;^314^^^^^86^614^[REPLACE] cc.maybeLineBreak (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( type  &&  Token.SCRIPT )  {^319^^^^^86^614^[REPLACE] if  ( type == Token.SCRIPT )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^319^320^321^^^86^614^[ADD] if  ( type == Token.SCRIPT )  { cc.notePreferredLineBreak (  ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.maybeLineBreak (  ) ;^320^^^^^86^614^[REPLACE] cc.notePreferredLineBreak (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c = first; c == null; c = c.getNext (  ) .getNext (  )  )  {^547^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  ) .getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^547^548^549^550^^86^614^[ADD] for  ( Node c = first; c != null; c = c.getNext (  ) .getNext (  )  )  { if  ( c != first )  { cc.listSeparator (  ) ; }^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (catchblock  ==  first )  {^548^^^^^86^614^[REPLACE] if  ( c != first )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( catchblock.getType (  )  == Token.STRING && TokenStream.isKeyword ( c.getString (  )  )  && TokenStream.isJSIdentifier ( c.getString (  )  )  &&^554^555^556^557^^86^614^[REPLACE] if  ( c.getType (  )  == Token.STRING && !TokenStream.isKeyword ( c.getString (  )  )  && TokenStream.isJSIdentifier ( c.getString (  )  )  &&^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( c, 3 ) ;^562^^^^^554^563^[REPLACE] addExpr ( c, 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^562^^^^^554^563^[ADD] addExpr ( c, 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c = n; c != null; c = c.getNext (  )  )  { add ( c ) ; ;^305^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^305^306^^^^86^614^[ADD] for  ( Node c = first; c != null; c = c.getNext (  )  )  { add ( c, Context.STATEMENT ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^precedence = NodeUtil.precedence ( first.getType (  )  )   &  3;^516^^^^^86^614^[REPLACE] precedence = NodeUtil.precedence ( first.getType (  )  )  + 1;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c = n; c != null; c = c.getNext (  )  )  { add ( c ) ; ;^547^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  ) .getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node catchblock = next.getNext (  ) .getFirstChild (  ) ;^136^^^^^86^614^[REPLACE] Node catchblock = first.getNext (  ) .getFirstChild (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int p = NodeUtil.opToStr ( type ) ;^242^^^^^86^614^[REPLACE] int p = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^String regexp = regexpEscape ( next .getLastChild (  )  , outputCharsetEncoder ) ;^257^^^^^86^614^[REPLACE] String regexp = regexpEscape ( first.getString (  ) , outputCharsetEncoder ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^257^^^^^86^614^[ADD] String regexp = regexpEscape ( first.getString (  ) , outputCharsetEncoder ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean funcNeedsParens =  (rhsContext  !=  Context.START_OF_EXPR ) ;^281^^^^^86^614^[REPLACE] boolean funcNeedsParens =  ( context == Context.START_OF_EXPR ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean stripBlock = n.isSyntheticBlock (  )  && (  ( context != Context.PRESERVE_BLOCK )  ;^300^301^^^^86^614^[REPLACE] boolean stripBlock = n.isSyntheticBlock (  )  || (  ( context != Context.PRESERVE_BLOCK )  &&  ( n.getChildCount (  )  < 2 )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c = next; c != null; c = c.getNext (  )  )  {^305^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean needsParens =  ( first.getType (  )   !=  Token.NUMBER ) ;^382^^^^^86^614^[REPLACE] boolean needsParens =  ( first.getType (  )  == Token.NUMBER ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^String o = precedence  !=  Token.INC ? "++" : "--";^415^^^^^86^614^[REPLACE] String o = type == Token.INC ? "++" : "--";^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^415^416^^^^86^614^[ADD] String o = type == Token.INC ? "++" : "--"; int postProp = n.getIntProp ( Node.INCRDECR_PROP, 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int postProp = next.getIntProp ( Node.INCRDECR_PROP, 0 >>> 4 ) ;^416^^^^^86^614^[REPLACE] int postProp = n.getIntProp ( Node.INCRDECR_PROP, 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^416^^^^^86^614^[ADD] int postProp = n.getIntProp ( Node.INCRDECR_PROP, 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean hasElse =postProp  ||  3;^437^^^^^86^614^[REPLACE] boolean hasElse = childCount == 3;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean ambiguousElseClause = context == Context.BEFORE_DANGLING_ELSE  ^  !hasElse;^438^439^^^^86^614^[REPLACE] boolean ambiguousElseClause = context == Context.BEFORE_DANGLING_ELSE && !hasElse;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^438^439^^^^86^614^[ADD] boolean ambiguousElseClause = context == Context.BEFORE_DANGLING_ELSE && !hasElse;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int.opToStr = NodeUtil.precedence ( precedence ) ;^510^^^^^86^614^[REPLACE] int precedence = NodeUtil.precedence ( type ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node next = next.getNext (  ) ;^521^^^^^86^614^[REPLACE] Node next = first.getNext (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean needsParens =  ( context  !=  Context.START_OF_EXPR ) ;^542^^^^^86^614^[REPLACE] boolean needsParens =  ( context == Context.START_OF_EXPR ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c = next; c != null; c = c.getNext (  ) .getNext (  )  )  {^547^^^^^86^614^[REPLACE] for  ( Node c = first; c != null; c = c.getNext (  ) .getNext (  )  )  {^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^throw new Error ( "Unexpected EXPR_VOID. Should be EXPR_RESULT." ) ; ;^254^^^^^86^614^[REPLACE] throw new Error ( "Expected children to be strings" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[ADD]^^254^^^^^86^614^[ADD] throw new Error ( "Expected children to be strings" ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^throw new Error ( "Expected children to be strings" ) ; ;^501^^^^^86^614^[REPLACE] throw new Error ( "Unexpected EXPR_VOID. Should be EXPR_RESULT." ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^610^^^^^86^614^[REPLACE] throw new Error ( "Unknown type " + type + "\n" + n.toStringTree (  )  ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endSourceMapping ( next ) ;^613^^^^^86^614^[REPLACE] cc.endSourceMapping ( n ) ;^[METHOD] add [TYPE] void [PARAMETER] Node n Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node c  catchblock  first  last  n  next  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String o  opstr  regexp  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int childCount  p  postProp  precedence  type  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node nodeToProcessodeToProcess = n;^625^^^^^624^671^[REPLACE] Node nodeToProcess = n;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  n .getString (  )   != Token.BLOCK )  {^627^^^^^624^671^[REPLACE] if  ( !allowNonBlockChild && n.getType (  )  != Token.BLOCK )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^627^628^629^630^^624^671^[ADD] if  ( !allowNonBlockChild && n.getType (  )  != Token.BLOCK )  { if  ( validation )  { throw new Error ( "Missing BLOCK child." ) ; }^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( singleq < doubleq )  {^628^^^^^624^671^[REPLACE] if  ( validation )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^throw new Error ( "Expected children to be strings" ) ; ;^629^^^^^624^671^[REPLACE] throw new Error ( "Missing BLOCK child." ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^629^^^^^624^671^[REPLACE] throw new Error ( "Missing BLOCK child." ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^629^^^^^624^671^[ADD] throw new Error ( "Missing BLOCK child." ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( n.getType (  )   &&  Token.BLOCK )  {^634^^^^^624^671^[REPLACE] if  ( n.getType (  )  == Token.BLOCK )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( count  ||  0 )  {^636^^^^^624^671^[REPLACE] if  ( count == 0 )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;^638^^^^^624^671^[REPLACE] return;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( count  !=  1 )  {^641^^^^^624^671^[REPLACE] if  ( count == 1 )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  firstAndOnlyChild.getType (  )  == Token.DO )  {^646^647^^^^624^671^[REPLACE] if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION || firstAndOnlyChild.getType (  )  == Token.DO )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^nodeToProcess =  n;^655^^^^^646^656^[REPLACE] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^655^^^^^646^656^[ADD] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;^652^^^^^646^656^[REPLACE] return;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^nodeToProcess =  n;^655^^^^^624^671^[REPLACE] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;^652^^^^^624^671^[REPLACE] return;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node firstAndOnlyChild = getFirstNonEmptyChild ( nodeToProcess ) ;^645^^^^^624^671^[REPLACE] Node firstAndOnlyChild = getFirstNonEmptyChild ( n ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^645^^^^^624^671^[ADD] Node firstAndOnlyChild = getFirstNonEmptyChild ( n ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( nodeToProcess.getType (  )  == Token.FUNCTION ) {^646^647^^^^624^671^[REPLACE] if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION || firstAndOnlyChild.getType (  )  == Token.DO )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int count = getNonEmptyChildCount ( nodeToProcess ) ;^635^^^^^624^671^[REPLACE] int count = getNonEmptyChildCount ( n ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^cc.endStatement ( true ) ;return;^636^637^638^639^^624^671^[ADD] if  ( count == 0 )  { cc.endStatement ( true ) ; return; }^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( count  ||  1 )  {^641^^^^^624^671^[REPLACE] if  ( count == 1 )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^641^642^^^645^624^671^[ADD] if  ( count == 1 )  {  Node firstAndOnlyChild = getFirstNonEmptyChild ( n ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^646^647^648^649^650^624^671^[ADD] if  ( firstAndOnlyChild.getType (  )  == Token.FUNCTION || firstAndOnlyChild.getType (  )  == Token.DO )  { cc.beginBlock (  ) ; add ( firstAndOnlyChild, Context.STATEMENT ) ; cc.maybeLineBreak (  ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^nodeToProcess =  null;^655^^^^^646^656^[REPLACE] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^655^^^^^624^671^[ADD] nodeToProcess = firstAndOnlyChild;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( nodeToProcess.getType (  )   &&  Token.EMPTY )  {^660^^^^^624^671^[REPLACE] if  ( nodeToProcess.getType (  )  == Token.EMPTY )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( n.getType (  )   &&  Token.VAR )  {^667^^^^^660^670^[REPLACE] if  ( nodeToProcess.getType (  )  == Token.VAR )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endCaseBody (  ) ;^668^^^^^660^670^[REPLACE] cc.endStatement (  ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement ( false ) ;^661^^^^^624^671^[REPLACE] cc.endStatement ( true ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^^661^^^^^624^671^[ADD] cc.endStatement ( true ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( nodeToProcess.getType (  )   !=  Token.VAR )  {^667^^^^^624^671^[REPLACE] if  ( nodeToProcess.getType (  )  == Token.VAR )  {^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[ADD]^cc.endStatement (  ) ;^667^668^669^^^624^671^[ADD] if  ( nodeToProcess.getType (  )  == Token.VAR )  { cc.endStatement (  ) ; }^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endCaseBody (  ) ;^668^^^^^624^671^[REPLACE] cc.endStatement (  ) ;^[METHOD] addNonEmptyExpression [TYPE] void [PARAMETER] Node n Context context boolean allowNonBlockChild [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node firstAndOnlyChild  n  nodeToProcess  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int count  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( n, minPrecedence, rhsContext ) ;^683^^^^^682^684^[REPLACE] addExpr ( n, minPrecedence, context ) ;^[METHOD] addLeftExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REMOVE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^683^^^^^682^684^[REMOVE] ^[METHOD] addLeftExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addExpr ( n, minPrecedence, context ) ;^687^^^^^686^688^[REPLACE] addExpr ( n, minPrecedence, Context.OTHER ) ;^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REMOVE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^687^^^^^686^688^[REMOVE] ^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  ( NodeUtil.precedence ( n.getType (  )  )  < minPrecedence )  && (  ( context == Context.IN_FOR_INIT_CLAUSE )  && ( n.getType (  )  == Token.IN )  )  ) {^691^692^693^^^690^700^[REPLACE] if  (  ( NodeUtil.precedence ( n.getType (  )  )  < minPrecedence )  || (  ( context == Context.IN_FOR_INIT_CLAUSE )  && ( n.getType (  )  == Token.IN )  )  ) {^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( n, rhsContext ) ;^698^^^^^690^700^[REPLACE] add ( n, context ) ;^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( "if ( " ) ;^694^^^^^690^700^[REPLACE] add ( " ( " ) ;^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[ADD]^add ( n, clearContextForNoInOperator ( context )  ) ;^694^695^^^^690^700^[ADD] add ( " ( " ) ; add ( n, clearContextForNoInOperator ( context )  ) ;^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^695^^^^^690^700^[REPLACE] add ( n, clearContextForNoInOperator ( context )  ) ;^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( n, clearContextForNoInOperator ( rhsContext )  ) ;^695^^^^^690^700^[REPLACE] add ( n, clearContextForNoInOperator ( context )  ) ;^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( " ( " ) ;^696^^^^^690^700^[REPLACE] add ( " ) " ) ;^[METHOD] addExpr [TYPE] void [PARAMETER] Node n int minPrecedence Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  Node n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int minPrecedence  [TYPE]  char[] HEX_CHARS 
[REPLACE]^addList ( firstInList, false, Context.OTHER ) ;^703^^^^^702^704^[REPLACE] addList ( firstInList, true, Context.OTHER ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList 
[REPLACE]^addList ( firstInList, true, Context.OTHER ) ;^707^^^^^706^708^[REPLACE] addList ( firstInList, isArrayOrFunctionArgument, Context.OTHER ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList 
[REPLACE]^if  ( c != first )  {^714^^^^^710^721^[REPLACE] if  ( isFirst )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[ADD]^^714^715^716^717^718^710^721^[ADD] if  ( isFirst )  { addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ; } else { cc.listSeparator (  ) ; addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^cc.endStatement (  ) ;^717^^^^^710^721^[REPLACE] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^addExpr ( n, stripBlock ? 2 : 0 ) ;^718^^^^^710^721^[REPLACE] addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 - 3 : 0, lhsContext ) ;^715^^^^^710^721^[REPLACE] addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[ADD]^^715^^^^^710^721^[ADD] addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^for  ( Node firstInList = firstInList; n == null; n = n.getNext (  )  )  {^712^^^^^710^721^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[ADD]^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;cc.listSeparator (  ) ;addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^714^715^716^717^718^710^721^[ADD] if  ( isFirst )  { addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ; } else { cc.listSeparator (  ) ; addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^cc .startSourceMapping ( n )  ;^717^^^^^710^721^[REPLACE] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^addExpr ( n, isArrayOrFunctionArgument ? 4 : 0 ) ;^718^^^^^710^721^[REPLACE] addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[ADD]^^718^^^^^710^721^[ADD] addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 * 4 : 0, STATEMENT ) ;^715^^^^^710^721^[REPLACE] addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^boolean isFirst = n  ||  firstInList;^713^^^^^710^721^[REPLACE] boolean isFirst = n == firstInList;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^for  ( Node n =  firstIfirstInListList; firstInList !^712^^^^^710^721^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^for  ( Node n = n; n != null; n = n.getNext (  )  )  {^712^^^^^710^721^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[ADD]^^712^713^714^715^^710^721^[ADD] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  { boolean isFirst = n == firstInList; if  ( isFirst )  { addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^boolean isFirst = n  !=  firstInList;^713^^^^^710^721^[REPLACE] boolean isFirst = n == firstInList;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node firstInList  n 
[REPLACE]^int nextSlot = 0 - 3;^734^^^^^733^752^[REPLACE] int nextSlot = 0;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^^734^735^^^^733^752^[ADD] int nextSlot = 0; int nextSkipSlot = 0;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int nextSkipSlot = 0 + 0;^735^^^^^733^752^[REPLACE] int nextSkipSlot = 0;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^while  ( skipIndexes != false && nextSkipSlot < skipIndexes.length /  2 )  {^737^^^^^733^752^[REPLACE] while  ( skipIndexes != null && nextSkipSlot < skipIndexes.length )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (nextSkipSlot  &&  skipIndexes[nextSkipSlot] )  {^738^^^^^733^752^[REPLACE] if  ( nextSlot == skipIndexes[nextSkipSlot] )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc .startSourceMapping ( n )  ;^739^^^^^733^752^[REPLACE] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( nextSlot  !=  skipIndexes[nextSkipSlot] )  {^738^^^^^733^752^[REPLACE] if  ( nextSlot == skipIndexes[nextSkipSlot] )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement (  ) ;^739^^^^^733^752^[REPLACE] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^^739^740^^^^733^752^[ADD] cc.listSeparator (  ) ; nextSlot++;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( n  ==  firstInList )  {^746^^^^^733^752^[REPLACE] if  ( n != firstInList )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^^746^747^748^^^733^752^[ADD] if  ( n != firstInList )  { cc.listSeparator (  ) ; }^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endStatement (  ) ;^747^^^^^733^752^[REPLACE] cc.listSeparator (  ) ;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node n = firstInList; n == null; n = n.getNext (  )  )  {^736^^^^^733^752^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^^736^737^738^739^740^733^752^[ADD] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  { while  ( skipIndexes != null && nextSkipSlot < skipIndexes.length )  { if  ( nextSlot == skipIndexes[nextSkipSlot] )  { cc.listSeparator (  ) ; nextSlot++;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^while  ( skipIndexes != null && nextSkipSlot < skipIndexes.length (  )  )  {^737^^^^^733^752^[REPLACE] while  ( skipIndexes != null && nextSkipSlot < skipIndexes.length )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[ADD]^nextSlot++;^739^740^^^^733^752^[ADD] cc.listSeparator (  ) ; nextSlot++;^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( nextSlot  &&  skipIndexes[nextSkipSlot] )  {^738^^^^^733^752^[REPLACE] if  ( nextSlot == skipIndexes[nextSkipSlot] )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node n =  firstInullList; null !^736^^^^^733^752^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node n = n; n != null; n = n.getNext (  )  )  {^736^^^^^733^752^[REPLACE] for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[METHOD] addList [TYPE] void [PARAMETER] Node firstInList int[] skipIndexes [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node firstInList  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  int[] skipIndexes  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int nextSkipSlot  nextSlot  [TYPE]  char[] HEX_CHARS 
[REPLACE]^cc.endCaseBody (  ) ;^755^^^^^754^758^[REPLACE] cc.beginCaseBody (  ) ;^[METHOD] addCaseBody [TYPE] void [PARAMETER] Node caseBody [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node caseBody 
[REPLACE]^add ( ";" ) ;^756^^^^^754^758^[REPLACE] add ( caseBody ) ;^[METHOD] addCaseBody [TYPE] void [PARAMETER] Node caseBody [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node caseBody 
[REPLACE]^cc.beginCaseBody (  ) ;^757^^^^^754^758^[REPLACE] cc.endCaseBody (  ) ;^[METHOD] addCaseBody [TYPE] void [PARAMETER] Node caseBody [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node caseBody 
[ADD]^^757^^^^^754^758^[ADD] cc.endCaseBody (  ) ;^[METHOD] addCaseBody [TYPE] void [PARAMETER] Node caseBody [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node caseBody 
[REPLACE]^for  ( Node c = n; c == null; c = c.getNext (  )  )  {^761^^^^^760^764^[REPLACE] for  ( Node c = n; c != null; c = c.getNext (  )  )  {^[METHOD] addAllSiblings [TYPE] void [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^add ( ";" ) ;^762^^^^^760^764^[REPLACE] add ( c ) ;^[METHOD] addAllSiblings [TYPE] void [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c = n; c != null; c = c.getNext (  )  )  { add ( c ) ; ;^761^^^^^760^764^[REPLACE] for  ( Node c = n; c != null; c = c.getNext (  )  )  {^[METHOD] addAllSiblings [TYPE] void [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[ADD]^^761^762^763^^^760^764^[ADD] for  ( Node c = n; c != null; c = c.getNext (  )  )  { add ( c ) ; }^[METHOD] addAllSiblings [TYPE] void [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^Node next = first.getNext (  ) ;^761^^^^^760^764^[REPLACE] for  ( Node c = n; c != null; c = c.getNext (  )  )  {^[METHOD] addAllSiblings [TYPE] void [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^int singleq = 1, doubleq = 1;^768^^^^^767^794^[REPLACE] int singleq = 0, doubleq = 0;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int singleq = 0 >>> 1, doubleq = 0 >>> 1;^768^^^^^767^794^[REPLACE] int singleq = 0, doubleq = 0;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0; i < s.charAt (  )  - 2; i++ )  {^771^^^^^767^794^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^switch  ( s.charAt ( singleq )  )  {^772^^^^^767^794^[REPLACE] switch  ( s.charAt ( i )  )  {^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0 ; i < s.length (  ) ; i++ )  {^771^^^^^767^794^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^771^772^773^774^775^767^794^[ADD] for  ( int i = 0; i < s.length (  ) ; i++ )  { switch  ( s.charAt ( i )  )  { case '"': doubleq++; break; case '\'': singleq++; break; }^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^StringBuilder sb = new StringBuilder (  ) ;^778^^^^^767^794^[REPLACE] String doublequote, singlequote;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean ambiguousElseClause = context == Context.BEFORE_DANGLING_ELSE && !hasElse;^779^^^^^767^794^[REPLACE] char quote;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^779^^^^^767^794^[ADD] char quote;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (i  >=  doubleq )  {^780^^^^^767^794^[REPLACE] if  ( singleq < doubleq )  {^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^quote = '\''; ;^787^^^^^780^790^[REPLACE] quote = '\"';^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^singlequote = "\\\'"; ;^788^^^^^780^790^[REPLACE] doublequote = "\\\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^788^^^^^780^790^[ADD] doublequote = "\\\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^singlequote = "\\\'"; ;^789^^^^^780^790^[REPLACE] singlequote = "\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^quote = '\"'; ;^782^^^^^767^794^[REPLACE] quote = '\'';^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^doublequote = "\\\""; ;^783^^^^^767^794^[REPLACE] doublequote = "\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^doublequote = "\\\""; ;^784^^^^^767^794^[REPLACE] singlequote = "\\\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^783^784^^^^767^794^[ADD] doublequote = "\""; singlequote = "\\\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^quote = '\''; ;^787^^^^^767^794^[REPLACE] quote = '\"';^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^787^^^^^767^794^[ADD] quote = '\"';^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^singlequote = "\\\'"; ;^788^^^^^767^794^[REPLACE] doublequote = "\\\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^788^^^^^767^794^[ADD] doublequote = "\\\"";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^singlequote = "\\\'"; ;^789^^^^^767^794^[REPLACE] singlequote = "\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[ADD]^^789^^^^^767^794^[ADD] singlequote = "\'";^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return strEscape ( s, '/', "\"", "'", "\\", outputCharsetEncoder ) ;^792^793^^^^767^794^[REPLACE] return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[METHOD] jsString [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  char quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String doublequote  s  singlequote  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int doubleq  i  singleq  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^798^^^^^797^799^[REPLACE] return strEscape ( s, '/', "\"", "'", "\\", outputCharsetEncoder ) ;^[METHOD] regexpEscape [TYPE] String [PARAMETER] String s CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return regexpEscape ( s, false ) ;^805^^^^^804^806^[REPLACE] return regexpEscape ( s, null ) ;^[METHOD] regexpEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node last = n.getLastChild (  ) ;^814^^^^^813^870^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^815^^^^^813^870^[REPLACE] sb.append ( quote ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  (  ( s.charAt ( i - 1 )  == '-' || s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' || s.charAt ( i - 2 )  == ']' )  )  )  {^826^827^828^^^813^870^[REPLACE] if  ( i >= 2 && (  ( s.charAt ( i - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^831^^^^^826^832^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb.append ( "<\\" ) ;^829^^^^^826^832^[REPLACE] sb.append ( "\\>" ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  /  0.5  )  )  {^836^837^^^^813^870^[REPLACE] if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^836^837^838^839^840^813^870^[ADD] if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  { sb.append ( "<\\" ) ; } else { sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^840^^^^^836^841^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^840^^^^^836^841^[ADD] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^838^^^^^836^841^[REPLACE] sb.append ( "<\\" ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( outputCharsetEncoder == true )  {^846^^^^^813^870^[REPLACE] if  ( outputCharsetEncoder != null )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c > 0x1f ) {^857^^^^^846^865^[REPLACE] if  ( c > 0x1f && c <= 0x7f )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^appendHexJavaScriptRepresentation ( c, sb ) ;^863^^^^^846^865^[REPLACE] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REMOVE]^cc.endStatement (  ) ;^863^^^^^846^865^[REMOVE] ^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^858^^^^^846^865^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( singleq < doubleq )  {^847^^^^^813^870^[REPLACE] if  ( outputCharsetEncoder.canEncode ( c )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^appendHexJavaScriptRepresentation ( c, sb ) ;^851^^^^^847^852^[REPLACE] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^848^^^^^813^870^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REMOVE]^add ( ";" ) ;^848^^^^^813^870^[REMOVE] ^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( output  c    )  {^847^^^^^813^870^[REPLACE] if  ( outputCharsetEncoder.canEncode ( c )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^847^848^849^^851^813^870^[ADD] if  ( outputCharsetEncoder.canEncode ( c )  )  { sb.append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^848^^^^^813^870^[ADD] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c > 0x1f ) {^857^^^^^813^870^[REPLACE] if  ( c > 0x1f && c <= 0x7f )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^appendHexJavaScriptRepresentation ( c, sb ) ;^863^^^^^857^864^[REPLACE] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^863^^^^^857^864^[ADD] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^858^^^^^813^870^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0 ; i < s.length (  )  - 5; i++ )  {^816^^^^^813^870^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  (  ( s.charAt ( i - 1 )  == '-' || s.charAt ( i - 1 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' || s.charAt ( i - 1 )  == ']' )  )  )  {^826^827^828^^^813^870^[REPLACE] if  ( i >= 2 && (  ( s.charAt ( i - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^826^827^828^829^^813^870^[ADD] if  ( i >= 2 && (  ( s.charAt ( i - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  { sb.append ( "\\>" ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^831^^^^^826^832^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^829^^^^^826^832^[ADD] sb.append ( "\\>" ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( s.regionMatches ( false, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  %  0.5  )  )  {^836^837^^^^813^870^[REPLACE] if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^840^^^^^836^841^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^838^^^^^836^841^[ADD] sb.append ( "<\\" ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( outputCharsetEncoder == null )  {^846^^^^^813^870^[REPLACE] if  ( outputCharsetEncoder != null )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c > 0x1f || c <= 0x7f )  {^857^^^^^846^865^[REPLACE] if  ( c > 0x1f && c <= 0x7f )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^sb.append ( c ) ;^857^858^859^^^846^865^[ADD] if  ( c > 0x1f && c <= 0x7f )  { sb.append ( c ) ; } else {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^863^^^^^846^865^[ADD] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REMOVE]^add ( ";" ) ;^858^^^^^846^865^[REMOVE] ^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^sb .StringBuilder (  )  ;^848^^^^^813^870^[REPLACE] sb.append ( c ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REMOVE]^cc.endStatement (  ) ;^851^^^^^847^852^[REMOVE] ^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node last = n.getLastChild (  ) ;^817^^^^^813^870^[REPLACE] char c = s.charAt ( i ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^817^^^^^813^870^[ADD] char c = s.charAt ( i ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^boolean ambiguousElseClause = context == Context.BEFORE_DANGLING_ELSE && !hasElse;^835^^^^^813^870^[REPLACE] final String END_SCRIPT = "/script";^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0 ; i < s.length (  ) ; i++ )  {^816^^^^^813^870^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^char c = s .regionMatches ( funcNeedsParens , i , backslashEscape , i , i )  ;^817^^^^^813^870^[REPLACE] char c = s.charAt ( i ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^835^^^^^813^870^[ADD] final String END_SCRIPT = "/script";^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^868^^^^^813^870^[REPLACE] sb.append ( quote ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return sb .StringBuilder (  )  ;^869^^^^^813^870^[REPLACE] return sb.toString (  ) ;^[METHOD] strEscape [TYPE] String [PARAMETER] String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  quote  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (   s    )  {^874^^^^^872^892^[REPLACE] if  ( NodeUtil.isLatin ( s )  )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return i;^875^^^^^872^892^[REPLACE] return s;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node last = n.getLastChild (  ) ;^879^^^^^872^892^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^879^^^^^872^892^[ADD] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  (  c < 0x7F )  {^885^^^^^872^892^[REPLACE] if  ( c > 0x1F && c < 0x7F )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^appendHexJavaScriptRepresentation ( c, sb ) ;^888^^^^^872^892^[REPLACE] appendHexJavaScriptRepresentation ( sb, c ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^add ( ";" ) ;^886^^^^^872^892^[REPLACE] sb.append ( c ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0; i < s.length (  )  *  2; i++ )  {^880^^^^^872^892^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c > 0x1F ) {^885^^^^^872^892^[REPLACE] if  ( c > 0x1F && c < 0x7F )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^Node last = n.getLastChild (  ) ;^881^^^^^872^892^[REPLACE] char c = s.charAt ( i ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( int i = 0 ; i < s.length (  ) ; i++ )  {^880^^^^^872^892^[REPLACE] for  ( int i = 0; i < s.length (  ) ; i++ )  {^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^char c = s .regionMatches ( false , i , s , i , i )  ;^881^^^^^872^892^[REPLACE] char c = s.charAt ( i ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return sb.StringBuilder (  ) ;^891^^^^^872^892^[REPLACE] return sb.toString (  ) ;^[METHOD] identifierEscape [TYPE] String [PARAMETER] String s [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  String s  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^int i = 4;^896^^^^^895^903^[REPLACE] int i = 0;^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^896^^^^^895^903^[ADD] int i = 0;^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )   ==  Token.EMPTY )  {^898^^^^^895^903^[REPLACE] if  ( c.getType (  )  != Token.EMPTY )  {^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^898^899^900^^^895^903^[ADD] if  ( c.getType (  )  != Token.EMPTY )  { i++; }^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c = n.getLastChild (  ) ; c == null; c = c.getNext (  )  )  {^897^^^^^895^903^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[ADD]^^897^898^899^900^^895^903^[ADD] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { if  ( c.getType (  )  != Token.EMPTY )  { i++; }^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c .getString (  )    ==  Token.EMPTY )  {^898^^^^^895^903^[REPLACE] if  ( c.getType (  )  != Token.EMPTY )  {^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c =  n.getFirstChild (  ) ; null !^897^^^^^895^903^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^for  ( Node c = n .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^897^^^^^895^903^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return s;^902^^^^^895^903^[REPLACE] return i;^[METHOD] getNonEmptyChildCount [TYPE] int [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Node c  n  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int i  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( c.getType (  )   ==  Token.EMPTY )  {^908^^^^^906^913^[REPLACE] if  ( c.getType (  )  != Token.EMPTY )  {^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^return i;^909^^^^^906^913^[REPLACE] return c;^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^907^^^^^906^913^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[ADD]^return c;^908^909^910^^^906^913^[ADD] if  ( c.getType (  )  != Token.EMPTY )  { return c; }^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c =  n.getFirstChild (  ) ; null !^907^^^^^906^913^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[ADD]^^907^908^909^910^^906^913^[ADD] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { if  ( c.getType (  )  != Token.EMPTY )  { return c; }^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c = n.getLastChild (  ) ; c != null; c = c.getNext (  )  )  {^907^^^^^906^913^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^return false;^912^^^^^906^913^[REPLACE] return null;^[METHOD] getFirstNonEmptyChild [TYPE] Node [PARAMETER] Node n [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS  [TYPE]  Node c  n 
[REPLACE]^return   Context.BEFORE_DANGLING_ELSE ;^931^932^^^^930^933^[REPLACE] return currentContext == Context.BEFORE_DANGLING_ELSE ? Context.BEFORE_DANGLING_ELSE : Context.OTHER;^[METHOD] getContextForNonEmptyExpression [TYPE] CodeGenerator$Context [PARAMETER] Context currentContext [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return Context.OTHER ) ;^940^941^^^^939^942^[REPLACE] return  ( context == Context.IN_FOR_INIT_CLAUSE ? Context.IN_FOR_INIT_CLAUSE : Context.OTHER ) ;^[METHOD] getContextForNoInOperator [TYPE] CodeGenerator$Context [PARAMETER] Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return   Context.OTHER ;^951^952^^^^950^953^[REPLACE] return  ( context == Context.IN_FOR_INIT_CLAUSE ? Context.OTHER : context ) ;^[METHOD] clearContextForNoInOperator [TYPE] CodeGenerator$Context [PARAMETER] Context context [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  CodeConsumer cc  consumer  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[ADD]^appendHexJavaScriptRepresentation ( c, sb ) ;^960^961^962^^964^958^966^[ADD] try { appendHexJavaScriptRepresentation ( c, sb ) ; } catch  ( IOException ex )  { throw new RuntimeException  (" ")  ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] StringBuilder sb char c [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  IOException ex  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^appendHexJavaScriptRepresentation ( sb, c ) ;^961^^^^^958^966^[REPLACE] appendHexJavaScriptRepresentation ( c, sb ) ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] StringBuilder sb char c [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  IOException ex  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^return ;^964^^^^^958^966^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] StringBuilder sb char c [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  IOException ex  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[ADD]^^964^^^^^958^966^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] StringBuilder sb char c [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  IOException ex  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[ADD]^^962^963^964^^^958^966^[ADD] catch  ( IOException ex )  {  throw new RuntimeException  (" ")  ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] StringBuilder sb char c [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  CodeConsumer cc  consumer  [TYPE]  IOException ex  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  char[] HEX_CHARS 
[REPLACE]^if  ( singleq < doubleq )  {^978^^^^^975^993^[REPLACE] if  ( Character.isSupplementaryCodePoint ( codePoint )  )  {^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[ADD]^^978^979^^^^975^993^[ADD] if  ( Character.isSupplementaryCodePoint ( codePoint )  )  {^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^return i;^986^^^^^975^993^[REPLACE] return;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^char[] surrogates = Character.isSupplementaryCodePoint ( codePoint ) ;^983^^^^^975^993^[REPLACE] char[] surrogates = Character.toChars ( codePoint ) ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[ADD]^appendHexJavaScriptRepresentation ( surrogates[0], out ) ;^983^984^^^^975^993^[ADD] char[] surrogates = Character.toChars ( codePoint ) ; appendHexJavaScriptRepresentation ( surrogates[0], out ) ;^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  | 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  | 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  | 0xf] )^988^989^990^991^^975^993^[REPLACE] out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  & 0xf] )^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[ADD]^^988^989^990^^^975^993^[ADD] out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] )^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^out.append ( "\\u" ) .append ( HEX_CHARS[ (codePoint )  | 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  | 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  | 0xf] )^988^989^990^991^^975^993^[REPLACE] out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  & 0xf] )^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
[REPLACE]^out .StringBuilder (  )^988^989^990^991^^975^993^[REPLACE] out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  & 0xf] )^[METHOD] appendHexJavaScriptRepresentation [TYPE] void [PARAMETER] int codePoint Appendable out [CLASS] CodeGenerator Context   [TYPE]  Context BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  [TYPE]  boolean allowNonBlockChild  ambiguousElseClause  false  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  true  validation  [TYPE]  Appendable out  [TYPE]  CodeConsumer cc  consumer  [TYPE]  CharsetEncoder outputCharsetEncoder  [TYPE]  int codePoint  [TYPE]  char[] HEX_CHARS  surrogates 
