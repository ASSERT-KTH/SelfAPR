[REPLACE]^private  CheckLevel level;^34^^^^^^^[REPLACE] private final CheckLevel level;^ [CLASS] CheckMissingGetCssName  
[REPLACE]^private  Matcher blacklist;^35^^^^^^^[REPLACE] private final Matcher blacklist;^ [CLASS] CheckMissingGetCssName  
[REPLACE]^static final String GET_CSS_NAME_FUNCTION  = null ;^37^^^^^^^[REPLACE] static final String GET_CSS_NAME_FUNCTION = "goog.getCssName";^ [CLASS] CheckMissingGetCssName  
[REPLACE]^static final String GET_UNIQUE_ID_FUNCTION  = null ;^38^^^^^^^[REPLACE] static final String GET_UNIQUE_ID_FUNCTION = "goog.events.getUniqueId";^ [CLASS] CheckMissingGetCssName  
[REPLACE]^static  DiagnosticType MISSING_GETCSSNAME = DiagnosticType.disabled ( "JSC_MISSING_GETCSSNAME", "missing goog.getCssName around literal ''{0}''" ) ;^40^41^42^43^^40^43^[REPLACE] static final DiagnosticType MISSING_GETCSSNAME = DiagnosticType.disabled ( "JSC_MISSING_GETCSSNAME", "missing goog.getCssName around literal ''{0}''" ) ;^ [CLASS] CheckMissingGetCssName  
[REPLACE]^if  ( n.getType (  )  == Token.STRING || parent.getType (  )  != Token.GETPROP || parent.getType (  )  != Token.REGEXP || !NodeUtil.isObjectLitKey ( n, parent )  )  {^66^67^68^69^^65^86^[REPLACE] if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^if   (  insideGetUniqueIdCall  (  n, parent  )    )   {  ;^73^^^^^66^85^[REPLACE] if  ( insideGetCssNameCall ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^if   (  insideGetCssNameCall  (  n, parent  )    )   {  ;^76^^^^^66^85^[REPLACE] if  ( insideGetUniqueIdCall ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^if   (  parent.getType  (    )   == Token.ASSIGN  )   {  ;^79^^^^^66^85^[REPLACE] if  ( insideAssignmentToIdConstant ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REMOVE]^if  ( insideGetUniqueIdCall ( n, parent )  )  {     continue; }^79^^^^^66^85^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^String s = n.getParent (  ) ;^70^^^^^66^85^[REPLACE] String s = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^if   (  insideGetUniqueIdCall  (  n, parent  )    )   {  ;^73^^^^^65^86^[REPLACE] if  ( insideGetCssNameCall ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[ADD]^continue;^73^74^75^^^65^86^[ADD] if  ( insideGetCssNameCall ( n, parent )  )  { continue; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^if   (  insideGetCssNameCall  (  n, parent  )    )   {  ;^76^^^^^65^86^[REPLACE] if  ( insideGetUniqueIdCall ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[ADD]^^76^77^78^^^65^86^[ADD] if  ( insideGetUniqueIdCall ( n, parent )  )  { continue; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^if   (  parent.getType  (    )   == Token.ASSIGN  )   {  ;^79^^^^^65^86^[REPLACE] if  ( insideAssignmentToIdConstant ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[ADD]^continue;^79^80^81^^^65^86^[ADD] if  ( insideAssignmentToIdConstant ( n, parent )  )  { continue; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
[REPLACE]^String s = parent.getString (  ) ;^70^^^^^65^86^[REPLACE] String s = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckMissingGetCssName   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  CheckLevel level  [TYPE]  DiagnosticType MISSING_GETCSSNAME  [TYPE]  Node n  parent  [TYPE]  String GET_CSS_NAME_FUNCTION  GET_UNIQUE_ID_FUNCTION  blacklistRegex  s 
