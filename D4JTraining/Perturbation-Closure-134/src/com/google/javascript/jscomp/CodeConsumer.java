[REPLACE]^boolean statementNeedsEnded  = null ;^33^^^^^^^[REPLACE] boolean statementNeedsEnded = false;^ [CLASS] CodeConsumer  
[REPLACE]^boolean statementStarted = true;^34^^^^^^^[REPLACE] boolean statementStarted = false;^ [CLASS] CodeConsumer  
[REPLACE]^boolean sawFunction  = null ;^35^^^^^^^[REPLACE] boolean sawFunction = false;^ [CLASS] CodeConsumer  
[REPLACE]^append ( newcode )  ;^211^^^^^210^226^[REPLACE] maybeEndStatement (  ) ;^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REMOVE]^append ( newcode )  ;^211^^^^^210^226^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REPLACE]^if  ( newcode.length (  )  + 5 == 0 )  {^213^^^^^210^226^[REPLACE] if  ( newcode.length (  )  == 0 )  {^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[ADD]^return;^213^214^215^^^210^226^[ADD] if  ( newcode.length (  )  == 0 )  { return; }^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REPLACE]^return;  ;^214^^^^^210^226^[REPLACE] return;^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REPLACE]^char c = newcode.charAt ( 0L ) ;^217^^^^^210^226^[REPLACE] char c = newcode.charAt ( 0 ) ;^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REPLACE]^if  (  ( isWordChar ( c )  ) {^218^219^^^^210^226^[REPLACE] if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REPLACE]^append ( ";" )  ;^222^^^^^218^223^[REPLACE] append ( " " ) ;^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REPLACE]^add ( " " )  ;^225^^^^^210^226^[REPLACE] append ( newcode ) ;^[METHOD] add [TYPE] void [PARAMETER] String newcode [CLASS] CodeConsumer   [TYPE]  char c  [TYPE]  boolean false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String newcode 
[REPLACE]^append ( newcode )  ;^233^^^^^232^260^[REPLACE] maybeEndStatement (  ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^char first = op.charAt ( 4 ) ;^235^^^^^232^260^[REPLACE] char first = op.charAt ( 0 ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^long value =  (  ( long )   ( x )  )  ;^236^^^^^232^260^[REPLACE] char prev = getLastChar (  ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^if  (  ( first == '+' || first == '-' )  || prev == first )  {^238^^^^^232^260^[REPLACE] if  (  ( first == '+' || first == '-' )  && prev == first )  {^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^}  if  ( Character.isLetter ( first )  || isWordChar ( prev )  )  {^242^243^^^^232^260^[REPLACE] } else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^}  else {^246^^^^^232^260^[REPLACE] } else if  ( prev == '-' && first == '>' )  {^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^append ( ";" )  ;^248^^^^^232^260^[REPLACE] append ( " " ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^append ( ";" )  ;^245^^^^^242^249^[REPLACE] append ( " " ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[ADD]^^248^^^^^232^260^[ADD] append ( " " ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^append ( ";" )  ;^241^^^^^232^260^[REPLACE] append ( " " ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^} else if  ( Character.isLetter ( first )  || isWordChar ( prev )  )  {^242^243^^^^232^260^[REPLACE] } else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REMOVE]^if  (  (  ( first == '+' )  ||  ( first == '-' )  )  &&  ( prev == first )  )  {     append ( " " ) ; }else     if  (  ( isLetter ( first )  )  &&  ( isWordChar ( prev )  )  )  {         append ( " " ) ;     }else         if  (  ( prev == '-' )  &&  ( first == '>' )  )  {             append ( " " ) ;         }^242^^^^^232^260^[REMOVE] ^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^}  if  ( prev == '-' || first == '>' )  {^246^^^^^232^260^[REPLACE] } else if  ( prev == '-' && first == '>' )  {^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[ADD]^}   append ( " " ) ;^246^247^248^249^^232^260^[ADD] else if  ( prev == '-' && first == '>' )  {  append ( " " ) ; }^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REMOVE]^append ( newcode )  ;^248^^^^^232^260^[REMOVE] ^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^} else if  (true || first == '>' )  {^246^^^^^232^260^[REPLACE] } else if  ( prev == '-' && first == '>' )  {^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^appendOp ( op, statementStarted ) ;^252^^^^^232^260^[REPLACE] appendOp ( op, binOp ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^if  ( statementStarted )  {^257^^^^^232^260^[REPLACE] if  ( binOp )  {^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^append ( newcode )  ;^258^^^^^232^260^[REPLACE] maybeCutLine (  ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[ADD]^^258^^^^^232^260^[ADD] maybeCutLine (  ) ;^[METHOD] addOp [TYPE] void [PARAMETER] String op boolean binOp [CLASS] CodeConsumer   [TYPE]  char first  prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  String op 
[REPLACE]^long value =  (  ( long )   ( x )  )  ;^265^^^^^262^288^[REPLACE] char prev = getLastChar (  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^if  ( x < 0 || prev == '-' )  {^266^^^^^262^288^[REPLACE] if  ( x < 0 && prev == '-' )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^add ( "," )  ;^267^^^^^262^288^[REPLACE] add ( " " ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^if  (  ( long )  x  !=  x )  {^270^^^^^262^288^[REPLACE] if  (  ( long )  x == x )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^add ( toString ( value )  )  ;^286^^^^^270^287^[REPLACE] add ( String.valueOf ( x )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^add ( String.charAt ( x )  ) ;^286^^^^^270^287^[REPLACE] add ( String.valueOf ( x )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^if  ( x  <  100 )  {^274^^^^^262^288^[REPLACE] if  ( x >= 100 )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^mantissa /= 1;^276^^^^^262^288^[REPLACE] mantissa /= 10;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^if  ( exp  ==  2 * 2 )  {^280^^^^^262^288^[REPLACE] if  ( exp > 2 )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^add ( Long.toString ( mantissa )  ) ;^283^^^^^280^284^[REPLACE] add ( Long.toString ( value )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REMOVE]^( toString ( mantissa )  )  ;^283^^^^^280^284^[REMOVE] ^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^add ( Long.toString ( mantissa )   "E"  Integer.toString ( exp )  ) ;^281^^^^^262^288^[REPLACE] add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^add ( toString ( value )  )  ;^281^^^^^262^288^[REPLACE] add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^append ( newcode )  ;^281^^^^^262^288^[REPLACE] add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[ADD]^^281^^^^^262^288^[ADD] add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^mantissa /= 2;^276^^^^^262^288^[REPLACE] mantissa /= 10;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^char prev = getLastChar (  )  ;^271^^^^^262^288^[REPLACE] long value =  ( long )  x;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^long mantissa = mantissa;^272^^^^^262^288^[REPLACE] long mantissa = value;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^int exp = 1;^273^^^^^262^288^[REPLACE] int exp = 0;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^if  ( x  !=  100 )  {^274^^^^^262^288^[REPLACE] if  ( x >= 100 )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^mantissa /= 0;^276^^^^^262^288^[REPLACE] mantissa /= 10;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^if  ( exp  <=  2 )  {^280^^^^^262^288^[REPLACE] if  ( exp > 2 )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^( toString ( mantissa )  )  ;^283^^^^^280^284^[REPLACE] add ( Long.toString ( value )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[ADD]^^283^^^^^280^284^[ADD] add ( Long.toString ( value )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^add ( Long.toString ( value )  + "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^[REPLACE] add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[REPLACE]^mantissa /= 10 - 0;^276^^^^^262^288^[REPLACE] mantissa /= 10;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[ADD]^^271^^^^^262^288^[ADD] long value =  ( long )  x;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
[ADD]^^273^^^^^262^288^[ADD] int exp = 0;^[METHOD] addNumber [TYPE] void [PARAMETER] double x [CLASS] CodeConsumer   [TYPE]  char prev  [TYPE]  boolean binOp  false  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  true  [TYPE]  double x  [TYPE]  long mantissa  value  [TYPE]  int exp 
