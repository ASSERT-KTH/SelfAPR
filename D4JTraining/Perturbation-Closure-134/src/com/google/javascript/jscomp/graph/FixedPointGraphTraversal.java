[REPLACE]^private  EdgeCallback<N, E> callback;^43^^^^^^^[REPLACE] private final EdgeCallback<N, E> callback;^ [CLASS] FixedPointGraphTraversal  
[REPLACE]^public static  String NON_HALTING_ERROR_MSG = "Fixed point computation not halting";^45^46^^^^45^46^[REPLACE] public static final String NON_HALTING_ERROR_MSG = "Fixed point computation not halting";^ [CLASS] FixedPointGraphTraversal  
[REPLACE]^int cycleCount = 3;^94^^^^^93^128^[REPLACE] int cycleCount = 0;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^long nodeCount = this.getNodes (  ) .size (  ) ;^95^^^^^93^128^[REPLACE] long nodeCount = graph.getNodes (  ) .size (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^long maxIterations = Math.max ( nodeCount  nodeCount  nodeCount, 100 ) ;^99^^^^^93^128^[REPLACE] long maxIterations = Math.max ( nodeCount * nodeCount * nodeCount, 100 ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^LinkedHashSet<DiGraphNode<N, E>> workSet = Sets.newHashSet (  ) ;^102^103^^^^93^128^[REPLACE] LinkedHashSet<DiGraphNode<N, E>> workSet = Sets.newLinkedHashSet (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[ADD]^^104^105^106^^^93^128^[ADD] for  ( N n : entrySet )  { workSet.add ( graph.getDirectedGraphNode ( n )  ) ; }^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^graph.getDirectedGraphNode ( n )  ;^105^^^^^93^128^[REPLACE] workSet.add ( graph.getDirectedGraphNode ( n )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( graph.getDirectedGraphNode ( n )  )  ;^105^^^^^93^128^[REPLACE] workSet.add ( graph.getDirectedGraphNode ( n )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^DiGraphNode<N, E> source = workSet.iterator (  ) .next (  )  ;^104^^^^^93^128^[REPLACE] for  ( N n : entrySet )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^if  ( callback.traverseEdge ( sourceValue, false.getValue (  ) , destNode )  )  {^120^^^^^93^128^[REPLACE] if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , destNode )  )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( edge.getValue (  )  ) ;^121^^^^^93^128^[REPLACE] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( false .getValue (  )   ) ;^121^^^^^93^128^[REPLACE] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[ADD]^^118^119^120^121^122^107^124^[ADD] for  ( DiGraphEdge<N, E> edge : outEdges )  { N destNode = edge.getDestination (  ) .getValue (  ) ; if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , destNode )  )  { workSet.add ( edge.getDestination (  )  ) ; }^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^if  ( callback.traverseEdge ( sourceValue, edge .getOutEdges (  )  , destNode )  )  {^120^^^^^107^124^[REPLACE] if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , destNode )  )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[ADD]^workSet.add ( edge.getDestination (  )  ) ;^120^121^122^^^107^124^[ADD] if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , destNode )  )  { workSet.add ( edge.getDestination (  )  ) ; }^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( null.getDestination (  )  ) ;^121^^^^^107^124^[REPLACE] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( null.getValue (  )  ) ;^121^^^^^107^124^[REPLACE] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[ADD]^^119^^^^^107^124^[ADD] N destNode = edge.getDestination (  ) .getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^DiGraphNode<N, E> source = this.iterator (  ) .next (  ) ;^112^^^^^107^124^[REPLACE] DiGraphNode<N, E> source = workSet.iterator (  ) .next (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^N nullValue = source.getValue (  ) ;^113^^^^^107^124^[REPLACE] N sourceValue = source.getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^List<DiGraphEdge<N, E>> outEdges = false.getOutEdges (  ) ;^117^^^^^107^124^[REPLACE] List<DiGraphEdge<N, E>> outEdges = source.getOutEdges (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^DiGraphNode<N, E> node  ;^118^^^^^107^124^[REPLACE] for  ( DiGraphEdge<N, E> edge : outEdges )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^N destNode = null.getDestination (  ) .getValue (  ) ;^119^^^^^107^124^[REPLACE] N destNode = edge.getDestination (  ) .getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^Preconditions.checkState ( cycleCount  ==  maxIterations, NON_HALTING_ERROR_MSG ) ;^126^127^^^^93^128^[REPLACE] Preconditions.checkState ( cycleCount != maxIterations, NON_HALTING_ERROR_MSG ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
