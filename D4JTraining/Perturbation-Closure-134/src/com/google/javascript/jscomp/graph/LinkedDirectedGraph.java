[REPLACE]^protected final Map<N, LinkedDirectedGraphNode<N, E>> nodes ;^41^42^^^^41^42^[REPLACE] protected final Map<N, LinkedDirectedGraphNode<N, E>> nodes = Maps.newHashMap (  ) ;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^protected List<DiGraphEdge<N, E>> inEdgeList ;^337^^^^^^^[REPLACE] protected List<DiGraphEdge<N, E>> inEdgeList = Lists.newArrayList (  ) ;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^protected List<DiGraphEdge<N, E>> outEdgeList  = null ;^338^339^^^^338^339^[REPLACE] protected List<DiGraphEdge<N, E>> outEdgeList = Lists.newArrayList (  ) ;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^private int id;^345^^^^^^^[REPLACE] protected int id;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^private static int totalNodes = 3;^347^^^^^^^[REPLACE] private static int totalNodes = 0;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^private final Iterator<DiGraphEdge<N, E>> in ;^411^^^^^^^[REPLACE] private final Iterator<DiGraphEdge<N, E>> in = inEdgeList.iterator (  ) ;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^private final Iterator<DiGraphEdge<N, E>> out ;^412^^^^^^^[REPLACE] private final Iterator<DiGraphEdge<N, E>> out = outEdgeList.iterator (  ) ;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^private Annotation annotation;^447^^^^^^^[REPLACE] protected Annotation annotation;^ [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  
[REPLACE]^this.value = edgeValue; ;^355^^^^^354^357^[REPLACE] this.value = nodeValue;^[METHOD] <init> [TYPE] LinkedDirectedGraph$LinkedDirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.id ;^356^^^^^354^357^[REPLACE] this.id = totalNodes++;^[METHOD] <init> [TYPE] LinkedDirectedGraph$LinkedDirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.value = nodeValue; ;^456^^^^^454^459^[REPLACE] this.value = edgeValue;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.sourceNode =  0;^457^^^^^454^459^[REPLACE] this.sourceNode = sourceNode;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.destNode =  null;^458^^^^^454^459^[REPLACE] this.destNode = destNode;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^458^^^^^454^459^[ADD] this.destNode = destNode;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return new SimpleSubGraph<N, E> ( null ) ;^45^^^^^44^46^[REPLACE] return new SimpleSubGraph<N, E> ( this ) ;^[METHOD] newSubGraph [TYPE] SubGraph [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^DiGraphNode<N, E> node = getDirectedGraphNode ( value ) ;^50^^^^^49^67^[REPLACE] DiGraphNode<N, E> node = getDirectedGraphNode ( srcValue ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^51^^^^^49^67^[REPLACE] if  ( node == null )  {^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^52^53^^^^49^67^[REPLACE] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^52^53^^^^49^67^[ADD] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^52^53^^^^49^67^[REPLACE] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphNode<N, E> dest =  ( LinkedDirectedGraphNode<N, E> )  node;^55^^^^^49^67^[REPLACE] LinkedDirectedGraphNode<N, E> src =  ( LinkedDirectedGraphNode<N, E> )  node;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^55^^^^^49^67^[ADD] LinkedDirectedGraphNode<N, E> src =  ( LinkedDirectedGraphNode<N, E> )  node;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =  getDirectedGraphNode ( null ) ;^56^^^^^49^67^[REPLACE] node = getDirectedGraphNode ( destValue ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^57^^^^^49^67^[REPLACE] if  ( node == null )  {^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^58^59^^^^49^67^[REPLACE] throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^58^59^^^^49^67^[REPLACE] throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphNode<N, E> src =  ( LinkedDirectedGraphNode<N, E> )  node;^61^^^^^49^67^[REPLACE] LinkedDirectedGraphNode<N, E> dest =  ( LinkedDirectedGraphNode<N, E> )  node;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( this, edgeValue, dest ) ;^62^63^^^^49^67^[REPLACE] LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^src.getOutEdges (  ) .add ( 1 ) ;^64^^^^^49^67^[REPLACE] src.getOutEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^src.getInEdges (  ) .add ( edge ) ;^64^^^^^49^67^[REPLACE] src.getOutEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^dest.getInEdges (  )  .addAll ( null )  ;^65^^^^^49^67^[REPLACE] dest.getInEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^dest.getOutEdges (  ) .add ( edge ) ;^65^^^^^49^67^[REPLACE] dest.getInEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return false;^66^^^^^49^67^[REPLACE] return edge;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphEdge edge  [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^disconnectInDirection ( n1, nodeValue ) ;^71^^^^^70^73^[REPLACE] disconnectInDirection ( n1, n2 ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^disconnectInDirection ( n2, nodeValue ) ;^72^^^^^70^73^[REPLACE] disconnectInDirection ( n2, n1 ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^72^^^^^70^73^[ADD] disconnectInDirection ( n2, n1 ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^DiGraphNode<N, E> node = getDirectedGraphNode ( value ) ;^77^^^^^76^93^[REPLACE] DiGraphNode<N, E> node = getDirectedGraphNode ( srcValue ) ;^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^78^^^^^76^93^[REPLACE] if  ( node == null )  {^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^79^80^^^^76^93^[REPLACE] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphNode<N, E> dest =  ( LinkedDirectedGraphNode<N, E> )  node;^82^^^^^76^93^[REPLACE] LinkedDirectedGraphNode<N, E> src =  ( LinkedDirectedGraphNode<N, E> )  node;^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =  getDirectedGraphNode ( value ) ;^83^^^^^76^93^[REPLACE] node = getDirectedGraphNode ( destValue ) ;^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^83^^^^^76^93^[ADD] node = getDirectedGraphNode ( destValue ) ;^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^84^^^^^76^93^[REPLACE] if  ( node == null )  {^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^85^86^^^^76^93^[REPLACE] throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphNode<N, E> src =  ( LinkedDirectedGraphNode<N, E> )  node;^88^^^^^76^93^[REPLACE] LinkedDirectedGraphNode<N, E> dest =  ( LinkedDirectedGraphNode<N, E> )  node;^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n2, n1 ) ;^89^^^^^76^93^[REPLACE] for  ( DiGraphEdge<?, E> edge : getDirectedGraphEdges ( srcValue, destValue )  )  {^[METHOD] disconnectInDirection [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode dest  src  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<DiGraphNode<N, E>> nodeList = Lists .newArrayListWithCapacity ( id )  ;^97^^^^^96^100^[REPLACE] List<DiGraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^[METHOD] getDirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^nodeList.addAll ( nodes.size (  )  ) ;^98^^^^^96^100^[REPLACE] nodeList.addAll ( nodes.values (  )  ) ;^[METHOD] getDirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^nodeList.addAll ( nodes .get ( this )   ) ;^98^^^^^96^100^[REPLACE] nodeList.addAll ( nodes.values (  )  ) ;^[METHOD] getDirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^99^^^^^96^100^[REPLACE] return nodeList;^[METHOD] getDirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return nodes.get ( value ) ;^104^^^^^103^105^[REPLACE] return nodes.get ( nodeValue ) ;^[METHOD] getDirectedGraphNode [TYPE] DiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return getDirectedGraphNode ( value ) ;^109^^^^^108^110^[REPLACE] return getDirectedGraphNode ( nodeValue ) ;^[METHOD] getNode [TYPE] GraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphNode<N, E> node = nodes.get ( value ) ;^114^^^^^113^125^[REPLACE] LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != this  )  {^115^^^^^113^125^[REPLACE] if  ( node == null )  {^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^116^117^^^^113^125^[REPLACE] throw new IllegalArgumentException ( nodeValue + " does not exist in graph" ) ;^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^116^117^^^^113^125^[REPLACE] throw new IllegalArgumentException ( nodeValue + " does not exist in graph" ) ;^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphEdge<N, E>> result = Lists.newArrayList (  ) ;^119^^^^^113^125^[REPLACE] List<DiGraphEdge<N, E>> edgeList = Lists.newArrayList (  ) ;^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^119^^^^^113^125^[ADD] List<DiGraphEdge<N, E>> edgeList = Lists.newArrayList (  ) ;^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^120^^^^^113^125^[REPLACE] for  ( DiGraphEdge<N, E> edge : node.getInEdges (  )  )  {^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^120^121^122^^^113^125^[ADD] for  ( DiGraphEdge<N, E> edge : node.getInEdges (  )  )  { edgeList.add ( edge ) ; }^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return false;^124^^^^^113^125^[REPLACE] return edgeList;^[METHOD] getInEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphNode<N, E> node = nodes.get ( value ) ;^129^^^^^128^139^[REPLACE] LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^129^^^^^128^139^[ADD] LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^130^^^^^128^139^[REPLACE] if  ( node == null )  {^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^130^131^132^133^^128^139^[ADD] if  ( node == null )  { throw new IllegalArgumentException ( nodeValue + " does not exist in graph" ) ; }^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^131^132^^^^128^139^[REPLACE] throw new IllegalArgumentException ( nodeValue + " does not exist in graph" ) ;^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphEdge<N, E>> result = Lists.newArrayList (  ) ;^134^^^^^128^139^[REPLACE] List<DiGraphEdge<N, E>> edgeList = Lists.newArrayList (  ) ;^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^135^^^^^128^139^[REPLACE] for  ( DiGraphEdge<N, E> edge : node.getOutEdges (  )  )  {^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return this;^138^^^^^128^139^[REPLACE] return edgeList;^[METHOD] getOutEdges [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedDirectedGraphNode<N, E> node = nodes.get ( value ) ;^143^^^^^142^149^[REPLACE] LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[METHOD] createDirectedGraphNode [TYPE] DiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != false )  {^144^^^^^142^149^[REPLACE] if  ( node == null )  {^[METHOD] createDirectedGraphNode [TYPE] DiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =  new LinkedDirectedGraphNode<N, E> ( null ) ;^145^^^^^142^149^[REPLACE] node = new LinkedDirectedGraphNode<N, E> ( nodeValue ) ;^[METHOD] createDirectedGraphNode [TYPE] DiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^145^146^^^^142^149^[ADD] node = new LinkedDirectedGraphNode<N, E> ( nodeValue ) ; nodes.put ( nodeValue, node ) ;^[METHOD] createDirectedGraphNode [TYPE] DiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =   new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest )  ;^145^^^^^142^149^[REPLACE] node = new LinkedDirectedGraphNode<N, E> ( nodeValue ) ;^[METHOD] createDirectedGraphNode [TYPE] DiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return true;^148^^^^^142^149^[REPLACE] return node;^[METHOD] createDirectedGraphNode [TYPE] DiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List edgeList  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges ( n1, nodeValue ) ;^155^^^^^152^162^[REPLACE] List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges ( n1, n2 ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( nodeValue, n1 ) ;^156^^^^^152^162^[REPLACE] List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n2, n1 ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^int totalSize = forwardEdges.length (  )  + 0.length (  ) ;^157^^^^^152^162^[REPLACE] int totalSize = forwardEdges.size (  )  + backwardEdges.size (  ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphEdge<N, E>> edges = Lists.newArrayListWithCapacity ( totalNodes ) ;^158^^^^^152^162^[REPLACE] List<GraphEdge<N, E>> edges = Lists.newArrayListWithCapacity ( totalSize ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^edges .add ( this )  ;^159^^^^^152^162^[REPLACE] edges.addAll ( forwardEdges ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^edges.addAll ( forwardEdges ) ;^160^^^^^152^162^[REPLACE] edges.addAll ( backwardEdges ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return edge;^161^^^^^152^162^[REPLACE] return edges;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return createDirectedGraphNode ( srcValue ) ;^166^^^^^165^167^[REPLACE] return createDirectedGraphNode ( value ) ;^[METHOD] createNode [TYPE] GraphNode [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^DiGraphNode<N, E> dNode1 = nodes.get ( nodeValue ) ;^171^^^^^170^186^[REPLACE] DiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( this != null )  {^172^^^^^170^186^[REPLACE] if  ( dNode1 == null )  {^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return ;^173^^^^^170^186^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^173^^^^^170^186^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^DiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^175^^^^^170^186^[REPLACE] DiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^175^^^^^170^186^[ADD] DiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( dNode2 != null )  {^176^^^^^170^186^[REPLACE] if  ( dNode2 == null )  {^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^176^177^178^^^170^186^[ADD] if  ( dNode2 == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return ;^177^^^^^170^186^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^177^^^^^170^186^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphEdge<N, E>> result = Lists.newArrayList (  ) ;^179^^^^^170^186^[REPLACE] List<DiGraphEdge<N, E>> edges = Lists.newArrayList (  ) ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( outEdge.getDestination (  )   !=  dNode2 )  {^181^^^^^170^186^[REPLACE] if  ( outEdge.getDestination (  )  == dNode2 )  {^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^edges.remove ( 0 ) ;^182^^^^^170^186^[REPLACE] edges.add ( outEdge ) ;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^180^^^^^170^186^[REPLACE] for  ( DiGraphEdge<N, E> outEdge : dNode1.getOutEdges (  )  )  {^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^180^181^182^183^^170^186^[ADD] for  ( DiGraphEdge<N, E> outEdge : dNode1.getOutEdges (  )  )  { if  ( outEdge.getDestination (  )  == dNode2 )  { edges.add ( outEdge ) ; }^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false;^185^^^^^170^186^[REPLACE] return edges;^[METHOD] getDirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^DiGraphNode<N, E> dNode1 = nodes.get ( nodeValue ) ;^191^^^^^189^207^[REPLACE] DiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( false != this  )  {^192^^^^^189^207^[REPLACE] if  ( dNode1 == null )  {^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^193^^^^^189^207^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^193^^^^^189^207^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^DiGraphNode<N, E> dNode2 = nodes .put ( null , this )  ;^195^^^^^189^207^[REPLACE] DiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^195^^^^^189^207^[ADD] DiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( dNode2 != true )  {^196^^^^^189^207^[REPLACE] if  ( dNode2 == null )  {^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^196^197^198^^^189^207^[ADD] if  ( dNode2 == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^197^^^^^189^207^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^197^^^^^189^207^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( outEdge.getDestination (  )   ||  dNode2 )  {^201^^^^^189^207^[REPLACE] if  ( outEdge.getDestination (  )  == dNode2 )  {^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^return true;^201^202^203^^^189^207^[ADD] if  ( outEdge.getDestination (  )  == dNode2 )  { return true; }^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false;^202^^^^^189^207^[REPLACE] return true;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^200^^^^^189^207^[REPLACE] for  ( DiGraphEdge<N, E> outEdge : dNode1.getOutEdges (  )  )  {^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return true;^206^^^^^189^207^[REPLACE] return false;^[METHOD] isConnectedInDirection [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge outEdge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return getDirectedPredNodes ( nodes.get ( srcValue )  ) ;^211^^^^^210^212^[REPLACE] return getDirectedPredNodes ( nodes.get ( nodeValue )  ) ;^[METHOD] getDirectedPredNodes [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return getDirectedSuccNodes ( nodes .put ( null , true )   ) ;^216^^^^^215^217^[REPLACE] return getDirectedSuccNodes ( nodes.get ( nodeValue )  ) ;^[METHOD] getDirectedSuccNodes [TYPE] List [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( dNode != null )  {^222^^^^^220^230^[REPLACE] if  ( dNode == null )  {^[METHOD] getDirectedPredNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^223^^^^^220^230^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedPredNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return ;^223^^^^^220^230^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedPredNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphNode<N, E>> result = Lists.newArrayList (  ) ;^225^^^^^220^230^[REPLACE] List<DiGraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^[METHOD] getDirectedPredNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^226^^^^^220^230^[REPLACE] for  ( DiGraphEdge<N, E> edge : dNode.getInEdges (  )  )  {^[METHOD] getDirectedPredNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return null;^229^^^^^220^230^[REPLACE] return nodeList;^[METHOD] getDirectedPredNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( dNode != this )  {^235^^^^^233^243^[REPLACE] if  ( dNode == null )  {^[METHOD] getDirectedSuccNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^236^^^^^233^243^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedSuccNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return ;^236^^^^^233^243^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getDirectedSuccNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphNode<N, E>> result = Lists.newArrayList (  ) ;^238^^^^^233^243^[REPLACE] List<DiGraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^[METHOD] getDirectedSuccNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^239^^^^^233^243^[REPLACE] for  ( DiGraphEdge<N, E> edge : dNode.getOutEdges (  )  )  {^[METHOD] getDirectedSuccNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return null;^242^^^^^233^243^[REPLACE] return nodeList;^[METHOD] getDirectedSuccNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> dNode [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return isConnectedInDirection ( n1, nodeValue )  && isConnectedInDirection ( n2, n1 ) ;^247^^^^^246^248^[REPLACE] return isConnectedInDirection ( n1, n2 )  || isConnectedInDirection ( n2, n1 ) ;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n2, n1 ) ;^252^^^^^251^259^[REPLACE] List<GraphvizEdge> edgeList = Lists.newArrayList (  ) ;^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^253^^^^^251^259^[REPLACE] for  ( LinkedDirectedGraphNode<N, E> node : nodes.values (  )  )  {^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^254^^^^^251^259^[REPLACE] for  ( DiGraphEdge<N, E> edge : node.getOutEdges (  )  )  {^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return nodeList;^258^^^^^251^259^[REPLACE] return edgeList;^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphvizNode> nodeList = Lists.newArrayListWithCapacity ( nodes .remove ( false )   ) ;^263^264^^^^262^269^[REPLACE] List<GraphvizNode> nodeList = Lists.newArrayListWithCapacity ( nodes.size (  )  ) ;^[METHOD] getGraphvizNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^265^^^^^262^269^[REPLACE] for  ( LinkedDirectedGraphNode<N, E> node : nodes.values (  )  )  {^[METHOD] getGraphvizNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^265^266^267^^^262^269^[ADD] for  ( LinkedDirectedGraphNode<N, E> node : nodes.values (  )  )  { nodeList.add ( node ) ; }^[METHOD] getGraphvizNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false;^268^^^^^262^269^[REPLACE] return nodeList;^[METHOD] getGraphvizNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^273^^^^^272^274^[REPLACE] return "LinkedGraph";^[METHOD] getName [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false;^278^^^^^277^279^[REPLACE] return true;^[METHOD] isDirected [TYPE] boolean [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphNode<N, E>> result = Lists.newArrayList (  ) ;^283^^^^^282^286^[REPLACE] List<GraphNode<N, E>> list = Lists.newArrayList (  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^list.addAll ( nodes.size (  )  ) ;^284^^^^^282^286^[REPLACE] list.addAll ( nodes.values (  )  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return 0;^285^^^^^282^286^[REPLACE] return list;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^DiGraphNode<N, E> node = getDirectedGraphNode ( srcValue ) ;^290^^^^^289^292^[REPLACE] DiGraphNode<N, E> node = getDirectedGraphNode ( value ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return getNeighborNodes ( true ) ;^291^^^^^289^292^[REPLACE] return getNeighborNodes ( node ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphNode<N, E>> result = Lists .newArrayListWithCapacity ( totalSize )  ;^295^^^^^294^301^[REPLACE] List<GraphNode<N, E>> result = Lists.newArrayList (  ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^for  ( Iterator<GraphNode<N, E>> i = (  ( LinkedDirectedGraphNode<N, E> )  node )  .setAnnotation ( annotation )  ;i.hasNext (  ) ; )  {^296^297^^^^294^301^[REPLACE] for  ( Iterator<GraphNode<N, E>> i = (  ( LinkedDirectedGraphNode<N, E> )  node ) .neighborIterator (  ) ;i.hasNext (  ) ; )  {^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^result.addAll ( i.next (  )  ) ;^298^^^^^294^301^[REPLACE] result.add ( i.next (  )  ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^result.add ( true.next (  )  ) ;^298^^^^^294^301^[REPLACE] result.add ( i.next (  )  ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^298^^^^^294^301^[ADD] result.add ( i.next (  )  ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return this;^300^^^^^294^301^[REPLACE] return result;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^LinkedDirectedGraphNode<N, E> node = nodes.get ( srcValue ) ;^305^^^^^304^308^[REPLACE] LinkedDirectedGraphNode<N, E> node = nodes.get ( value ) ;^[METHOD] getNeighborNodesIterator [TYPE] Iterator [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Preconditions.checkNotNull ( this ) ;^306^^^^^304^308^[REPLACE] Preconditions.checkNotNull ( node ) ;^[METHOD] getNeighborNodesIterator [TYPE] Iterator [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return node .setAnnotation ( annotation )  ;^307^^^^^304^308^[REPLACE] return node.neighborIterator (  ) ;^[METHOD] getNeighborNodesIterator [TYPE] Iterator [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  LinkedDirectedGraphNode node  [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^List<GraphNode<N, E>> result = Lists.newArrayList (  ) ;^312^^^^^311^319^[REPLACE] List<GraphEdge<N, E>> result = Lists.newArrayList (  ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^313^^^^^311^319^[REPLACE] for  ( DiGraphNode<N, E> node : nodes.values (  )  )  {^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^314^^^^^311^319^[REPLACE] for  ( DiGraphEdge<N, E> edge : node.getOutEdges (  )  )  {^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false;^318^^^^^311^319^[REPLACE] return result;^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^DiGraphNode<N, E> node = getDirectedGraphNode ( srcValue ) ;^323^^^^^322^328^[REPLACE] DiGraphNode<N, E> node = getDirectedGraphNode ( value ) ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^323^^^^^322^328^[ADD] DiGraphNode<N, E> node = getDirectedGraphNode ( value ) ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^if  ( true != null )  {^324^^^^^322^328^[REPLACE] if  ( node == null )  {^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^324^325^326^^^322^328^[ADD] if  ( node == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^325^^^^^322^328^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^325^^^^^322^328^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return ;^325^^^^^322^328^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false.getInEdges (  ) .size (  )  + node.getInEdges (  ) .size (  ) ;^327^^^^^322^328^[REPLACE] return node.getInEdges (  ) .size (  )  + node.getOutEdges (  ) .size (  ) ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false;^361^^^^^360^362^[REPLACE] return value;^[METHOD] getValue [TYPE] N [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return getLabel (  ) ;^367^^^^^366^368^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^annotation =  null;^372^^^^^371^373^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[ADD]^^372^^^^^371^373^[ADD] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^377^^^^^376^378^[REPLACE] return "white";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return null + totalSize;^382^^^^^381^383^[REPLACE] return "LDN" + id;^[METHOD] getId [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return value ! =  "true";^387^^^^^386^388^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^392^^^^^391^393^[REPLACE] return getLabel (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return nodeList;^397^^^^^396^398^[REPLACE] return inEdgeList;^[METHOD] getInEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return inEdgeList;^402^^^^^401^403^[REPLACE] return outEdgeList;^[METHOD] getOutEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return node.neighborIterator (  ) ;^406^^^^^405^407^[REPLACE] return new NeighborIterator (  ) ;^[METHOD] neighborIterator [TYPE] Iterator [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return in.hasNext (  )  ;^416^^^^^415^417^[REPLACE] return in.hasNext (  )  || out.hasNext (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^boolean isOut = !in .next (  )  ;^421^^^^^420^425^[REPLACE] boolean isOut = !in.hasNext (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  true ? out : in;^422^^^^^420^425^[REPLACE] Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^DiGraphEdge<N, E> s = null.next (  ) ;^423^^^^^420^425^[REPLACE] DiGraphEdge<N, E> s = curIterator.next (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[ADD]^return isOut ? s.getDestination (  )  : s.getSource (  ) ;^423^424^^^^420^425^[ADD] DiGraphEdge<N, E> s = curIterator.next (  ) ; return isOut ? s.getDestination (  )  : s.getSource (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return isOut ? s.getDestination (  )  : s.getDestination (  ) ;^424^^^^^420^425^[REPLACE] return isOut ? s.getDestination (  )  : s.getSource (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^429^^^^^428^430^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^463^^^^^462^464^[REPLACE] return sourceNode;^[METHOD] getSource [TYPE] DiGraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^468^^^^^467^469^[REPLACE] return destNode;^[METHOD] getDestination [TYPE] DiGraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^destNode =  null;^473^^^^^472^474^[REPLACE] destNode = node;^[METHOD] setDestination [TYPE] void [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^sourceNode =  this;^478^^^^^477^479^[REPLACE] sourceNode = node;^[METHOD] setSource [TYPE] void [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return false;^483^^^^^482^484^[REPLACE] return value;^[METHOD] getValue [TYPE] E [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return getLabel (  ) ;^489^^^^^488^490^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^annotation =  null;^494^^^^^493^495^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^499^^^^^498^500^[REPLACE] return "black";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return value != null ? value.Object (  )  : "null";^504^^^^^503^505^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  (  ( LinkedDirectedGraphNode<N, E> )  sourceNode ) .getInEdges (  ) ;^509^^^^^508^510^[REPLACE] return  (  ( LinkedDirectedGraphNode<N, E> )  sourceNode ) .getId (  ) ;^[METHOD] getNode1Id [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  (  ( LinkedDirectedGraphNode<N, E> )  destNode )  .getInEdges (  )  ;^514^^^^^513^515^[REPLACE] return  (  ( LinkedDirectedGraphNode<N, E> )  destNode ) .getId (  ) ;^[METHOD] getNode2Id [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return sourceNode.toString (  )   &  " -;^519^^^^^518^520^[REPLACE] return sourceNode.toString (  )  + " -> " + destNode.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^524^^^^^523^525^[REPLACE] return sourceNode;^[METHOD] getNodeA [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^return  ( A )  annotation;^529^^^^^528^530^[REPLACE] return destNode;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^protected List<DiGraphEdge<N, E>> inEdgeList ;^337^^^^^^^[REPLACE] protected List<DiGraphEdge<N, E>> inEdgeList = Lists.newArrayList (  ) ;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^protected List<DiGraphEdge<N, E>> outEdgeList  = null ;^338^339^^^^338^339^[REPLACE] protected List<DiGraphEdge<N, E>> outEdgeList = Lists.newArrayList (  ) ;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^private Annotation annotation;^343^^^^^^^[REPLACE] protected Annotation annotation;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^private static int totalNodes = 0 >> 0;^347^^^^^^^[REPLACE] private static int totalNodes = 0;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^private final Iterator<DiGraphEdge<N, E>> in ;^411^^^^^^^[REPLACE] private final Iterator<DiGraphEdge<N, E>> in = inEdgeList.iterator (  ) ;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^private final Iterator<DiGraphEdge<N, E>> out  = null ;^412^^^^^^^[REPLACE] private final Iterator<DiGraphEdge<N, E>> out = outEdgeList.iterator (  ) ;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  DiGraphNode dNode  dNode1  dNode2  destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Iterator curIterator  i  in  out  [TYPE]  List backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes  totalSize 
[REPLACE]^this.value =  value;^355^^^^^354^357^[REPLACE] this.value = nodeValue;^[METHOD] <init> [TYPE] LinkedDirectedGraph$LinkedDirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^355^356^^^^354^357^[ADD] this.value = nodeValue; this.id = totalNodes++;^[METHOD] <init> [TYPE] LinkedDirectedGraph$LinkedDirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.id  =  this.id ;^356^^^^^354^357^[REPLACE] this.id = totalNodes++;^[METHOD] <init> [TYPE] LinkedDirectedGraph$LinkedDirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^361^^^^^360^362^[REPLACE] return value;^[METHOD] getValue [TYPE] N [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return value;^367^^^^^366^368^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^annotation =  null;^372^^^^^371^373^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return value;^377^^^^^376^378^[REPLACE] return "white";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return "LDN"  ;^382^^^^^381^383^[REPLACE] return "LDN" + id;^[METHOD] getId [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return value != null ? value.Object (  )  : "null";^387^^^^^386^388^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return value;^392^^^^^391^393^[REPLACE] return getLabel (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return outEdgeList;^397^^^^^396^398^[REPLACE] return inEdgeList;^[METHOD] getInEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return inEdgeList;^402^^^^^401^403^[REPLACE] return outEdgeList;^[METHOD] getOutEdges [TYPE] List [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^406^^^^^405^407^[REPLACE] return new NeighborIterator (  ) ;^[METHOD] neighborIterator [TYPE] Iterator [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return in .next (  )   || out^416^^^^^415^417^[REPLACE] return in.hasNext (  )  || out.hasNext (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^boolean isOut = !in .next (  )  ;^421^^^^^420^425^[REPLACE] boolean isOut = !in.hasNext (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  true ? out : in;^422^^^^^420^425^[REPLACE] Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[ADD]^^422^^^^^420^425^[ADD] Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^DiGraphEdge<N, E> s = null .hasNext (  )  ;^423^^^^^420^425^[REPLACE] DiGraphEdge<N, E> s = curIterator.next (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return true ? s.getDestination (  )  : s.getDestination (  ) ;^424^^^^^420^425^[REPLACE] return isOut ? s.getDestination (  )  : s.getSource (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s  [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^429^^^^^428^430^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[ADD]^^429^^^^^428^430^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedDirectedGraphNode NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^private final Iterator<DiGraphEdge<N, E>> in  = null ;^411^^^^^^^[REPLACE] private final Iterator<DiGraphEdge<N, E>> in = inEdgeList.iterator (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^private final Iterator<DiGraphEdge<N, E>> out  = null ;^412^^^^^^^[REPLACE] private final Iterator<DiGraphEdge<N, E>> out = outEdgeList.iterator (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  List inEdgeList  outEdgeList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return in.hasNext (  )  ;^416^^^^^415^417^[REPLACE] return in.hasNext (  )  || out.hasNext (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator in  out  [TYPE]  boolean false  true 
[REPLACE]^DiGraphEdge<N, E> s = curIterator.next (  ) ;^421^^^^^420^425^[REPLACE] boolean isOut = !in.hasNext (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s 
[REPLACE]^Iterator<DiGraphEdge<N, E>> curIterator =  true ? out : in;^422^^^^^420^425^[REPLACE] Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s 
[REPLACE]^DiGraphEdge<N, E> s = true.next (  ) ;^423^^^^^420^425^[REPLACE] DiGraphEdge<N, E> s = curIterator.next (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s 
[REPLACE]^return isOut ? s.getSource (  )  : s.getSource (  ) ;^424^^^^^420^425^[REPLACE] return isOut ? s.getDestination (  )  : s.getSource (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  boolean false  isOut  true  [TYPE]  DiGraphEdge s 
[REPLACE]^return ;^429^^^^^428^430^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator curIterator  in  out  [TYPE]  boolean false  true 
[REPLACE]^protected  E value;^445^^^^^^^[REPLACE] protected final E value;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  Iterator curIterator  in  out  [TYPE]  boolean false  true 
[REPLACE]^private Annotation annotation;^447^^^^^^^[REPLACE] protected Annotation annotation;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  Iterator curIterator  in  out  [TYPE]  boolean false  true 
[REPLACE]^this.value =  null;^456^^^^^454^459^[REPLACE] this.value = edgeValue;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^this.sourceNode =  null;^457^^^^^454^459^[REPLACE] this.sourceNode = sourceNode;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[ADD]^^457^458^^^^454^459^[ADD] this.sourceNode = sourceNode; this.destNode = destNode;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^this.destNode =  true;^458^^^^^454^459^[REPLACE] this.destNode = destNode;^[METHOD] <init> [TYPE] DiGraphNode) [PARAMETER] DiGraphNode<N, E> sourceNode E edgeValue DiGraphNode<N, E> destNode [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return destNode;^463^^^^^462^464^[REPLACE] return sourceNode;^[METHOD] getSource [TYPE] DiGraphNode [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return value;^468^^^^^467^469^[REPLACE] return destNode;^[METHOD] getDestination [TYPE] DiGraphNode [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^destNode =  null;^473^^^^^472^474^[REPLACE] destNode = node;^[METHOD] setDestination [TYPE] void [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^sourceNode =  null;^478^^^^^477^479^[REPLACE] sourceNode = node;^[METHOD] setSource [TYPE] void [PARAMETER] DiGraphNode<N, E> node [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return destNode;^483^^^^^482^484^[REPLACE] return value;^[METHOD] getValue [TYPE] E [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return destNode;^489^^^^^488^490^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^annotation =  null;^494^^^^^493^495^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return destNode;^499^^^^^498^500^[REPLACE] return "black";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return true ;^504^^^^^503^505^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return  (  ( LinkedDirectedGraphNode<N, E> )  destNode ) .getId (  ) ;^509^^^^^508^510^[REPLACE] return  (  ( LinkedDirectedGraphNode<N, E> )  sourceNode ) .getId (  ) ;^[METHOD] getNode1Id [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return  (  ( LinkedDirectedGraphNode<N, E> )  sourceNode ) .getId (  ) ;^514^^^^^513^515^[REPLACE] return  (  ( LinkedDirectedGraphNode<N, E> )  destNode ) .getId (  ) ;^[METHOD] getNode2Id [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return sourceNode .Object (  )   + " -> " + destNode^519^^^^^518^520^[REPLACE] return sourceNode.toString (  )  + " -> " + destNode.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return destNode;^524^^^^^523^525^[REPLACE] return sourceNode;^[METHOD] getNodeA [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return value;^529^^^^^528^530^[REPLACE] return destNode;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedDirectedGraphEdge   [TYPE]  DiGraphNode destNode  node  sourceNode  [TYPE]  boolean false  true  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
