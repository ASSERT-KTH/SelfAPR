[REPLACE]^private static final Set<String> KNOWN_DEFINES  = null ;^51^52^^^^51^52^[REPLACE] private static final Set<String> KNOWN_DEFINES = Sets.newHashSet ( "COMPILED" ) ;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^private  Map<String, Node> dominantReplacements;^55^^^^^^^[REPLACE] private final Map<String, Node> dominantReplacements;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^private GlobalNamespace namespace  = null ;^57^^^^^^^[REPLACE] private GlobalNamespace namespace = null;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^static final DiagnosticType UNKNOWN_DEFINE_WARNING  = null ;^60^61^62^^^60^62^[REPLACE] static final DiagnosticType UNKNOWN_DEFINE_WARNING = DiagnosticType.warning ( "JSC_UNKNOWN_DEFINE_WARNING", "unknown @define variable {0}" ) ;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^static final DiagnosticType INVALID_DEFINE_INIT_ERROR  = null ;^65^66^67^68^^65^68^[REPLACE] static final DiagnosticType INVALID_DEFINE_INIT_ERROR = DiagnosticType.error ( "JSC_INVALID_DEFINE_INIT_ERROR", "illegal initialization of @define variable {0}" ) ;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^static  DiagnosticType NON_GLOBAL_DEFINE_INIT_ERROR = DiagnosticType.error ( "JSC_NON_GLOBAL_DEFINE_INIT_ERROR", "@define variable {0} assignment must be global" ) ;^70^71^72^73^^70^73^[REPLACE] static final DiagnosticType NON_GLOBAL_DEFINE_INIT_ERROR = DiagnosticType.error ( "JSC_NON_GLOBAL_DEFINE_INIT_ERROR", "@define variable {0} assignment must be global" ) ;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^static final DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR ;^75^76^77^78^^75^78^[REPLACE] static final DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR = DiagnosticType.error ( "@define variable cannot be assigned here", "@define variable {0} cannot be assigned due to unsafe code at {1}." ) ;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^private static final MessageFormat REASON_DEFINE_NOT_ASSIGNABLE ;^80^81^^^^80^81^[REPLACE] private static final MessageFormat REASON_DEFINE_NOT_ASSIGNABLE = new MessageFormat ( "line {0} of {1}" ) ;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^private  AbstractCompiler compiler;^189^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^private  Map<Node, RefInfo> allRefInfo;^192^^^^^^^[REPLACE] private final Map<Node, RefInfo> allRefInfo;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^private Node lvalueToRemoveLater ;^196^^^^^^^[REPLACE] private Node lvalueToRemoveLater = null;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^public  Node initialValueParent;^453^^^^^^^[REPLACE] public final Node initialValueParent;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^public  Node initialValue;^454^^^^^^^[REPLACE] public final Node initialValue;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^private  short  reasonNotAssignable;^457^^^^^^^[REPLACE] private String reasonNotAssignable;^ [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  
[REPLACE]^this.compiler =  null;^204^^^^^203^227^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^205^^^^^203^227^[ADD] this.allDefines = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^this.allDefines = newHashMap (  )  ;^207^^^^^203^227^[REPLACE] assignableDefines = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^assignAllowed.push ( 1 ) ;^208^209^^^^203^227^[ADD] assignAllowed = new ArrayDeque<Integer> (  ) ; assignAllowed.push ( 1 ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^assignAllowed.push ( 1 * 2 ) ;^209^^^^^203^227^[REPLACE] assignAllowed.push ( 1 ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^this.allDefines = newHashMap (  )  ;^212^^^^^203^227^[REPLACE] allRefInfo = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( name.declaration == null )  {^214^^^^^203^227^[REPLACE] if  ( name.declaration != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( name.refs == this )  {^218^^^^^203^227^[REPLACE] if  ( name.refs != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^218^219^^221^222^203^227^[ADD] if  ( name.refs != null )  { for  ( Ref ref : name.refs )  { if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  { allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  (  !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^[REPLACE] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^221^222^223^^^203^227^[ADD] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  { allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^allRefInfo .put ( 0 )  ;^222^^^^^203^227^[REPLACE] allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^219^220^221^222^223^218^225^[ADD] for  ( Ref ref : name.refs )  {  if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  { allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( ref.getTwin (  )  != null || !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^[REPLACE] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^222^^^^^203^227^[REPLACE] allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^213^214^215^216^217^203^227^[ADD] for  ( Name name : listOfDefines )  { if  ( name.declaration != null )  { allRefInfo.put ( name.declaration.node, new RefInfo ( name.declaration, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^214^215^216^217^^203^227^[ADD] if  ( name.declaration != null )  { allRefInfo.put ( name.declaration.node, new RefInfo ( name.declaration, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^allRefInfo .put ( this )  ;^215^216^^^^203^227^[REPLACE] allRefInfo.put ( name.declaration.node, new RefInfo ( name.declaration, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( name.refs == true )  {^218^^^^^203^227^[REPLACE] if  ( name.refs != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Name name  ;^219^^^^^218^225^[REPLACE] for  ( Ref ref : name.refs )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( ref.getTwin (  )  != this || !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^[REPLACE] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Ref ref = refInfo.ref  ;^213^^^^^218^225^[REPLACE] for  ( Name name : listOfDefines )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  Node initialValue  initialValueParent  lastValue  lvalueToRemoveLater  [TYPE]  String reasonNotAssignable  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^boolean changed = true;^115^^^^^114^142^[REPLACE] boolean changed = false;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( finalValue  ==  info.initialValue )  {^122^^^^^114^142^[REPLACE] if  ( finalValue != info.initialValue )  {^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^changed = changed && finalValue.getType (  )  != info.initialValue.getType (  )  && !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^[REPLACE] changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^for  ( Map.Entry<String, DefineInfo> def : this.entrySet (  )  )  {^116^^^^^114^142^[REPLACE] for  ( Map.Entry<String, DefineInfo> def : allDefines.entrySet (  )  )  {^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( finalValue  == lvalueToRemoveLater )  {^122^^^^^114^142^[REPLACE] if  ( finalValue != info.initialValue )  {^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^changed = changed ;^126^127^128^^^114^142^[REPLACE] changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^String defineName = def .getValue (  )  ;^117^^^^^114^142^[REPLACE] String defineName = def.getKey (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = null.getKey (  ) ;^118^^^^^114^142^[REPLACE] DefineInfo info = def.getValue (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node n = ref.node  ;^119^^^^^114^142^[REPLACE] Node inputValue = dominantReplacements.get ( defineName ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^120^121^^^^114^142^[ADD] Node finalValue = inputValue != null ? inputValue : info.getLastValue (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^126^127^128^^^114^142^[ADD] changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node n = ref.node  ;^116^^^^^114^142^[REPLACE] for  ( Map.Entry<String, DefineInfo> def : allDefines.entrySet (  )  )  {^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^String thisineName = def.getKey (  ) ;^117^^^^^114^142^[REPLACE] String defineName = def.getKey (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^118^^^^^114^142^[ADD] DefineInfo info = def.getValue (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node inputValue = dominantReplacements.get ( unknownDefine ) ;^119^^^^^114^142^[REPLACE] Node inputValue = dominantReplacements.get ( defineName ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node finalValue  =  inputValue ;^120^121^^^^114^142^[REPLACE] Node finalValue = inputValue != null ? inputValue : info.getLastValue (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( true )  {^132^^^^^114^142^[REPLACE] if  ( changed )  {^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^compiler.reportCodeChange (  ) ;^132^133^134^^^114^142^[ADD] if  ( changed )  { compiler.reportCodeChange (  ) ; }^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler .report (  )  ;^133^^^^^114^142^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^133^^^^^114^142^[ADD] compiler.reportCodeChange (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Set<String> unusedReplacements = dominantReplacements .entrySet (  )  ;^136^^^^^114^142^[REPLACE] Set<String> unusedReplacements = dominantReplacements.keySet (  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^137^^^^^114^142^[REPLACE] unusedReplacements.removeAll ( allDefines.keySet (  )  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^unusedReplacements.removeAll ( KNOWN_DEFINES ) ;^137^138^^^^114^142^[ADD] unusedReplacements.removeAll ( allDefines.keySet (  )  ) ; unusedReplacements.removeAll ( KNOWN_DEFINES ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^unusedReplacements.removeAll ( this.keySet (  )  ) ;^137^^^^^114^142^[REPLACE] unusedReplacements.removeAll ( allDefines.keySet (  )  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^138^^^^^114^142^[REPLACE] unusedReplacements.removeAll ( KNOWN_DEFINES ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^for  ( String unknownDefine : null )  {^139^^^^^114^142^[REPLACE] for  ( String unknownDefine : unusedReplacements )  {^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.addToDebugLog ( JSError.make ( UNKNOWN_DEFINE_WARNING, reasonNotAssignable )  ) ;^140^^^^^114^142^[REPLACE] compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, reasonNotAssignable )  ) ;^140^^^^^114^142^[REPLACE] compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^140^^^^^114^142^[ADD] compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^139^140^141^^^114^142^[ADD] for  ( String unknownDefine : unusedReplacements )  { compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ; }^[METHOD] overrideDefines [TYPE] void [PARAMETER] DefineInfo> allDefines [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  Entry def  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node n = ref.node  ;^156^^^^^154^181^[REPLACE] List<Name> allDefines = Lists.newArrayList (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( name.docInfo == true && name.docInfo.isDefine (  )  )  {^158^^^^^154^181^[REPLACE] if  ( name.docInfo != null && name.docInfo.isDefine (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^}  if  ( name.refs == null )  {^160^^^^^154^181^[REPLACE] } else if  ( name.refs != null )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( info != null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^[REPLACE] if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^info =  root.getJSDocInfo (  ) ;^167^^^^^165^168^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( info == null && info.isDefine (  )  )  {^170^^^^^154^181^[REPLACE] if  ( info != null && info.isDefine (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^allDefines.put ( name, info )  ;^171^^^^^154^181^[REPLACE] allDefines.add ( name ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^info =  root.getJSDocInfo (  ) ;^167^^^^^160^175^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^Name name  ;^161^^^^^160^175^[REPLACE] for  ( Ref ref : name.refs )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^Node parent = getParent (  )  ;^162^^^^^160^175^[REPLACE] Node n = ref.node;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^Node n = ref.node  ;^163^^^^^160^175^[REPLACE] Node parent = ref.node.getParent (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^JSDocInfo info = n .getLastChild (  )  ;^164^^^^^160^175^[REPLACE] JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( info != true && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^[REPLACE] if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^165^166^167^168^^154^181^[ADD] if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  { info = parent.getJSDocInfo (  ) ; }^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^170^171^172^173^^154^181^[ADD] if  ( info != null && info.isDefine (  )  )  { allDefines.add ( name ) ; break; }^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^164^^^^^160^175^[ADD] JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^allDefines.put ( name, info )  ;^159^^^^^154^181^[REPLACE] allDefines.add ( name ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REMOVE]^assignableDefines.put ( name, info )  ;^159^^^^^154^181^[REMOVE] ^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  (  parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^[REPLACE] if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^167^^^^^165^168^[ADD] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( info == null ) {^170^^^^^154^181^[REPLACE] if  ( info != null && info.isDefine (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^allDefines.add ( name ) ;break;^170^171^172^173^^154^181^[ADD] if  ( info != null && info.isDefine (  )  )  { allDefines.add ( name ) ; break; }^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^161^162^163^164^165^160^175^[ADD] for  ( Ref ref : name.refs )  { Node n = ref.node; Node parent = ref.node.getParent (  ) ; JSDocInfo info = n.getJSDocInfo (  ) ; if  ( info == null &&^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^162^^^^^160^175^[ADD] Node n = ref.node;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^163^^^^^160^175^[ADD] Node parent = ref.node.getParent (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( info != false && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^[REPLACE] if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( name.docInfo == false && name.docInfo.isDefine (  )  )  {^158^^^^^154^181^[REPLACE] if  ( name.docInfo != null && name.docInfo.isDefine (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if   (  name.refs != null  )   {  ;^160^^^^^154^181^[REPLACE] } else if  ( name.refs != null )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  ( info != null ) {^165^166^^^^154^181^[REPLACE] if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^info =  n.getJSDocInfo (  ) ;^167^^^^^160^175^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^info =  null.getJSDocInfo (  ) ;^167^^^^^160^175^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^JSDocInfo info = n.getJSDocInfo (  ) ;^163^164^^^^160^175^[ADD] Node parent = ref.node.getParent (  ) ; JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^JSDocInfo info = parent .getLastChild (  )  ;^164^^^^^160^175^[REPLACE] JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^info =  null.getJSDocInfo (  ) ;^167^^^^^165^168^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^info =  lastValue.getJSDocInfo (  ) ;^167^^^^^160^175^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^JSDocInfo info = parent.getJSDocInfo (  ) ;^164^^^^^160^175^[REPLACE] JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^if  (  info.isDefine (  )  )  {^170^^^^^154^181^[REPLACE] if  ( info != null && info.isDefine (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^info =  lvalueToRemoveLater.getJSDocInfo (  ) ;^167^^^^^160^175^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^Ref ref = refInfo.ref  ;^157^^^^^160^175^[REPLACE] for  ( Name name : namespace.getNameIndex (  ) .values (  )  )  {^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^Node last = n.getLastChild (  )  ;^164^^^^^160^175^[REPLACE] JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^CollectDefines pass = new CollectDefines ( compiler, this ) ;^178^^^^^154^181^[REPLACE] CollectDefines pass = new CollectDefines ( compiler, allDefines ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^NodeTraversal.traverse ( compiler, parent, pass ) ;^179^^^^^154^181^[REPLACE] NodeTraversal.traverse ( compiler, root, pass ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[REPLACE]^return pass.isAssignAllowed (  ) ;^180^^^^^154^181^[REPLACE] return pass.getAllDefines (  ) ;^[METHOD] collectDefines [TYPE] Map [PARAMETER] Node root GlobalNamespace namespace [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  [TYPE]  String defineName  reasonNotAssignable  unknownDefine  [TYPE]  JSDocInfo info  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  List allDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  [TYPE]  CollectDefines pass 
[ADD]^^248^^^^^247^331^[ADD] RefInfo refInfo = allRefInfo.get ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( refInfo == null )  {^249^^^^^247^331^[REPLACE] if  ( refInfo != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( valParent.getType (  )  == Token.ASSIGN || name.isSimpleName (  )  || name.declaration == ref )  {^258^259^^^^247^331^[REPLACE] if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^258^259^^^262^247^331^[ADD] if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  { compiler.report (^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^}  else {^264^^^^^247^331^[REPLACE] } else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^lvalueToRemoveLater = null  ;^272^^^^^247^331^[REPLACE] lvalueToRemoveLater = valParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^272^^^^^247^331^[ADD] lvalueToRemoveLater = valParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.addToDebugLog ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^[REPLACE] compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^263^^^^^258^273^[REPLACE] JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^}  if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^264^^^^^247^331^[REPLACE] } else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if   (  info == null && parent.getType  (    )   == Token.VAR && parent.hasOneChild  (    )    )   {  ;^276^^^^^247^331^[REPLACE] if  ( t.inGlobalScope (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^276^277^^^280^247^331^[ADD] if  ( t.inGlobalScope (  )  )  {  DefineInfo info = assignableDefines.get ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( info == null )  {^281^^^^^247^331^[REPLACE] if  ( info != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^282^^^^^247^331^[REPLACE] setDefineInfoNotAssignable ( info, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^assignableDefines.get ( fullName )  ;^283^^^^^247^331^[REPLACE] assignableDefines.remove ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REMOVE]^assignableDefines.put ( name, info )  ;^283^^^^^247^331^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = assignableDefines.get ( unknownDefine ) ;^280^^^^^247^331^[REPLACE] DefineInfo info = assignableDefines.get ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^assignableDefines.remove ( unknownDefine ) ;^283^^^^^247^331^[REPLACE] assignableDefines.remove ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^250^^^^^247^331^[ADD] Ref ref = refInfo.ref;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Name name  ;^251^^^^^247^331^[REPLACE] Name name = refInfo.name;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^String fullName = name .isSimpleName (  )  ;^252^^^^^247^331^[REPLACE] String fullName = name.fullName (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node n = ref.node  ;^256^^^^^247^331^[REPLACE] Node valParent = getValueParent ( ref ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^257^^^^^247^331^[ADD] Node val = valParent.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = assignableDefines.remove ( unknownDefine ) ;^280^^^^^247^331^[REPLACE] DefineInfo info = assignableDefines.get ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler .reportCodeChange (  )  ;^262^263^^^^258^273^[REPLACE] compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^262^263^^^^258^273^[ADD] compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^263^^^^^258^273^[ADD] JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( info == this )  {^281^^^^^247^331^[REPLACE] if  ( info != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^282^283^^^^247^331^[ADD] setDefineInfoNotAssignable ( info, t ) ; assignableDefines.remove ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = allDefines.get ( name )  ;^280^^^^^247^331^[REPLACE] DefineInfo info = assignableDefines.get ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^250^251^^^^247^331^[ADD] Ref ref = refInfo.ref; Name name = refInfo.name;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^String.isSimpleName = name.fullName (  ) ;^252^^^^^247^331^[REPLACE] String fullName = name.fullName (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node val = parent.getFirstChild (  ) ;^257^^^^^247^331^[REPLACE] Node val = valParent.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  == true && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^247^331^[REPLACE] if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.addToDebugLog ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^[REPLACE] compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^294^^^^^290^295^[REPLACE] JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( lvalueToRemoveLater  &&  n )  {^297^^^^^247^331^[REPLACE] if  ( lvalueToRemoveLater == n )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^297^298^299^300^301^247^331^[ADD] if  ( lvalueToRemoveLater == n )  { lvalueToRemoveLater = null; if  ( n.getType (  )  == Token.ASSIGN )  { Node last = n.getLastChild (  ) ; n.removeChild ( last ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( n.getType (  )   &&  Token.ASSIGN )  {^299^^^^^247^331^[REPLACE] if  ( n.getType (  )  == Token.ASSIGN )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Preconditions.checkState ( n.getType (  )   &&  Token.NAME ) ;^304^^^^^299^306^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Preconditions.checkState ( n.removeChild (  )  == Token.NAME ) ;^304^^^^^299^306^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^n.removeChild ( n.getLastChild (  )  ) ;^305^^^^^299^306^[REPLACE] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^n.getLastChild (  )  ;^305^^^^^299^306^[REPLACE] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^300^^^^^247^331^[ADD] Node last = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^lvalueToRemoveLater = valParent  ;^298^^^^^247^331^[REPLACE] lvalueToRemoveLater = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node n = ref.node  ;^300^^^^^247^331^[REPLACE] Node last = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( n.getType (  )   ||  Token.ASSIGN )  {^299^^^^^247^331^[REPLACE] if  ( n.getType (  )  == Token.ASSIGN )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Preconditions.checkState ( valParent.getType (  )   !=  Token.NAME ) ;^304^^^^^299^306^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Preconditions.checkState ( valParent.removeChild (  )  == Token.NAME ) ;^304^^^^^299^306^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REMOVE]^n.removeChild ( n.getFirstChild (  )  )  ;^304^^^^^299^306^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^n.removeChild ( valParent.getFirstChild (  )  ) ;^305^^^^^299^306^[REPLACE] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^305^^^^^299^306^[ADD] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^Node last = valParent.getLastChild (  ) ;^300^^^^^247^331^[REPLACE] Node last = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^lvalueToRemoveLater = false;^298^^^^^247^331^[REPLACE] lvalueToRemoveLater = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( n.getType (  )   &&  Token.CALL )  {^310^^^^^247^331^[REPLACE] if  ( n.getType (  )  == Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( t.getSourceName (  )  )  {^311^^^^^247^331^[REPLACE] if  ( t.inGlobalScope (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^for  ( DefineInfo info : assignableDefines.keySet (  )  )  {^322^^^^^311^327^[REPLACE] for  ( DefineInfo info : assignableDefines.values (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^323^^^^^311^327^[REPLACE] setDefineInfoNotAssignable ( info, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^322^323^324^^^311^327^[ADD] for  ( DefineInfo info : assignableDefines.values (  )  )  { setDefineInfoNotAssignable ( info, t ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^for  ( DefineInfo info : assignableDefines .isSet (  )   )  {^322^^^^^311^327^[REPLACE] for  ( DefineInfo info : assignableDefines.values (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = allDefines.get ( name )  ;^322^^^^^311^327^[REPLACE] for  ( DefineInfo info : assignableDefines.values (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if   (  info == null && parent.getType  (    )   == Token.VAR && parent.hasOneChild  (    )    )   {  ;^311^^^^^247^331^[REPLACE] if  ( t.inGlobalScope (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^updateAssignAllowedStack ( n, true )  ;^330^^^^^247^331^[REPLACE] updateAssignAllowedStack ( n, false ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  RefInfo refInfo  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if   (  info == null && parent.getType  (    )   == Token.VAR && parent.hasOneChild  (    )    )   {  ;^349^^^^^340^356^[REPLACE] if  ( entering )  {^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^assignAllowed.push ( 0 ) ;assignAllowed.remove (  ) ;^349^350^351^352^353^340^356^[ADD] if  ( entering )  { assignAllowed.push ( 0 ) ; } else { assignAllowed.remove (  ) ; }^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^assignAllowed.push ( 0 )  ;^352^^^^^349^353^[REPLACE] assignAllowed.remove (  ) ;^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^assignAllowed.push ( 0 % 4 ) ;^350^^^^^340^356^[REPLACE] assignAllowed.push ( 0 ) ;^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^350^^^^^340^356^[ADD] assignAllowed.push ( 0 ) ;^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  [TYPE]  String defineName  fullName  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  (  !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^377^378^^^^376^405^[REPLACE] if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^377^378^379^380^^376^405^[ADD] if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  { compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^} else if  ( isAssignAllowed (  )  )  {^381^^^^^376^405^[REPLACE] } else if  ( !isAssignAllowed (  )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^}   JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;DefineInfo info = allDefines.get ( name ) ;^381^382^383^384^385^376^405^[ADD] else if  ( !isAssignAllowed (  )  )  { compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ; } else { DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( info != false )  {^386^^^^^381^402^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^} else if  ( info.recordAssignment ( valParent )  )  {^391^^^^^381^402^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^399^400^^^^391^401^[ADD] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^400^^^^^391^401^[REPLACE] name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^return false;^394^^^^^381^402^[REPLACE] return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^return true;  ;^394^^^^^381^402^[REPLACE] return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^info =  new DefineInfo ( null, nullParent ) ;^388^^^^^381^402^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^}  else {^391^^^^^381^402^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.addToDebugLog ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^name, info.getLastValue (  )  )  ) ;^400^^^^^391^401^[REPLACE] name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^388^^^^^381^402^[ADD] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = allDefines.get ( unknownDefine ) ;^385^^^^^381^402^[REPLACE] DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler .reportCodeChange (  )  ;^382^383^^^^376^405^[REPLACE] compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^JSError .make ( INVALID_DEFINE_INIT_ERROR , defineName )   ) ;^383^^^^^376^405^[REPLACE] JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^383^^^^^376^405^[ADD] JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( info != true )  {^386^^^^^376^405^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^}  if  ( info.recordAssignment ( value )  )  {^391^^^^^376^405^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^}   return true;^391^392^^394^^376^405^[ADD] else if  ( info.recordAssignment ( value )  )  {  return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^return false;^394^^^^^376^405^[REPLACE] return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^388^^^^^376^405^[ADD] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.addToDebugLog ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, unknownDefine, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^398^399^400^^^391^401^[ADD] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^info =  new DefineInfo ( valueParent, valueParentParent ) ;^388^^^^^376^405^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = allDefines.get ( unknownDefine ) ;^385^^^^^376^405^[REPLACE] DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( JSError.make ( t, valueParent, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^[REPLACE] compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^JSError.make ( t, valParent, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^[REPLACE] JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^}  if  ( isAssignAllowed (  )  )  {^381^^^^^376^405^[REPLACE] } else if  ( !isAssignAllowed (  )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if  ( info != null )  {^386^^^^^381^402^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler .reportCodeChange (  )   ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^JSError .make ( DEFINE_NOT_ASSIGNABLE_ERROR , name )   ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^info =  new DefineInfo ( valueParent, valueParentParent ) ;^388^^^^^381^402^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^info =   new RefInfo ( ref, name )  ;^388^^^^^381^402^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[ADD]^^385^^^^^381^402^[ADD] DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.addToDebugLog ( JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^[REPLACE] compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^383^^^^^376^405^[REPLACE] JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REMOVE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^383^^^^^376^405^[REMOVE] ^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^if   (  info != null  )   {  ;^386^^^^^376^405^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^}  else {^391^^^^^376^405^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getLastValue (  )  )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getLastValue (  )  )  ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^return true;  ;^394^^^^^376^405^[REPLACE] return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^info =   new RefInfo ( ref, name )  ;^388^^^^^376^405^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^compiler.report ( JSError .make ( INVALID_DEFINE_INIT_ERROR , unknownDefine )   ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^JSError .make ( DEFINE_NOT_ASSIGNABLE_ERROR , fullName )   ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^DefineInfo info = def.getValue (  )  ;^385^^^^^376^405^[REPLACE] DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^return true;^404^^^^^376^405^[REPLACE] return false;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] ProcessDefines CollectDefines RefInfo DefineInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^private  AbstractCompiler compiler;^189^^^^^^^[REPLACE] private final AbstractCompiler compiler;^[METHOD] getLastValue [TYPE] Node [PARAMETER] [CLASS] CollectDefines RefInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^private  Map<String, DefineInfo> assignableDefines;^190^^^^^^^[REPLACE] private final Map<String, DefineInfo> assignableDefines;^[METHOD] getLastValue [TYPE] Node [PARAMETER] [CLASS] CollectDefines RefInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^private  Map<Node, RefInfo> allRefInfo;^192^^^^^^^[REPLACE] private final Map<Node, RefInfo> allRefInfo;^[METHOD] getLastValue [TYPE] Node [PARAMETER] [CLASS] CollectDefines RefInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^private Node lvalueToRemoveLater  = null ;^196^^^^^^^[REPLACE] private Node lvalueToRemoveLater = null;^[METHOD] getLastValue [TYPE] Node [PARAMETER] [CLASS] CollectDefines RefInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^private  Deque<Integer> assignAllowed;^201^^^^^^^[REPLACE] private final Deque<Integer> assignAllowed;^[METHOD] getLastValue [TYPE] Node [PARAMETER] [CLASS] CollectDefines RefInfo   [TYPE]  Set KNOWN_DEFINES  unusedReplacements  [TYPE]  MessageFormat REASON_DEFINE_NOT_ASSIGNABLE  format  [TYPE]  Node externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  [TYPE]  String defineName  fullName  name  reason  reasonNotAssignable  unknownDefine  [TYPE]  GlobalNamespace namespace  [TYPE]  Deque assignAllowed  [TYPE]  Name name  [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean changed  entering  false  isAssignable  true  [TYPE]  DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  [TYPE]  Map allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements 
[REPLACE]^this.compiler =  null;^204^^^^^203^227^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^allRefInfo = newHashMap (  )  ;^205^^^^^203^227^[REPLACE] this.allDefines = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^this.allDefines = newHashMap (  )  ;^207^^^^^203^227^[REPLACE] assignableDefines = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^assignAllowed ;^208^^^^^203^227^[REPLACE] assignAllowed = new ArrayDeque<Integer> (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^assignAllowed.push ( 1 + 1 ) ;^209^^^^^203^227^[REPLACE] assignAllowed.push ( 1 ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^this.allDefines = newHashMap (  )  ;^212^^^^^203^227^[REPLACE] allRefInfo = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( name.declaration == null )  {^214^^^^^203^227^[REPLACE] if  ( name.declaration != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^allRefInfo .put ( 0 )  ;^215^216^^^^203^227^[REPLACE] allRefInfo.put ( name.declaration.node, new RefInfo ( name.declaration, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( name.refs == this )  {^218^^^^^203^227^[REPLACE] if  ( name.refs != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( ref.getTwin (  )  != this || !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^[REPLACE] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^222^^^^^203^227^[REPLACE] allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^222^^^^^203^227^[ADD] allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Ref ref = refInfo.ref  ;^219^^^^^218^225^[REPLACE] for  ( Ref ref : name.refs )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  (  !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^[REPLACE] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^221^222^223^^^203^227^[ADD] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  { allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^allRefInfo .put ( this )  ;^222^^^^^203^227^[REPLACE] allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^213^214^215^216^217^203^227^[ADD] for  ( Name name : listOfDefines )  { if  ( name.declaration != null )  { allRefInfo.put ( name.declaration.node, new RefInfo ( name.declaration, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( name.declaration == true )  {^214^^^^^203^227^[REPLACE] if  ( name.declaration != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^allRefInfo .put ( 1 )  ;^215^216^^^^203^227^[REPLACE] allRefInfo.put ( name.declaration.node, new RefInfo ( name.declaration, name )  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( name.refs == null )  {^218^^^^^203^227^[REPLACE] if  ( name.refs != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( ref.getTwin (  )  != null || !ref.getTwin (  ) .isSet (  )  )  {^221^^^^^203^227^[REPLACE] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^221^222^223^^^203^227^[ADD] if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  { allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^219^220^221^222^223^218^225^[ADD] for  ( Ref ref : name.refs )  {  if  ( ref.getTwin (  )  == null || !ref.getTwin (  ) .isSet (  )  )  { allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Ref ref = refInfo.ref  ;^213^^^^^218^225^[REPLACE] for  ( Name name : listOfDefines )  {^[METHOD] <init> [TYPE] List) [PARAMETER] AbstractCompiler compiler Name> listOfDefines [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  Node lvalueToRemoveLater  [TYPE]  List listOfDefines  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^RefInfo refInfo = allRefInfo.get ( valParent ) ;^248^^^^^247^331^[REPLACE] RefInfo refInfo = allRefInfo.get ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if   (  info != null  )   {  ;^249^^^^^247^331^[REPLACE] if  ( refInfo != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^Ref ref = refInfo.ref;Name name = refInfo.name;String fullName = name.fullName (  ) ;^249^250^251^252^^247^331^[ADD] if  ( refInfo != null )  { Ref ref = refInfo.ref; Name name = refInfo.name; String fullName = name.fullName (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( valParent.getType (  )  == Token.ASSIGN || name.isSimpleName (  )  || name.declaration == ref )  {^258^259^^^^247^331^[REPLACE] if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^}  if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^264^^^^^247^331^[REPLACE] } else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^lvalueToRemoveLater = null  ;^272^^^^^247^331^[REPLACE] lvalueToRemoveLater = valParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( JSError.make ( t, valParent, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^[REPLACE] compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^263^^^^^258^273^[REPLACE] JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^}  else {^264^^^^^247^331^[REPLACE] } else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if   (  info != null  )   {  ;^276^^^^^247^331^[REPLACE] if  ( t.inGlobalScope (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( info == null )  {^281^^^^^247^331^[REPLACE] if  ( info != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^281^282^283^284^^247^331^[ADD] if  ( info != null )  { setDefineInfoNotAssignable ( info, t ) ; assignableDefines.remove ( fullName ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^282^^^^^247^331^[REPLACE] setDefineInfoNotAssignable ( info, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^assignableDefines.get ( fullName ) ;^283^^^^^247^331^[REPLACE] assignableDefines.remove ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REMOVE]^assignableDefines.put ( name, info )  ;^283^^^^^247^331^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^DefineInfo info = assignableDefines.remove ( fullName ) ;^280^^^^^247^331^[REPLACE] DefineInfo info = assignableDefines.get ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if   (  refInfo != null  )   {  ;^281^^^^^247^331^[REPLACE] if  ( info != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^282^283^^^^247^331^[ADD] setDefineInfoNotAssignable ( info, t ) ; assignableDefines.remove ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^272^^^^^247^331^[ADD] lvalueToRemoveLater = valParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Name name = refInfo.name  ;^250^^^^^247^331^[REPLACE] Ref ref = refInfo.ref;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Ref ref = refInfo.ref  ;^251^^^^^247^331^[REPLACE] Name name = refInfo.name;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^String.isSimpleName = name.fullName (  ) ;^252^^^^^247^331^[REPLACE] String fullName = name.fullName (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^DefineInfo info = allDefines.get ( name )  ;^256^^^^^247^331^[REPLACE] Node valParent = getValueParent ( ref ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Node val = val.getLastChild (  ) ;^257^^^^^247^331^[REPLACE] Node val = valParent.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  (  name.isSimpleName (  )  || name.declaration == ref )  {^258^259^^^^247^331^[REPLACE] if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^258^259^^^262^247^331^[ADD] if  ( valParent.getType (  )  == Token.ASSIGN && name.isSimpleName (  )  && name.declaration == ref )  { compiler.report (^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler .reportCodeChange (  )  ;^262^263^^^^258^273^[REPLACE] compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^263^^^^^258^273^[ADD] JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^}^264^265^^^^247^331^[ADD] else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( info == this  )  {^281^^^^^247^331^[REPLACE] if  ( info != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^setDefineInfoNotAssignable ( info, t ) ;assignableDefines.remove ( fullName ) ;^281^282^283^284^^247^331^[ADD] if  ( info != null )  { setDefineInfoNotAssignable ( info, t ) ; assignableDefines.remove ( fullName ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^assignableDefines.get ( fullName )  ;^283^^^^^247^331^[REPLACE] assignableDefines.remove ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^280^^^^^247^331^[ADD] DefineInfo info = assignableDefines.get ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^257^^^^^247^331^[ADD] Node val = valParent.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^DefineInfo info = allDefines.get ( name )  ;^280^^^^^247^331^[REPLACE] DefineInfo info = assignableDefines.get ( fullName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  == false && n.getJSDocInfo (  ) .isDefine (  )  )  {^290^291^^^^247^331^[REPLACE] if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^290^291^^293^294^247^331^[ADD] if  ( !t.inGlobalScope (  )  && n.getJSDocInfo (  )  != null && n.getJSDocInfo (  ) .isDefine (  )  )  { compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( JSError.make ( t, valParent, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^[REPLACE] compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^JSError .make ( t , val , this , fullName , fullName )   ) ;^294^^^^^290^295^[REPLACE] JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^294^^^^^290^295^[ADD] JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( lvalueToRemoveLater  !=  n )  {^297^^^^^247^331^[REPLACE] if  ( lvalueToRemoveLater == n )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REMOVE]^if  (  ( n.getType (  )  )  ==  ( ASSIGN )  )  {     Node last = n.getLastChild (  ) ;     n.removeChild ( last ) ;     parent.replaceChild ( n, last ) ; }else {     checkState (  (  ( n.getType (  )  )  ==  ( NAME )  )  ) ;     n.removeChild ( n.getFirstChild (  )  ) ; }^297^^^^^247^331^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( valParent.getType (  )   ||  Token.ASSIGN )  {^299^^^^^247^331^[REPLACE] if  ( n.getType (  )  == Token.ASSIGN )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Preconditions.checkState ( n.removeChild (  )   !=  Token.NAME ) ;^304^^^^^299^306^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Preconditions.checkState ( valParent.getType (  )  == Token.NAME ) ;^304^^^^^299^306^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^304^^^^^299^306^[ADD] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^305^^^^^299^306^[REPLACE] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^305^^^^^299^306^[ADD] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^n.getLastChild (  )  ;^305^^^^^299^306^[REPLACE] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Node val = valParent.getLastChild (  )  ;^300^^^^^247^331^[REPLACE] Node last = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^lvalueToRemoveLater = valParent  ;^298^^^^^247^331^[REPLACE] lvalueToRemoveLater = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^300^301^^^^247^331^[ADD] Node last = n.getLastChild (  ) ; n.removeChild ( last ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( n.getType (  )   ) {^299^^^^^247^331^[REPLACE] if  ( n.getType (  )  == Token.ASSIGN )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Preconditions.checkState ( n.getType (  )   ||  Token.NAME ) ;^304^^^^^299^306^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.NAME ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^n.removeChild ( valParent.getFirstChild (  )  ) ;^305^^^^^299^306^[REPLACE] n.removeChild ( n.getFirstChild (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^n.removeChild ( last ) ;^300^301^^^^247^331^[ADD] Node last = n.getLastChild (  ) ; n.removeChild ( last ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^lvalueToRemoveLater = this;^298^^^^^247^331^[REPLACE] lvalueToRemoveLater = null;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Node last = valParent.getFirstChild (  ) ;^300^^^^^247^331^[REPLACE] Node last = n.getLastChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( n.getType (  )   !=  Token.CALL )  {^310^^^^^247^331^[REPLACE] if  ( n.getType (  )  == Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( t.getSourceName (  )  )  {^311^^^^^247^331^[REPLACE] if  ( t.inGlobalScope (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^for  ( DefineInfo info : assignableDefines.clear (  )  )  {^322^^^^^311^327^[REPLACE] for  ( DefineInfo info : assignableDefines.values (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^323^^^^^311^327^[REPLACE] setDefineInfoNotAssignable ( info, t ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^DefineInfo info = allDefines.get ( name )  ;^322^^^^^311^327^[REPLACE] for  ( DefineInfo info : assignableDefines.values (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if   (  info != null  )   {  ;^311^^^^^247^331^[REPLACE] if  ( t.inGlobalScope (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^322^323^324^^^311^327^[ADD] for  ( DefineInfo info : assignableDefines.values (  )  )  { setDefineInfoNotAssignable ( info, t ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REMOVE]^processDefineAssignment ( t, fullName, val, valParent )  ;^323^^^^^311^327^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^updateAssignAllowedStack ( n, true ) ;^330^^^^^247^331^[REPLACE] updateAssignAllowedStack ( n, false ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  RefInfo refInfo  [TYPE]  String fullName  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if   (  info != null  )   {  ;^349^^^^^340^356^[REPLACE] if  ( entering )  {^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean entering  false  true  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^assignAllowed.element (  ) ;^352^^^^^349^353^[REPLACE] assignAllowed.remove (  ) ;^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean entering  false  true  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^assignAllowed.push ( 0 >> 4 ) ;^350^^^^^340^356^[REPLACE] assignAllowed.push ( 0 ) ;^[METHOD] updateAssignAllowedStack [TYPE] void [PARAMETER] Node n boolean entering [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean entering  false  true  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( value != null ) {^377^378^^^^376^405^[REPLACE] if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^} else if  ( isAssignAllowed (  )  )  {^381^^^^^376^405^[REPLACE] } else if  ( !isAssignAllowed (  )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^}   JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;DefineInfo info = allDefines.get ( name ) ;^381^382^383^384^385^376^405^[ADD] else if  ( !isAssignAllowed (  )  )  { compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ; } else { DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( info != this  )  {^386^^^^^381^402^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^} else if  ( info .setNotAssignable ( name )   )  {^391^^^^^381^402^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler .reportCodeChange (  )   ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info .setNotAssignable ( name )   )  ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^400^^^^^391^401^[REPLACE] name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^return false;^394^^^^^381^402^[REPLACE] return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^info =  new DefineInfo ( valParent, valParentParent ) ;^388^^^^^381^402^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^}  if  ( info.setNotAssignable ( value )  )  {^391^^^^^381^402^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^}   return true;^391^392^^394^^381^402^[ADD] else if  ( info.recordAssignment ( value )  )  {  return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^JSError.make ( t, value, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^400^^^^^391^401^[ADD] name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^info =  new DefineInfo ( valueParent, valueParentParent ) ;^388^^^^^381^402^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^385^^^^^381^402^[ADD] DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( JSError .make ( t , value , null , name , name )   ) ;^382^383^^^^376^405^[REPLACE] compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  )  ;^383^^^^^376^405^[REPLACE] JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( info != true )  {^386^^^^^376^405^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^}  else {^391^^^^^376^405^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^name, info .setNotAssignable ( name )   )  ) ;^400^^^^^391^401^[REPLACE] name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REMOVE]^n.getFirstChild (  )  ;^400^^^^^391^401^[REMOVE] ^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^return false;^394^^^^^376^405^[REPLACE] return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^info =  new DefineInfo ( null, nullParent ) ;^388^^^^^376^405^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^398^399^400^^^391^401^[ADD] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^399^400^^^^391^401^[ADD] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^info =  new DefineInfo ( valParent, valParentParent ) ;^388^^^^^376^405^[REPLACE] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^385^^^^^376^405^[ADD] DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler .reportCodeChange (  )  ;^379^380^^^^377^402^[REPLACE] compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^379^380^^^^377^402^[ADD] compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^JSError .make ( t , lvalueToRemoveLater , null , name , name )   ) ;^380^^^^^377^402^[REPLACE] JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^}  if  ( isAssignAllowed (  )  )  {^381^^^^^376^405^[REPLACE] } else if  ( !isAssignAllowed (  )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( info != null )  {^386^^^^^381^402^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^386^387^388^389^390^381^402^[ADD] if  ( info == null )  {  info = new DefineInfo ( value, valueParent ) ; allDefines.put ( name, info ) ; assignableDefines.put ( name, info ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^} else if  ( info.setNotAssignable ( value )  )  {^391^^^^^381^402^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^388^^^^^381^402^[ADD] info = new DefineInfo ( value, valueParent ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^}  else {^391^^^^^381^402^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^388^389^^^^381^402^[ADD] info = new DefineInfo ( value, valueParent ) ; allDefines.put ( name, info ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^DefineInfo info  ;^385^^^^^381^402^[REPLACE] DefineInfo info = allDefines.get ( name ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^382^383^^^^376^405^[ADD] compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^if  ( info != null )  {^386^^^^^376^405^[REPLACE] if  ( info == null )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^}   return true;^391^392^^394^^376^405^[ADD] else if  ( info.recordAssignment ( value )  )  {  return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( JSError.make ( t, val, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^JSError.make ( t, valParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^return true;  ;^394^^^^^376^405^[REPLACE] return true;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^allDefines.put ( name, info ) ;^388^389^^^^376^405^[ADD] info = new DefineInfo ( value, valueParent ) ; allDefines.put ( name, info ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^}  if  ( info.recordAssignment ( value )  )  {^391^^^^^376^405^[REPLACE] } else if  ( info.recordAssignment ( value )  )  {^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info .setNotAssignable ( name )   )  ) ;^398^399^400^^^391^401^[REPLACE] compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^JSError .make ( t , value , true , name )   ) ;^399^400^^^^391^401^[REPLACE] JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[ADD]^^388^389^^^^376^405^[ADD] info = new DefineInfo ( value, valueParent ) ; allDefines.put ( name, info ) ;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^return true;^404^^^^^376^405^[REPLACE] return false;^[METHOD] processDefineAssignment [TYPE] boolean [PARAMETER] NodeTraversal t String name Node value Node valueParent [CLASS] CollectDefines RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  String name  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^Ref ref;^437^^^^^^^[REPLACE] final Ref ref;^[METHOD] setDefineInfoNotAssignable [TYPE] void [PARAMETER] DefineInfo info NodeTraversal t [CLASS] RefInfo   [TYPE]  AbstractCompiler compiler  [TYPE]  Ref ref  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DefineInfo info  [TYPE]  Node last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  [TYPE]  Map allDefines  allRefInfo  assignableDefines  [TYPE]  Deque assignAllowed  [TYPE]  Name name 
[REPLACE]^private final Node initialValueParent;^453^^^^^^^[REPLACE] public final Node initialValueParent;^[METHOD] <init> [TYPE] Name) [PARAMETER] Ref ref Name name [CLASS] DefineInfo   [TYPE]  Ref ref  [TYPE]  Name name  [TYPE]  boolean false  true 
[REPLACE]^private final Node initialValue;^454^^^^^^^[REPLACE] public final Node initialValue;^[METHOD] <init> [TYPE] Name) [PARAMETER] Ref ref Name name [CLASS] DefineInfo   [TYPE]  Ref ref  [TYPE]  Name name  [TYPE]  boolean false  true 
