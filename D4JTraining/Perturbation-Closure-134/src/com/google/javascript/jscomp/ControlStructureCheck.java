[REPLACE]^private String sourceName  = null ;^32^^^^^^^[REPLACE] private String sourceName = null;^ [CLASS] ControlStructureCheck  
[REPLACE]^static final DiagnosticType USE_OF_WITH  = null ;^34^35^36^^^34^36^[REPLACE] static final DiagnosticType USE_OF_WITH = DiagnosticType.warning ( "JSC_USE_OF_WITH", "The use of the 'with' structure should be avoided." ) ;^ [CLASS] ControlStructureCheck  
[REPLACE]^if  ( allowWith )  {^58^^^^^52^74^[REPLACE] if  ( !allowWith )  {^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
[REPLACE]^report ( next, USE_OF_WITH ) ;^59^^^^^52^74^[REPLACE] report ( node, USE_OF_WITH ) ;^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
[REPLACE]^sourceName =   ( String )  next.getProp ( Node.SOURCENAME_PROP ) ;^65^^^^^52^74^[REPLACE] sourceName =  ( String )  node.getProp ( Node.SOURCENAME_PROP ) ;^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
[ADD]^^55^^^^^52^74^[ADD] JSDocInfo info = node.getJSDocInfo (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
[ADD]^^56^57^^^^52^74^[ADD] boolean allowWith = info != null && info.getSuppressions (  ) .contains ( "with" ) ;^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
[REPLACE]^bChild =  node;^72^^^^^52^74^[REPLACE] bChild = next;^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
[ADD]^^69^70^71^72^73^52^74^[ADD] for  ( Node bChild = node.getFirstChild (  ) ; bChild != null; )  { Node next = bChild.getNext (  ) ; check ( bChild ) ; bChild = next; }^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
[REPLACE]^Node next = bChild.getType (  ) ;^70^^^^^52^74^[REPLACE] Node next = bChild.getNext (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Node node [CLASS] ControlStructureCheck   [TYPE]  AbstractCompiler compiler  [TYPE]  String sourceName  [TYPE]  boolean allowWith  false  true  [TYPE]  JSDocInfo info  [TYPE]  DiagnosticType USE_OF_WITH  [TYPE]  Node bChild  next  node 
