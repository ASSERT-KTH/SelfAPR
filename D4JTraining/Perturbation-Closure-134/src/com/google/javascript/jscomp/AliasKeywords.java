[REPLACE]^private final Map<Node, Node> nodes ;^81^^^^^^^[REPLACE] private final Map<Node, Node> nodes = Maps.newHashMap (  ) ;^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^private boolean isAliased  = null ;^87^^^^^^^[REPLACE] private boolean isAliased = false;^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^static final String ALIAS_NULL  = null ;^256^^^^^^^[REPLACE] static final String ALIAS_NULL = "$$ALIAS_NULL";^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^static final String ALIAS_TRUE  = null ;^257^^^^^^^[REPLACE] static final String ALIAS_TRUE = "$$ALIAS_TRUE";^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^static final String ALIAS_FALSE ;^258^^^^^^^[REPLACE] static final String ALIAS_FALSE = "$$ALIAS_FALSE";^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^static final String ALIAS_THROW ;^259^^^^^^^[REPLACE] static final String ALIAS_THROW = "$$ALIAS_THROW";^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  = null ;^283^^^^^^^[REPLACE] static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = 6;^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  = null ;^289^290^^^^289^290^[REPLACE] static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW = ThrowAliasSpecification.estimateMinOccurrencesRequriedToAlias (  ) ;^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^private  AbstractCompiler compiler;^293^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  
[REPLACE]^private final Map<Node, Node> nodes  = null ;^81^^^^^^^[REPLACE] private final Map<Node, Node> nodes = Maps.newHashMap (  ) ;^[METHOD] visitNameNode [TYPE] void [PARAMETER] Node n [CLASS] AliasSpecification   [TYPE]  boolean false  true  [TYPE]  Node n 
[REPLACE]^private boolean isAliased  = null ;^87^^^^^^^[REPLACE] private boolean isAliased = false;^[METHOD] visitNameNode [TYPE] void [PARAMETER] Node n [CLASS] AliasSpecification   [TYPE]  boolean false  true  [TYPE]  Node n 
[REPLACE]^private  byte  aliasName;^89^^^^^^^[REPLACE] private String aliasName;^[METHOD] visitNameNode [TYPE] void [PARAMETER] Node n [CLASS] AliasSpecification   [TYPE]  boolean false  true  [TYPE]  Node n 
