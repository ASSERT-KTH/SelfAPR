[REPLACE]^private static final String COMPILED_CONSTANT_NAME ;^53^^^^^^^[REPLACE] private static final String COMPILED_CONSTANT_NAME = "COMPILED";^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private static  String CLOSURE_LOCALE_CONSTANT_NAME = "goog.LOCALE";^56^^^^^^^[REPLACE] private static final String CLOSURE_LOCALE_CONSTANT_NAME = "goog.LOCALE";^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^static final DiagnosticType TIGHTEN_TYPES_WITHOUT_TYPE_CHECK ;^59^60^61^^^59^61^[REPLACE] static final DiagnosticType TIGHTEN_TYPES_WITHOUT_TYPE_CHECK = DiagnosticType.error ( "JSC_TIGHTEN_TYPES_WITHOUT_TYPE_CHECK", "TightenTypes requires type checking. Please use --check_types." ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^static final DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR ;^63^64^65^^^63^65^[REPLACE] static final DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR = DiagnosticType.error ( "JSC_CANNOT_USE_PROTOTYPE_AND_VAR", "Rename prototypes and inline variables cannot be used together" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final DiagnosticType REPORT_PATH_IO_ERROR = DiagnosticType.error ( "JSC_REPORT_PATH_IO_ERROR", "Error writing compiler report to {0}" ) ;^68^69^70^^^68^70^[REPLACE] static final DiagnosticType REPORT_PATH_IO_ERROR = DiagnosticType.error ( "JSC_REPORT_PATH_IO_ERROR", "Error writing compiler report to {0}" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private static  DiagnosticType INPUT_MAP_PROP_PARSE = DiagnosticType.error ( "JSC_INPUT_MAP_PROP_PARSE", "Input property map parse error: {0}" ) ;^72^73^74^^^72^74^[REPLACE] private static final DiagnosticType INPUT_MAP_PROP_PARSE = DiagnosticType.error ( "JSC_INPUT_MAP_PROP_PARSE", "Input property map parse error: {0}" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private static final DiagnosticType INPUT_MAP_VAR_PARSE ;^76^77^78^^^76^78^[REPLACE] private static final DiagnosticType INPUT_MAP_VAR_PARSE = DiagnosticType.error ( "JSC_INPUT_MAP_VAR_PARSE", "Input variable map parse error: {0}" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private GlobalNamespace namespaceForChecks ;^85^^^^^^^[REPLACE] private GlobalNamespace namespaceForChecks = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private TightenTypes tightenTypes ;^90^^^^^^^[REPLACE] private TightenTypes tightenTypes = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private Set<String> exportedNames ;^93^^^^^^^[REPLACE] private Set<String> exportedNames = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator ;^99^100^^^^99^100^[REPLACE] private CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator = new CrossModuleMethodMotion.IdGenerator (  ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private Map<String, Integer> cssNames ;^106^^^^^^^[REPLACE] private Map<String, Integer> cssNames = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private VariableMap variableMap ;^109^^^^^^^[REPLACE] private VariableMap variableMap = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private VariableMap propertyMap = this;^112^^^^^^^[REPLACE] private VariableMap propertyMap = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private VariableMap anonymousFunctionNameMap  = null ;^115^^^^^^^[REPLACE] private VariableMap anonymousFunctionNameMap = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private FunctionNames functionNames ;^118^^^^^^^[REPLACE] private FunctionNames functionNames = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory suspiciousCode ;^593^594^^^^593^608^[REPLACE] final PassFactory suspiciousCode = new PassFactory ( "suspiciousCode", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkControlStructures  = null ;^625^626^^^^625^631^[REPLACE] private final PassFactory checkControlStructures = new PassFactory ( "checkControlStructures", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkRequires ;^634^635^^^^634^640^[REPLACE] private final PassFactory checkRequires = new PassFactory ( "checkRequires", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkProvides ;^643^644^^^^643^649^[REPLACE] private final PassFactory checkProvides = new PassFactory ( "checkProvides", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private static final DiagnosticType GENERATE_EXPORTS_ERROR  = null ;^651^652^653^654^^651^655^[REPLACE] private static final DiagnosticType GENERATE_EXPORTS_ERROR = DiagnosticType.error ( "JSC_GENERATE_EXPORTS_ERROR", "Exports can only be generated if export symbol/property " +^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory generateExports  = null ;^658^659^^^^658^672^[REPLACE] private final PassFactory generateExports = new PassFactory ( "generateExports", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory exportTestFunctions  = null ;^675^676^^^^675^687^[REPLACE] private final PassFactory exportTestFunctions = new PassFactory ( "exportTestFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory gatherRawExports  = null ;^690^691^^^^690^708^[REPLACE] final PassFactory gatherRawExports = new PassFactory ( "gatherRawExports", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^PassFactory closurePrimitives = new PassFactory ( "processProvidesAndRequires", false )  {^712^713^^^^712^729^[REPLACE] final PassFactory closurePrimitives = new PassFactory ( "processProvidesAndRequires", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory closureCheckGetCssName  = null ;^732^733^^^^732^742^[REPLACE] private final PassFactory closureCheckGetCssName = new PassFactory ( "checkMissingGetCssName", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory closureReplaceGetCssName  = null ;^749^750^^^^749^766^[REPLACE] private final PassFactory closureReplaceGetCssName = new PassFactory ( "renameCssNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory createSyntheticBlocks = new PassFactory ( "createSyntheticBlocks", true )  {^772^773^^^^772^780^[REPLACE] private final PassFactory createSyntheticBlocks = new PassFactory ( "createSyntheticBlocks", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^static final PassFactory foldConstants ;^783^784^^^^783^789^[REPLACE] static final PassFactory foldConstants = new PassFactory ( "foldConstants", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkVars  = null ;^792^793^^^^792^798^[REPLACE] private final PassFactory checkVars = new PassFactory ( "checkVars", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkShadowVars ;^801^802^^^^801^808^[REPLACE] private final PassFactory checkShadowVars = new PassFactory ( "variableShadowDeclarationCheck", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkVariableReferences ;^811^812^^^^811^818^[REPLACE] private final PassFactory checkVariableReferences = new PassFactory ( "checkVariableReferences", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory objectPropertyStringPreprocess  = null ;^821^822^^^^821^827^[REPLACE] private final PassFactory objectPropertyStringPreprocess = new PassFactory ( "ObjectPropertyStringPreprocess", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkFunctions ;^830^831^^^^830^836^[REPLACE] private final PassFactory checkFunctions = new PassFactory ( "checkFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory checkMethods = new PassFactory ( "checkMethods", true )  {^839^840^^^^839^845^[REPLACE] private final PassFactory checkMethods = new PassFactory ( "checkMethods", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory resolveTypes  = null ;^848^849^^^^848^854^[REPLACE] final PassFactory resolveTypes = new PassFactory ( "resolveTypes", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory inferTypes ;^857^858^^^^857^871^[REPLACE] private final PassFactory inferTypes = new PassFactory ( "inferTypes", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory checkTypes = new PassFactory ( "checkTypes", false )  {^874^875^^^^874^890^[REPLACE] private final PassFactory checkTypes = new PassFactory ( "checkTypes", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkControlFlow  = null ;^896^897^^^^896^911^[REPLACE] private final PassFactory checkControlFlow = new PassFactory ( "checkControlFlow", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkAccessControls ;^914^915^^^^914^920^[REPLACE] private final PassFactory checkAccessControls = new PassFactory ( "checkAccessControls", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory checkGlobalNames = new PassFactory ( "Check names", true )  {^951^952^^^^951^967^[REPLACE] private final PassFactory checkGlobalNames = new PassFactory ( "Check names", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkSuspiciousProperties ;^970^971^^^^970^980^[REPLACE] private final PassFactory checkSuspiciousProperties = new PassFactory ( "checkSuspiciousProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkStrictMode ;^983^984^^^^983^991^[REPLACE] private final PassFactory checkStrictMode = new PassFactory ( "checkStrictMode", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory processDefines ;^994^995^^^^994^1014^[REPLACE] final PassFactory processDefines = new PassFactory ( "processDefines", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkConsts  = null ;^1017^1018^^^^1017^1023^[REPLACE] private final PassFactory checkConsts = new PassFactory ( "checkConsts", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory computeFunctionNames = new PassFactory ( "computeFunctionNames", true )  {^1026^1027^^^^1026^1032^[REPLACE] private final PassFactory computeFunctionNames = new PassFactory ( "computeFunctionNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory ignoreCajaProperties  = null ;^1035^1036^^^^1035^1041^[REPLACE] private final PassFactory ignoreCajaProperties = new PassFactory ( "ignoreCajaProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory replaceIdGenerators = new PassFactory ( "replaceIdGenerators", true )  {^1044^1045^^^^1044^1050^[REPLACE] private final PassFactory replaceIdGenerators = new PassFactory ( "replaceIdGenerators", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory optimizeArgumentsArray = new PassFactory ( "optimizeArgumentsArray", true )  {^1053^1054^^^^1053^1059^[REPLACE] private final PassFactory optimizeArgumentsArray = new PassFactory ( "optimizeArgumentsArray", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory removeUselessParameters ;^1062^1063^^^^1062^1077^[REPLACE] private final PassFactory removeUselessParameters = new PassFactory ( "optimizeParameters", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory removeAbstractMethods ;^1080^1081^^^^1080^1086^[REPLACE] private final PassFactory removeAbstractMethods = new PassFactory ( "removeAbstractMethods", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory collapseProperties = new PassFactory ( "collapseProperties", true )  {^1089^1090^^^^1089^1097^[REPLACE] private final PassFactory collapseProperties = new PassFactory ( "collapseProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory tightenTypesBuilder = new PassFactory ( "tightenTypes", true )  {^1103^1104^^^^1103^1113^[REPLACE] private final PassFactory tightenTypesBuilder = new PassFactory ( "tightenTypes", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory disambiguateProperties ;^1116^1117^^^^1116^1127^[REPLACE] private final PassFactory disambiguateProperties = new PassFactory ( "disambiguateProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory chainCalls ;^1132^1133^^^^1132^1138^[REPLACE] private final PassFactory chainCalls = new PassFactory ( "chainCalls", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory devirtualizePrototypeMethods ;^1144^1145^^^^1144^1150^[REPLACE] private final PassFactory devirtualizePrototypeMethods = new PassFactory ( "devirtualizePrototypeMethods", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory markPureFunctions = new PassFactory ( "markPureFunctions", true )  {^1156^1157^^^^1156^1163^[REPLACE] private final PassFactory markPureFunctions = new PassFactory ( "markPureFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory markNoSideEffectCalls  = null ;^1169^1170^^^^1169^1175^[REPLACE] private final PassFactory markNoSideEffectCalls = new PassFactory ( "markNoSideEffectCalls", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory inlineVariables  = null ;^1178^1179^^^^1178^1200^[REPLACE] private final PassFactory inlineVariables = new PassFactory ( "inlineVariables", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal (  AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1203^1204^^^^1203^1210^[REPLACE] private final PassFactory inlineConstants = new PassFactory ( "inlineConstants", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory removeConstantExpressions  = null ;^1215^1216^^^^1215^1221^[REPLACE] private final PassFactory removeConstantExpressions = new PassFactory ( "removeConstantExpressions", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory minimizeExitPoints ;^1226^1227^^^^1226^1232^[REPLACE] private final PassFactory minimizeExitPoints = new PassFactory ( "minimizeExitPoints", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory removeUnreachableCode ;^1237^1238^^^^1237^1243^[REPLACE] private final PassFactory removeUnreachableCode = new PassFactory ( "removeUnreachableCode", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory removeUnusedPrototypeProperties  = null ;^1248^1249^^^^1248^1256^[REPLACE] private final PassFactory removeUnusedPrototypeProperties = new PassFactory ( "removeUnusedPrototypeProperties", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory smartNamePass  = null ;^1262^1263^^^^1262^1288^[REPLACE] private final PassFactory smartNamePass = new PassFactory ( "smartNamePass", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory inlineGetters  = null ;^1291^1292^^^^1291^1297^[REPLACE] private PassFactory inlineGetters = new PassFactory ( "inlineGetters", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory deadAssignmentsElimination  = null ;^1300^1301^^^^1300^1306^[REPLACE] private PassFactory deadAssignmentsElimination = new PassFactory ( "deadAssignmentsElimination", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory inlineFunctions ;^1309^1310^^^^1309^1323^[REPLACE] private PassFactory inlineFunctions = new PassFactory ( "inlineFunctions", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory removeUnusedVars  = null ;^1326^1327^^^^1326^1337^[REPLACE] private PassFactory removeUnusedVars = new PassFactory ( "removeUnusedVars", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory crossModuleCodeMotion  = null ;^1342^1343^^^^1342^1348^[REPLACE] private PassFactory crossModuleCodeMotion = new PassFactory ( "crossModuleCodeMotion", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory crossModuleMethodMotion  = null ;^1353^1354^^^^1353^1363^[REPLACE] private PassFactory crossModuleMethodMotion = new PassFactory ( "crossModuleMethodMotion", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory flowSensitiveInlineVariables  = null ;^1366^1367^^^^1366^1372^[REPLACE] private final PassFactory flowSensitiveInlineVariables = new PassFactory ( "flowSensitiveInlineVariables", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory coalesceVariableNames  = null ;^1375^1376^^^^1375^1381^[REPLACE] private final PassFactory coalesceVariableNames = new PassFactory ( "coalesceVariableNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1387^1388^^^^1387^1394^[REPLACE] private final PassFactory collapseVariableDeclarations = new PassFactory ( "collapseVariableDeclarations", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory extractPrototypeMemberDeclarations  = null ;^1399^1400^^^^1399^1405^[REPLACE] private final PassFactory extractPrototypeMemberDeclarations = new PassFactory ( "extractPrototypeMemberDeclarations", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory rewriteFunctionExpressions  = null ;^1408^1409^^^^1408^1414^[REPLACE] private final PassFactory rewriteFunctionExpressions = new PassFactory ( "rewriteFunctionExpressions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory collapseAnonymousFunctions  = null ;^1417^1418^^^^1417^1423^[REPLACE] private final PassFactory collapseAnonymousFunctions = new PassFactory ( "collapseAnonymousFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory moveFunctionDeclarations ;^1426^1427^^^^1426^1432^[REPLACE] private final PassFactory moveFunctionDeclarations = new PassFactory ( "moveFunctionDeclarations", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory nameUnmappedAnonymousFunctions  = null ;^1434^1435^^^^1434^1440^[REPLACE] private final PassFactory nameUnmappedAnonymousFunctions = new PassFactory ( "nameAnonymousFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory nameMappedAnonymousFunctions ;^1442^1443^^^^1442^1455^[REPLACE] private final PassFactory nameMappedAnonymousFunctions = new PassFactory ( "nameAnonymousFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory aliasExternals = new PassFactory ( "aliasExternals", true )  {^1458^1459^^^^1458^1465^[REPLACE] private final PassFactory aliasExternals = new PassFactory ( "aliasExternals", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory aliasStrings  = null ;^1471^1472^^^^1471^1482^[REPLACE] private final PassFactory aliasStrings = new PassFactory ( "aliasStrings", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1485^1486^^^^1485^1491^[REPLACE] private final PassFactory aliasKeywords = new PassFactory ( "aliasKeywords", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory objectPropertyStringPostprocess = new PassFactory ( "ObjectPropertyStringPostprocess", true )  {^1494^1495^^^^1494^1500^[REPLACE] private final PassFactory objectPropertyStringPostprocess = new PassFactory ( "ObjectPropertyStringPostprocess", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory ambiguateProperties ;^1506^1507^^^^1506^1513^[REPLACE] private final PassFactory ambiguateProperties = new PassFactory ( "ambiguateProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory normalize = new PassFactory ( "normalize", true )  {^1516^1517^^^^1516^1523^[REPLACE] private final PassFactory normalize = new PassFactory ( "normalize", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory denormalize = new PassFactory ( "denormalize", true )  {^1526^1527^^^^1526^1533^[REPLACE] private final PassFactory denormalize = new PassFactory ( "denormalize", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory invertContextualRenaming = new PassFactory ( "invertNames", true )  {^1536^1537^^^^1536^1542^[REPLACE] private final PassFactory invertContextualRenaming = new PassFactory ( "invertNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory renameProperties  = null ;^1547^1548^^^^1547^1569^[REPLACE] private final PassFactory renameProperties = new PassFactory ( "renameProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory renameVars  = null ;^1603^1604^^^^1603^1625^[REPLACE] private final PassFactory renameVars = new PassFactory ( "renameVars", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory renameLabels ;^1648^1649^^^^1648^1654^[REPLACE] private final PassFactory renameLabels = new PassFactory ( "renameLabels", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory convertToDottedProperties  = null ;^1657^1658^^^^1657^1663^[REPLACE] private final PassFactory convertToDottedProperties = new PassFactory ( "convertToDottedProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory sanityCheckVars ;^1666^1667^^^^1666^1672^[REPLACE] private final PassFactory sanityCheckVars = new PassFactory ( "sanityCheckVars", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory instrumentFunctions ;^1675^1676^^^^1675^1697^[REPLACE] private final PassFactory instrumentFunctions = new PassFactory ( "instrumentFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  AbstractCompiler compiler;^1770^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  JSError error;^1771^^^^^^^[REPLACE] private final JSError error;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^Callback> sharedCallbacks = newArrayList (  )  ;^149^^^^^148^291^[REPLACE] List<PassFactory> checks = Lists.newArrayList (  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.collapseAnonymousFunctions  )   {  ;^151^^^^^148^291^[REPLACE] if  ( options.nameAnonymousFunctionsOnly )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.anonymousFunctionNaming  ||  AnonymousFunctionNamingPolicy.MAPPED )  {^152^153^^^^148^291^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^152^153^154^155^^148^291^[ADD] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  { checks.add ( nameMappedAnonymousFunctions ) ; } else if  ( options.anonymousFunctionNaming ==^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.anonymousFunctionNaming  !=  AnonymousFunctionNamingPolicy.UNMAPPED )  {^155^156^^^^148^291^[REPLACE] } else if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^157^^^^^155^158^[REPLACE] checks.add ( nameUnmappedAnonymousFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( collapseAnonymousFunctions )  ;^154^^^^^152^158^[REPLACE] checks.add ( nameMappedAnonymousFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  else {^155^156^^^^148^291^[REPLACE] } else if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( collapseAnonymousFunctions )  ;^157^^^^^155^158^[REPLACE] checks.add ( nameUnmappedAnonymousFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( collapseAnonymousFunctions )  ;^157^^^^^155^158^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return null;^159^^^^^148^291^[REPLACE] return checks;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.anonymousFunctionNaming  !=  AnonymousFunctionNamingPolicy.MAPPED )  {^152^153^^^^148^291^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  if  ( options.anonymousFunctionNaming  || false )  {^155^156^^^^148^291^[REPLACE] } else if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  (  ( options.inlineFunctions )  ||  ( options.inlineLocalFunctions )  )  {     passes.add ( inlineFunctions ) ; }^155^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( false )  ;^154^^^^^152^158^[REPLACE] checks.add ( nameMappedAnonymousFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( collapseAnonymousFunctions )  ;^154^^^^^152^158^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  if  ( options.anonymousFunctionNaming  !=  AnonymousFunctionNamingPolicy.UNMAPPED )  {^155^156^^^^148^291^[REPLACE] } else if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return checks;  ;^159^^^^^148^291^[REPLACE] return checks;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^162^^^^^148^291^[REPLACE] if  ( options.checkSuspiciousCode )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^162^163^164^^^148^291^[ADD] if  ( options.checkSuspiciousCode )  { checks.add ( suspiciousCode ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^163^^^^^148^291^[REPLACE] checks.add ( suspiciousCode ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^163^^^^^148^291^[ADD] checks.add ( suspiciousCode ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^166^^^^^148^291^[REPLACE] if  ( options.checkControlStructures )   {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( checkControlStructures ) ;^166^167^168^^^148^291^[ADD] if  ( options.checkControlStructures )   { checks.add ( checkControlStructures ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkControlFlow )  ;^167^^^^^148^291^[REPLACE] checks.add ( checkControlStructures ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^167^^^^^148^291^[ADD] checks.add ( checkControlStructures ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^170^^^^^148^291^[REPLACE] if  ( options.checkRequires.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^170^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( this )  ;^171^^^^^148^291^[REPLACE] checks.add ( checkRequires ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^174^^^^^148^291^[REPLACE] if  ( options.checkProvides.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( checkProvides ) ;^174^175^176^^^148^291^[ADD] if  ( options.checkProvides.isOn (  )  )  { checks.add ( checkProvides ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( true )  ;^175^^^^^148^291^[REPLACE] checks.add ( checkProvides ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.reserveRawExports  )   {  ;^181^^^^^148^291^[REPLACE] if  ( options.generateExports )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^182^^^^^148^291^[REPLACE] checks.add ( generateExports ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^182^^^^^148^291^[ADD] checks.add ( generateExports ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^185^^^^^148^291^[REPLACE] if  ( options.exportTestFunctions )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^185^186^187^^^148^291^[ADD] if  ( options.exportTestFunctions )  { checks.add ( exportTestFunctions ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkFunctions )  ;^186^^^^^148^291^[REPLACE] checks.add ( exportTestFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^189^^^^^148^291^[REPLACE] if  ( options.closurePass )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( closurePrimitives .isOneTimePass (  )   ) ;^190^^^^^148^291^[REPLACE] checks.add ( closurePrimitives.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  options.checkMissingGetCssNameLevel.isOn (  )  )  {^193^^^^^148^291^[REPLACE] if  ( options.closurePass && options.checkMissingGetCssNameLevel.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^194^^^^^148^291^[REPLACE] checks.add ( closureCheckGetCssName ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^197^^^^^148^291^[REPLACE] if  ( options.closurePass )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^197^198^199^^^148^291^[ADD] if  ( options.closurePass )  { checks.add ( closureReplaceGetCssName ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( closureCheckGetCssName )  ;^198^^^^^148^291^[REPLACE] checks.add ( closureReplaceGetCssName ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.syntheticBlockStartMarker == this )  {^201^^^^^148^291^[REPLACE] if  ( options.syntheticBlockStartMarker != null )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^203^^^^^148^291^[REPLACE] checks.add ( createSyntheticBlocks ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^WarningsGuard warningsGuard = options.setWarningLevel (  ) ;^211^^^^^148^291^[REPLACE] WarningsGuard warningsGuard = options.getWarningsGuard (  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( !options.checkSymbols && ( warningsGuard != null || !warningsGuard.disables ( DiagnosticGroups.CHECK_VARIABLES )  )  )  {^212^213^214^^^148^291^[REPLACE] if  ( !options.checkSymbols && ( warningsGuard == null || !warningsGuard.disables ( DiagnosticGroups.CHECK_VARIABLES )  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^212^213^214^215^216^148^291^[ADD] if  ( !options.checkSymbols && ( warningsGuard == null || !warningsGuard.disables ( DiagnosticGroups.CHECK_VARIABLES )  )  )  { options.setWarningLevel ( DiagnosticGroups.CHECK_VARIABLES, CheckLevel.OFF ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options .getWarningsGuard (  )  ;^215^216^^^^212^217^[REPLACE] options.setWarningLevel ( DiagnosticGroups.CHECK_VARIABLES, CheckLevel.OFF ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkStrictMode )  ;^219^^^^^148^291^[REPLACE] checks.add ( checkVars ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^221^^^^^148^291^[REPLACE] if  ( options.checkShadowVars.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkStrictMode )  ;^222^^^^^148^291^[REPLACE] checks.add ( checkShadowVars ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^222^^^^^148^291^[ADD] checks.add ( checkShadowVars ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^225^^^^^148^291^[REPLACE] if  ( options.aggressiveVarCheck.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^225^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( false )  ;^226^^^^^148^291^[REPLACE] checks.add ( checkVariableReferences ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^na.removeUnreferenced (  )  ;^226^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^230^^^^^148^291^[REPLACE] if  ( options.processObjectPropertyString )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( objectPropertyStringPreprocess ) ;^230^231^232^^^148^291^[ADD] if  ( options.processObjectPropertyString )  { checks.add ( objectPropertyStringPreprocess ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( objectPropertyStringPostprocess )  ;^231^^^^^148^291^[REPLACE] checks.add ( objectPropertyStringPreprocess ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^231^^^^^148^291^[ADD] checks.add ( objectPropertyStringPreprocess ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options .disables (  )   )  {^235^^^^^148^291^[REPLACE] if  ( options.enables ( DiagnosticGroups.CHECK_TYPES )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^options.checkTypes = true;options.checkTypes = false;^235^236^237^238^239^148^291^[ADD] if  ( options.enables ( DiagnosticGroups.CHECK_TYPES )  )  { options.checkTypes = true; } else if  ( options.disables ( DiagnosticGroups.CHECK_TYPES )  )  { options.checkTypes = false; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.enables  (  DiagnosticGroups.CHECK_TYPES  )    )   {  ;^237^^^^^148^291^[REPLACE] } else if  ( options.disables ( DiagnosticGroups.CHECK_TYPES )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = true  ;^238^^^^^148^291^[REPLACE] options.checkTypes = false;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = true;^238^^^^^148^291^[REPLACE] options.checkTypes = false;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = false  ;^236^^^^^148^291^[REPLACE] options.checkTypes = true;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  else {^237^^^^^148^291^[REPLACE] } else if  ( options.disables ( DiagnosticGroups.CHECK_TYPES )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^}^237^238^239^^^148^291^[ADD] else if  ( options.disables ( DiagnosticGroups.CHECK_TYPES )  )  { options.checkTypes = false; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = false;^236^^^^^148^291^[REPLACE] options.checkTypes = true;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  !options.checkTypes  )   {  ;^243^^^^^148^291^[REPLACE] if  ( options.checkTypes )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^248^^^^^243^255^[REPLACE] if  ( options.checkFunctions.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( checkFunctions ) ;^248^249^250^^^243^255^[ADD] if  ( options.checkFunctions.isOn (  )  )  { checks.add ( checkFunctions ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^252^^^^^243^255^[REPLACE] if  ( options.checkMethods.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^resolveTypes.makeOneTimePass (  )  ;^244^^^^^148^291^[REPLACE] checks.add ( resolveTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( resolveTypes.isOneTimePass (  )  ) ;^244^^^^^148^291^[REPLACE] checks.add ( resolveTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checkTypes.makeOneTimePass (  )  ;^245^^^^^148^291^[REPLACE] checks.add ( inferTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^resolveTypes.makeOneTimePass (  )  ;^245^^^^^148^291^[REPLACE] checks.add ( inferTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkTypes.isOneTimePass (  )  ) ;^246^^^^^148^291^[REPLACE] checks.add ( checkTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^248^^^^^148^291^[REPLACE] if  ( options.checkFunctions.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkControlFlow )  ;^249^^^^^148^291^[REPLACE] checks.add ( checkFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^252^^^^^148^291^[REPLACE] if  ( options.checkMethods.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkControlFlow )  ;^253^^^^^148^291^[REPLACE] checks.add ( checkMethods ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( collapseAnonymousFunctions )  ;^253^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkUnreachableCode.isOn (  )  && ( options.checkTypes && options.checkMissingReturn.isOn (  )  )  )  {^257^258^^^^148^291^[REPLACE] if  ( options.checkUnreachableCode.isOn (  )  || ( options.checkTypes && options.checkMissingReturn.isOn (  )  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkStrictMode )  ;^259^^^^^257^260^[REPLACE] checks.add ( checkControlFlow ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options .disables (  )  || options.checkTypes )  {^263^264^^^^148^291^[REPLACE] if  ( options.enables ( DiagnosticGroups.ACCESS_CONTROLS ) && options.checkTypes )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^263^264^265^266^^148^291^[ADD] if  ( options.enables ( DiagnosticGroups.ACCESS_CONTROLS ) && options.checkTypes )  { checks.add ( checkAccessControls ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkControlFlow )  ;^265^^^^^263^266^[REPLACE] checks.add ( checkAccessControls ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  isOn  (    )    )   {  ;^268^^^^^148^291^[REPLACE] if  ( options.checkGlobalNamesLevel.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^268^269^270^^^148^291^[ADD] if  ( options.checkGlobalNamesLevel.isOn (  )  )  { checks.add ( checkGlobalNames ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkVars )  ;^269^^^^^148^291^[REPLACE] checks.add ( checkGlobalNames ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkUndefinedProperties.isOn (  )  && options.checkUnusedPropertiesEarly )  {^272^273^^^^148^291^[REPLACE] if  ( options.checkUndefinedProperties.isOn (  )  || options.checkUnusedPropertiesEarly )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( this )  ;^274^^^^^272^275^[REPLACE] checks.add ( checkSuspiciousProperties ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^274^^^^^272^275^[ADD] checks.add ( checkSuspiciousProperties ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  options.checkEs5Strict )  {^277^^^^^148^291^[REPLACE] if  ( options.checkCaja || options.checkEs5Strict )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( checkStrictMode ) ;^277^278^279^^^148^291^[ADD] if  ( options.checkCaja || options.checkEs5Strict )  { checks.add ( checkStrictMode ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( 0 )  ;^278^^^^^148^291^[REPLACE] checks.add ( checkStrictMode ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^282^^^^^148^291^[REPLACE] checks.add ( processDefines ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.instrumentationTemplate == null || options.recordFunctionInformation )  {^284^285^^^^148^291^[REPLACE] if  ( options.instrumentationTemplate != null || options.recordFunctionInformation )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  (  ( options.inlineFunctions )  ||  ( options.inlineLocalFunctions )  )  {     passes.add ( inlineFunctions ) ; }^284^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkFunctions )  ;^286^^^^^284^287^[REPLACE] checks.add ( computeFunctionNames ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^286^^^^^284^287^[ADD] checks.add ( computeFunctionNames ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllOneTimePasses ( false ) ;^289^^^^^148^291^[REPLACE] assertAllOneTimePasses ( checks ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return 0;^290^^^^^148^291^[REPLACE] return checks;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<PassFactory> passes = Lists .newArrayList (  )  ;^295^^^^^294^533^[REPLACE] List<PassFactory> passes = Lists.newArrayList (  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.idGenerators.isEmpty (  )  )  {^300^^^^^294^533^[REPLACE] if  ( !options.idGenerators.isEmpty (  )  )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^301^^^^^294^533^[REPLACE] passes.add ( replaceIdGenerators ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.optimizeParameters  )   {  ;^305^^^^^294^533^[REPLACE] if  ( options.optimizeArgumentsArray )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^305^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^306^^^^^294^533^[REPLACE] passes.add ( optimizeArgumentsArray ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^306^^^^^294^533^[ADD] passes.add ( optimizeArgumentsArray ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.optimizeArgumentsArray  )   {  ;^310^^^^^294^533^[REPLACE] if  ( options.optimizeParameters )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeUnusedVars )  ;^311^^^^^294^533^[REPLACE] passes.add ( removeUselessParameters ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  options.removeAbstractMethods )  {^316^^^^^294^533^[REPLACE] if  ( options.closurePass && options.removeAbstractMethods )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeUselessParameters )  ;^317^^^^^294^533^[REPLACE] passes.add ( removeAbstractMethods ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^317^^^^^294^533^[ADD] passes.add ( removeAbstractMethods ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.ignoreCajaProperties  )   {  ;^322^^^^^294^533^[REPLACE] if  ( options.collapseProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^323^^^^^294^533^[REPLACE] passes.add ( collapseProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  !options.checkTypes  )   {  ;^327^^^^^294^533^[REPLACE] if  ( options.tightenTypes )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^328^^^^^294^533^[REPLACE] passes.add ( tightenTypesBuilder ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.ignoreCajaProperties  )   {  ;^335^^^^^294^533^[REPLACE] if  ( options.disambiguateProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( collapseProperties )  ;^336^^^^^294^533^[REPLACE] passes.add ( disambiguateProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^339^^^^^294^533^[REPLACE] if  ( options.computeFunctionSideEffects )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( markPureFunctions ) ;^339^340^341^^^294^533^[ADD] if  ( options.computeFunctionSideEffects )  { passes.add ( markPureFunctions ) ; } else if  ( options.markNoSideEffectCalls )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  else {^341^^^^^294^533^[REPLACE] } else if  ( options.markNoSideEffectCalls )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^351^^^^^294^533^[REPLACE] passes.add ( markNoSideEffectCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( instrumentFunctions )  ;^340^^^^^294^533^[REPLACE] passes.add ( markPureFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^340^^^^^294^533^[ADD] passes.add ( markPureFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^351^^^^^294^533^[REPLACE] passes.add ( markNoSideEffectCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^351^^^^^294^533^[ADD] passes.add ( markNoSideEffectCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.checkTypes  )   {  ;^354^^^^^294^533^[REPLACE] if  ( options.chainCalls )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^354^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( renameLabels )  ;^355^^^^^294^533^[REPLACE] passes.add ( chainCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^355^^^^^294^533^[ADD] passes.add ( chainCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^362^^^^^294^533^[REPLACE] if  ( options.devirtualizePrototypeMethods )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^362^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^363^^^^^294^533^[REPLACE] passes.add ( devirtualizePrototypeMethods ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^363^^^^^294^533^[ADD] passes.add ( devirtualizePrototypeMethods ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.inlineGetters  )   {  ;^368^^^^^294^533^[REPLACE] if  ( options.inlineConstantVars )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( chainCalls )  ;^369^^^^^294^533^[REPLACE] passes.add ( checkConsts ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.collapseProperties  )   {  ;^375^^^^^294^533^[REPLACE] if  ( options.ignoreCajaProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( disambiguateProperties )  ;^376^^^^^294^533^[REPLACE] passes.add ( ignoreCajaProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllOneTimePasses ( checks )  ;^379^^^^^294^533^[REPLACE] assertAllOneTimePasses ( passes ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.smartNameRemoval ) {^381^^^^^294^533^[REPLACE] if  ( options.smartNameRemoval || options.reportPath != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( getCodeRemovingPasses (  )  ) ;^382^^^^^294^533^[REPLACE] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^382^^^^^294^533^[ADD] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^382^^^^^294^533^[REPLACE] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( renameVars )  ;^383^^^^^294^533^[REPLACE] passes.add ( smartNamePass ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.customPasses == null )  {^386^^^^^294^533^[REPLACE] if  ( options.customPasses != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.addAll ( getCustomPasses ( CustomPassExecutionTime.BEFORE_OPTIMIZATION_LOOP )  ) ;^387^388^^^^294^533^[REPLACE] passes.add ( getCustomPasses ( CustomPassExecutionTime.BEFORE_OPTIMIZATION_LOOP )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^createEmptyPass ( "afterModuleMotion" )  ;^391^^^^^294^533^[REPLACE] passes.add ( createEmptyPass ( "beforeMainOptimizations" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^391^392^393^^395^294^533^[ADD] passes.add ( createEmptyPass ( "beforeMainOptimizations" )  ) ;  passes.addAll ( getMainOptimizationLoop (  )  ) ; passes.add ( createEmptyPass ( "beforeModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( getMainOptimizationLoop (  )  ) ;^393^^^^^294^533^[REPLACE] passes.addAll ( getMainOptimizationLoop (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^393^^^^^294^533^[REPLACE] passes.addAll ( getMainOptimizationLoop (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^createEmptyPass ( "afterModuleMotion" )  ;^395^^^^^294^533^[REPLACE] passes.add ( createEmptyPass ( "beforeModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.crossModuleMethodMotion  )   {  ;^397^^^^^294^533^[REPLACE] if  ( options.crossModuleCodeMotion )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^397^398^399^^^294^533^[ADD] if  ( options.crossModuleCodeMotion )  { passes.add ( crossModuleCodeMotion ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( 0 )  ;^398^^^^^294^533^[REPLACE] passes.add ( crossModuleCodeMotion ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.crossModuleCodeMotion  )   {  ;^401^^^^^294^533^[REPLACE] if  ( options.crossModuleMethodMotion )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( crossModuleMethodMotion ) ;^401^402^403^^^294^533^[ADD] if  ( options.crossModuleMethodMotion )  { passes.add ( crossModuleMethodMotion ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( crossModuleCodeMotion )  ;^402^^^^^294^533^[REPLACE] passes.add ( crossModuleMethodMotion ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^402^^^^^294^533^[ADD] passes.add ( crossModuleMethodMotion ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^createEmptyPass ( "afterModuleMotion" )  ;^405^^^^^294^533^[REPLACE] passes.add ( createEmptyPass ( "afterModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( createEmptyPass ( "beforeMainOptimizations" )  )  ;^405^^^^^294^533^[REPLACE] passes.add ( createEmptyPass ( "afterModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( false == null )  {^409^^^^^294^533^[REPLACE] if  ( options.customPasses != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.addAll ( getCustomPasses ( CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP )  ) ;^410^411^^^^294^533^[REPLACE] passes.add ( getCustomPasses ( CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^410^411^^^^294^533^[ADD] passes.add ( getCustomPasses ( CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^414^^^^^294^533^[REPLACE] if  ( options.flowSensitiveInlineVariables )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( flowSensitiveInlineVariables ) ;^414^415^416^^^294^533^[ADD] if  ( options.flowSensitiveInlineVariables )  { passes.add ( flowSensitiveInlineVariables ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^415^^^^^294^533^[REPLACE] passes.add ( flowSensitiveInlineVariables ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.nameAnonymousFunctionsOnly  )   {  ;^418^^^^^294^533^[REPLACE] if  ( options.collapseAnonymousFunctions )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^418^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( nameUnmappedAnonymousFunctions )  ;^419^^^^^294^533^[REPLACE] passes.add ( collapseAnonymousFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^423^^^^^294^533^[REPLACE] if  ( options.moveFunctionDeclarations )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( rewriteFunctionExpressions )  ;^424^^^^^294^533^[REPLACE] passes.add ( moveFunctionDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^na.removeUnreferenced (  )  ;^424^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.anonymousFunctionNaming  &&  AnonymousFunctionNamingPolicy.MAPPED )  {^427^428^^^^294^533^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( false )  ;^429^^^^^427^430^[REPLACE] passes.add ( nameMappedAnonymousFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^429^^^^^427^430^[ADD] passes.add ( nameMappedAnonymousFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.extractPrototypeMemberDeclarations ) {^438^439^440^441^^294^533^[REPLACE] if  ( options.extractPrototypeMemberDeclarations && ( options.propertyRenaming != PropertyRenamingPolicy.HEURISTIC && options.propertyRenaming != PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC )  )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^442^^^^^438^443^[REPLACE] passes.add ( extractPrototypeMemberDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^445^^^^^294^533^[REPLACE] if  ( options.coalesceVariableNames )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( inlineVariables )  ;^446^^^^^294^533^[REPLACE] passes.add ( coalesceVariableNames ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( collapseAnonymousFunctions )  ;^446^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  ( options.propertyRenaming == PropertyRenamingPolicy.ALL_UNQUOTED )  )  {^449^450^^^^294^533^[REPLACE] if  ( options.ambiguateProperties && ( options.propertyRenaming == PropertyRenamingPolicy.ALL_UNQUOTED )  )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^449^450^451^452^^294^533^[ADD] if  ( options.ambiguateProperties && ( options.propertyRenaming == PropertyRenamingPolicy.ALL_UNQUOTED )  )  { passes.add ( ambiguateProperties ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( disambiguateProperties )  ;^451^^^^^449^452^[REPLACE] passes.add ( ambiguateProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (1  ==  PropertyRenamingPolicy.OFF )  {^454^^^^^294^533^[REPLACE] if  ( options.propertyRenaming != PropertyRenamingPolicy.OFF )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( disambiguateProperties )  ;^455^^^^^294^533^[REPLACE] passes.add ( renameProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.generateExports  )   {  ;^459^^^^^294^533^[REPLACE] if  ( options.reserveRawExports )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^459^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^460^^^^^294^533^[REPLACE] passes.add ( gatherRawExports ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^465^^^^^294^533^[REPLACE] if  ( options.convertToDottedProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( convertToDottedProperties ) ;^465^466^467^^^294^533^[ADD] if  ( options.convertToDottedProperties )  { passes.add ( convertToDottedProperties ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( collapseProperties )  ;^466^^^^^294^533^[REPLACE] passes.add ( convertToDottedProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.removeConstantExpressions  )   {  ;^473^^^^^294^533^[REPLACE] if  ( options.rewriteFunctionExpressions )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^473^474^475^^^294^533^[ADD] if  ( options.rewriteFunctionExpressions )  { passes.add ( rewriteFunctionExpressions ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( moveFunctionDeclarations )  ;^474^^^^^294^533^[REPLACE] passes.add ( rewriteFunctionExpressions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^474^^^^^294^533^[ADD] passes.add ( rewriteFunctionExpressions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.aliasableStrings.isEmpty (  )  || options.aliasAllStrings )  {^479^^^^^294^533^[REPLACE] if  ( !options.aliasableStrings.isEmpty (  )  || options.aliasAllStrings )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( aliasKeywords )  ;^480^^^^^294^533^[REPLACE] passes.add ( aliasStrings ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^480^^^^^294^533^[ADD] passes.add ( aliasStrings ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.aliasKeywords  )   {  ;^483^^^^^294^533^[REPLACE] if  ( options.aliasExternals )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( aliasStrings )  ;^484^^^^^294^533^[REPLACE] passes.add ( aliasExternals ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.aliasExternals  )   {  ;^487^^^^^294^533^[REPLACE] if  ( options.aliasKeywords )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( aliasStrings )  ;^488^^^^^294^533^[REPLACE] passes.add ( aliasKeywords ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^491^^^^^294^533^[REPLACE] if  ( options.collapseVariableDeclarations )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^492^^^^^294^533^[REPLACE] passes.add ( collapseVariableDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( renameVars )  ;^495^^^^^294^533^[REPLACE] passes.add ( denormalize ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( true == null )  {^497^^^^^294^533^[REPLACE] if  ( options.instrumentationTemplate != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( markPureFunctions )  ;^498^^^^^294^533^[REPLACE] passes.add ( instrumentFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.variableRenaming  == null )  {^501^^^^^294^533^[REPLACE] if  ( options.variableRenaming != VariableRenamingPolicy.ALL )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^505^^^^^294^533^[REPLACE] passes.add ( invertContextualRenaming ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.propertyRenaming != PropertyRenamingPolicy.OFF  )   {  ;^509^^^^^294^533^[REPLACE] if  ( options.variableRenaming != VariableRenamingPolicy.OFF )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^509^510^511^^^294^533^[ADD] if  ( options.variableRenaming != VariableRenamingPolicy.OFF )  { passes.add ( renameVars ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( sanityCheckVars )  ;^510^^^^^294^533^[REPLACE] passes.add ( renameVars ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^514^^^^^294^533^[REPLACE] if  ( options.processObjectPropertyString )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( objectPropertyStringPostprocess ) ;^514^515^516^^^294^533^[ADD] if  ( options.processObjectPropertyString )  { passes.add ( objectPropertyStringPostprocess ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( objectPropertyStringPreprocess )  ;^515^^^^^294^533^[REPLACE] passes.add ( objectPropertyStringPostprocess ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^515^^^^^294^533^[ADD] passes.add ( objectPropertyStringPostprocess ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^518^^^^^294^533^[REPLACE] if  ( options.labelRenaming )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( renameLabels ) ;^518^519^520^^^294^533^[ADD] if  ( options.labelRenaming )  { passes.add ( renameLabels ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( renameVars )  ;^519^^^^^294^533^[REPLACE] passes.add ( renameLabels ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.anonymousFunctionNaming  ) {^522^523^^^^294^533^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( collapseAnonymousFunctions )  ;^524^^^^^522^525^[REPLACE] passes.add ( nameUnmappedAnonymousFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  !options.checkTypes  )   {  ;^528^^^^^294^533^[REPLACE] if  ( options.checkSymbols )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( false )  ;^529^^^^^294^533^[REPLACE] passes.add ( sanityCheckVars ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^529^^^^^294^533^[ADD] passes.add ( sanityCheckVars ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return true;^532^^^^^294^533^[REPLACE] return passes;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Callback> sharedCallbacks = newArrayList (  )  ;^537^^^^^536^556^[REPLACE] List<PassFactory> passes = Lists.newArrayList (  ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.inlineVariables  )   {  ;^538^^^^^536^556^[REPLACE] if  ( options.inlineGetters )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( true )  ;^539^^^^^536^556^[REPLACE] passes.add ( inlineGetters ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( getCodeRemovingPasses (  )  ) ;^542^^^^^536^556^[REPLACE] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^542^^^^^536^556^[ADD] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^542^^^^^536^556^[REPLACE] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineFunctions ) {^544^^^^^536^556^[REPLACE] if  ( options.inlineFunctions || options.inlineLocalFunctions )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( instrumentFunctions )  ;^545^^^^^536^556^[REPLACE] passes.add ( inlineFunctions ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^548^^^^^536^556^[REPLACE] if  ( options.removeUnusedVars )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^549^^^^^536^556^[REPLACE] if  ( options.deadAssignmentElimination )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^549^^^^^536^556^[REMOVE] ^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( true )  ;^550^^^^^536^556^[REPLACE] passes.add ( deadAssignmentsElimination ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( deadAssignmentsElimination ) ;^549^550^551^^^536^556^[ADD] if  ( options.deadAssignmentElimination )  { passes.add ( deadAssignmentsElimination ) ; }^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^550^^^^^536^556^[REPLACE] passes.add ( deadAssignmentsElimination ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^550^^^^^536^556^[ADD] passes.add ( deadAssignmentsElimination ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllLoopablePasses ( this ) ;^554^^^^^536^556^[REPLACE] assertAllLoopablePasses ( passes ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return true;^555^^^^^536^556^[REPLACE] return passes;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Callback> sharedCallbacks = newArrayList (  )  ;^560^^^^^559^587^[REPLACE] List<PassFactory> passes = Lists.newArrayList (  ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineVariables && options.inlineLocalVariables )  {^561^^^^^559^587^[REPLACE] if  ( options.inlineVariables || options.inlineLocalVariables )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  if  ( options.inlineConstantVars )  {^563^^^^^559^587^[REPLACE] } else if  ( options.inlineConstantVars )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( checkConsts )  ;^564^^^^^559^587^[REPLACE] passes.add ( inlineConstants ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^564^^^^^559^587^[ADD] passes.add ( inlineConstants ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( flowSensitiveInlineVariables )  ;^562^^^^^559^587^[REPLACE] passes.add ( inlineVariables ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.inlineLocalVariables  )   {  ;^563^^^^^559^587^[REPLACE] } else if  ( options.inlineConstantVars )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^}   passes.add ( inlineConstants ) ;^563^564^565^^^559^587^[ADD] else if  ( options.inlineConstantVars )  { passes.add ( inlineConstants ) ; }^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.rewriteFunctionExpressions  )   {  ;^567^^^^^559^587^[REPLACE] if  ( options.removeConstantExpressions )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( rewriteFunctionExpressions )  ;^568^^^^^559^587^[REPLACE] passes.add ( removeConstantExpressions ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^568^^^^^559^587^[ADD] passes.add ( removeConstantExpressions ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.inlineConstantVars  )   {  ;^571^^^^^559^587^[REPLACE] if  ( options.foldConstants )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.removeUnreferenced (  )  ;^573^^^^^559^587^[REPLACE] passes.add ( minimizeExitPoints ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^runInSerial (  )  ;^574^^^^^559^587^[REPLACE] passes.add ( foldConstants ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^577^^^^^559^587^[REPLACE] if  ( options.removeDeadCode )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^577^^^^^559^587^[REMOVE] ^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( 1 )  ;^578^^^^^559^587^[REPLACE] passes.add ( removeUnreachableCode ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^581^^^^^559^587^[REPLACE] if  ( options.removeUnusedPrototypeProperties )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^581^^^^^559^587^[REMOVE] ^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( convertToDottedProperties )  ;^582^^^^^559^587^[REPLACE] passes.add ( removeUnusedPrototypeProperties ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllOneTimePasses ( passes )  ;^585^^^^^559^587^[REPLACE] assertAllLoopablePasses ( passes ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return null;^586^^^^^559^587^[REPLACE] return passes;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^namespaceForChecks = false;^1010^^^^^997^1013^[REPLACE] namespaceForChecks = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion  (  compiler, compiler.getModuleGraph  (    )    )  ;  ;^998^^^^^997^1013^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^final VariableMap prevVariableMap = map  ;^1001^^^^^997^1013^[REPLACE] Map<String, Node> replacements = getAdditionalReplacements ( options ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^1182^^^^^1181^1199^[REPLACE] if  ( isInliningForbidden (  )  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.inlineGetters  )   {  ;^1189^^^^^1182^1198^[REPLACE] if  ( options.inlineVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.inlineConstantVars  )   {  ;^1191^^^^^1182^1198^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1194^^^^^1191^1195^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^mode = ALL  ;^1192^^^^^1182^1198^[REPLACE] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1194^^^^^1182^1198^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^mode = LOCALS_ONLY  ;^1190^^^^^1182^1198^[REPLACE] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  if  ( options.inlineLocalVariables )  {^1191^^^^^1182^1198^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^}   mode = InlineVariables.Mode.LOCALS_ONLY;^1191^1192^1193^1194^1195^1182^1198^[ADD] else if  ( options.inlineLocalVariables )  { mode = InlineVariables.Mode.LOCALS_ONLY; } else { throw new IllegalStateException  (" ")  ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1192^^^^^1182^1198^[ADD] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new InlineVariables ( compiler, mode, false ) ;^1197^^^^^1182^1198^[REPLACE] return new InlineVariables ( compiler, mode, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^VariableMap map = null  ;^1188^^^^^1182^1198^[REPLACE] InlineVariables.Mode mode;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^throw new IllegalStateException ( "Unrecognized property renaming policy" )  ;^1194^^^^^1182^1198^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, TIGHTEN_TYPES_WITHOUT_TYPE_CHECK )  ;^1186^^^^^1181^1199^[REPLACE] return new ErrorPass ( compiler, CANNOT_USE_PROTOTYPE_AND_VAR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.inlineGetters  )   {  ;^1189^^^^^1181^1199^[REPLACE] if  ( options.inlineVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^mode = InlineVariables.Mode.ALL;mode = InlineVariables.Mode.LOCALS_ONLY;^1189^1190^1191^1192^^1181^1199^[ADD] if  ( options.inlineVariables )  { mode = InlineVariables.Mode.ALL; } else if  ( options.inlineLocalVariables )  { mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.inlineConstantVars  )   {  ;^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1192^^^^^1181^1199^[ADD] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^mode = ALL  ;^1192^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1194^^^^^1181^1199^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^mode = LOCALS_ONLY  ;^1190^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^throw new IllegalStateException ( "Unrecognized property renaming policy" )  ;^1194^^^^^1191^1195^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1190^^^^^1181^1199^[ADD] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new InlineVariables ( compiler, null, false ) ;^1197^^^^^1181^1199^[REPLACE] return new InlineVariables ( compiler, mode, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^VariableMap map = null  ;^1188^^^^^1181^1199^[REPLACE] InlineVariables.Mode mode;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1194^^^^^1181^1199^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (blacklist == null )  {^1273^^^^^1265^1287^[REPLACE] if  ( reportPath != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1265^1287^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na.getHtmlReport (  ) , new File ( blacklist ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^1282^^^^^1265^1287^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1265^1287^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REMOVE]^graphBuilder.getNameReferenceGraph (  )  ;^1283^^^^^1265^1287^[REMOVE] ^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion  (  compiler, compiler.getModuleGraph  (    )    )  ;  ;^1266^^^^^1265^1287^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1265^1287^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^final VariableMap prevVariableMap = map  ;^1272^^^^^1265^1287^[REPLACE] String reportPath = options.reportPath;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1269^1270^^^^1268^1285^[ADD] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ; na.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^rn.process ( externs, root )  ;^1270^^^^^1268^1285^[REPLACE] na.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^final VariableMap prevVariableMap = map  ;^1272^^^^^1268^1285^[REPLACE] String reportPath = options.reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( blacklist == this )  {^1273^^^^^1268^1285^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1268^1285^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na.getHtmlReport (  ) , new File ( blacklist ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1275^1276^^^^1268^1285^[ADD] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^1282^^^^^1268^1285^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1268^1285^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^VariableMap map = false;^1551^^^^^1550^1568^[REPLACE] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if   (  options.inputVariableMapSerialized != null  )   {  ;^1552^^^^^1550^1568^[REPLACE] if  ( options.inputPropertyMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^1553^1554^1555^1556^1557^1550^1568^[ADD] try { map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1554^^^^^1550^1568^[ADD] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^map = fromBytes ( options.inputVariableMapSerialized )  ;^1554^^^^^1550^1568^[REPLACE] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  )   )  ) ;^1556^1557^^^^1550^1568^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^final VariableMap prevPropertyMap = variableMap;^1561^^^^^1550^1568^[REPLACE] final VariableMap prevPropertyMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^propertyMap =  runPropertyRenaming ( null, prevPropertyMap, externs, root ) ;^1564^1565^^^^1550^1568^[REPLACE] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         for  ( CompilerPass pass : passes )  {             pass.process ( externs, root ) ;         }     } }   {^1562^^^^^1550^1568^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return rproto2.getPropertyMap (  ) ;^1581^^^^^1573^1600^[REPLACE] return rproto.getPropertyMap (  ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return rproto.getPropertyMap  (    )  ;  ;^1587^^^^^1573^1600^[REPLACE] return rproto2.getPropertyMap (  ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return rproto.getPropertyMap  (    )  ;  ;^1594^^^^^1573^1600^[REPLACE] return rprop.getPropertyMap (  ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenamePrototypes rproto = new RenamePrototypes ( compiler, true, reservedChars, prevPropertyMap ) ;^1578^1579^^^^1573^1600^[REPLACE] RenamePrototypes rproto = new RenamePrototypes ( compiler, false, reservedChars, prevPropertyMap ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenamePrototypes rproto2 = new RenamePrototypes ( compiler, false, reservedChars, prevPropertyMap ) ;^1584^1585^^^^1573^1600^[REPLACE] RenamePrototypes rproto2 = new RenamePrototypes ( compiler, true, reservedChars, prevPropertyMap ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenameProperties rprop = new RenameProperties ( compiler, options.generatePseudoNames, propertyMap, reservedChars ) ;^1590^1591^1592^^^1573^1600^[REPLACE] RenameProperties rprop = new RenameProperties ( compiler, options.generatePseudoNames, prevPropertyMap, reservedChars ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1597^1598^^^^1573^1600^[REPLACE] throw new IllegalStateException ( "Unrecognized property renaming policy" ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^VariableMap map = true;^1607^^^^^1606^1624^[REPLACE] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inputVariableMapSerialized == this  )  {^1608^^^^^1606^1624^[REPLACE] if  ( options.inputVariableMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1608^1609^1610^1611^1612^1606^1624^[ADD] if  ( options.inputVariableMapSerialized != null )  { try { map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^1609^1610^1611^1612^1613^1606^1624^[ADD] try { map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1610^^^^^1606^1624^[ADD] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^map = fromBytes ( options.inputPropertyMapSerialized )  ;^1610^^^^^1606^1624^[REPLACE] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  )   )  ) ;^1612^1613^^^^1606^1624^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1611^1612^1613^^^1606^1624^[ADD] catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1617^^^^^1606^1624^[ADD] final VariableMap prevVariableMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^variableMap =  runVariableRenaming ( null, prevVariableMap, externs, root ) ;^1620^1621^^^^1606^1624^[REPLACE] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         for  ( CompilerPass pass : passes )  {             pass.process ( externs, root ) ;         }     } }   {^1618^^^^^1606^1624^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming  ==  AnonymousFunctionNamingPolicy.OFF;^1632^1633^^^^1629^1645^[REPLACE] boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming != AnonymousFunctionNamingPolicy.OFF;^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1634^1635^1636^^^1629^1645^[ADD] RenameVars rn = new RenameVars ( compiler, options.renamePrefix,^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^c.process ( externs, root )  ;^1643^^^^^1629^1645^[REPLACE] rn.process ( externs, root ) ;^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return rn .process ( root , root )  ;^1644^^^^^1629^1645^[REPLACE] return rn.getVariableMap (  ) ;^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^new FileReader ( options.instrumentationTemplate ) ;^1681^1682^1683^1684^1685^1678^1696^[ADD] try { FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ; ( new InstrumentFunctions ( compiler, functionNames,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion  (  compiler, compiler.getModuleGraph  (    )    )  ;  ;^1679^^^^^1678^1696^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1682^1683^^^^1678^1696^[ADD] FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^DefinitionProvider definitionProvider = false;^1803^^^^^1802^1828^[REPLACE] DefinitionProvider definitionProvider = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if   (  options.markNoSideEffectCalls  )   {  ;^1804^^^^^1802^1828^[REPLACE] if  ( useNameReferenceGraph )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^definitionProvider =  null;^1812^^^^^1804^1813^[REPLACE] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^final VariableMap prevVariableMap = map  ;^1810^^^^^1804^1813^[REPLACE] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^definitionProvider =  null.getNameReferenceGraph (  ) ;^1808^^^^^1802^1828^[REPLACE] definitionProvider = graphBuilder.getNameReferenceGraph (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1812^^^^^1802^1828^[ADD] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^defFinder.process ( externs, root ) ;^1810^1811^^^^1802^1828^[ADD] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ; defFinder.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^pureFunctionIdentifier .getExportedVariableNames (  )  ;^1817^^^^^1802^1828^[REPLACE] pureFunctionIdentifier.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1817^1818^1819^1820^1821^1802^1828^[ADD] pureFunctionIdentifier.process ( externs, root ) ;  if  ( reportPath != null )  { try { Files.write ( pureFunctionIdentifier.getDebugReport (  ) ,^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( reportPath == null )  {^1819^^^^^1802^1828^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^Charsets.UTF_8 ) ;^1820^1821^1822^1823^1824^1802^1828^[ADD] try { Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1821^1822^1823^1824^1825^1802^1828^[ADD] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( root , externs )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1825^^^^^1802^1828^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( root , root )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^private  AbstractCompiler compiler;^932^^^^^^^[REPLACE] private final AbstractCompiler compiler;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^namespaceForChecks = this;^1010^^^^^997^1013^[REPLACE] namespaceForChecks = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 27 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^return new CompilerPass  (    )   { @Override  ;^998^^^^^997^1013^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 27 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^} else if   (  options.inlineLocalVariables  )   {  ;^1182^^^^^1181^1199^[REPLACE] if  ( isInliningForbidden (  )  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^} else if   (  options.inlineLocalVariables  )   {  ;^1189^^^^^1182^1198^[REPLACE] if  ( options.inlineVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^}  if  ( options.inlineLocalVariables )  {^1191^^^^^1182^1198^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1194^^^^^1191^1195^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^mode = ALL  ;^1192^^^^^1182^1198^[REPLACE] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return ;^1194^^^^^1182^1198^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^mode = LOCALS_ONLY  ;^1190^^^^^1182^1198^[REPLACE] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^}  else {^1191^^^^^1182^1198^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1192^^^^^1182^1198^[ADD] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1190^^^^^1182^1198^[ADD] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return new InlineVariables ( compiler, mode, false ) ;^1197^^^^^1182^1198^[REPLACE] return new InlineVariables ( compiler, mode, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1188^^^^^1182^1198^[ADD] InlineVariables.Mode mode;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return new InlineVariables  (  compiler, mode, true  )  ;  ;^1186^^^^^1181^1199^[REPLACE] return new ErrorPass ( compiler, CANNOT_USE_PROTOTYPE_AND_VAR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^} else if   (  options.inlineLocalVariables  )   {  ;^1189^^^^^1181^1199^[REPLACE] if  ( options.inlineVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^}  if  ( options.inlineLocalVariables )  {^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return ;^1194^^^^^1191^1195^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1192^^^^^1181^1199^[ADD] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^mode = ALL  ;^1192^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1194^^^^^1181^1199^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^mode = LOCALS_ONLY  ;^1190^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^}  else {^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^}   mode = InlineVariables.Mode.LOCALS_ONLY;^1191^1192^1193^1194^1195^1181^1199^[ADD] else if  ( options.inlineLocalVariables )  { mode = InlineVariables.Mode.LOCALS_ONLY; } else { throw new IllegalStateException  (" ")  ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return new InlineVariables ( compiler, mode, false ) ;^1197^^^^^1181^1199^[REPLACE] return new InlineVariables ( compiler, mode, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return ;^1194^^^^^1181^1199^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^if  ( reportPath == null )  {^1273^^^^^1265^1287^[REPLACE] if  ( reportPath != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1273^1274^1275^1276^^1265^1287^[ADD] if  ( reportPath != null )  { try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1265^1287^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if   (  reportPath != null  )   {  ;^1282^^^^^1265^1287^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1265^1287^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1275^1276^^^^1265^1287^[ADD] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^return new CompilerPass  (    )   { @Override  ;^1266^^^^^1265^1287^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1265^1287^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1272^^^^^1265^1287^[ADD] String reportPath = options.reportPath;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1268^1285^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na .removeUnreferenced (  )  ;^1270^^^^^1268^1285^[REPLACE] na.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, false )  ;^1272^^^^^1268^1285^[REPLACE] String reportPath = options.reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath == null )  {^1273^^^^^1268^1285^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1268^1285^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1277^1278^^^^1268^1285^[ADD] catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1275^1276^^^^1268^1285^[ADD] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if   (  reportPath != null  )   {  ;^1282^^^^^1268^1285^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na .getHtmlReport (  )  ;^1283^^^^^1268^1285^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( null, true ) ;^1269^^^^^1268^1285^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na .removeUnreferenced (  )  ;^1270^^^^^1268^1285^[REPLACE] na.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1272^^^^^1268^1285^[ADD] String reportPath = options.reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath == false )  {^1273^^^^^1268^1285^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1268^1285^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1275^1276^^^^1268^1285^[ADD] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1277^1278^^^^1268^1285^[ADD] catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if   (  reportPath != null  )   {  ;^1282^^^^^1268^1285^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1268^1285^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REMOVE]^na.getHtmlReport (  )  ;^1283^^^^^1268^1285^[REMOVE] ^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1551^^^^^1550^1568^[ADD] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^if  ( options.inputPropertyMapSerialized == null )  {^1552^^^^^1550^1568^[REPLACE] if  ( options.inputPropertyMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^1553^1554^1555^1556^1557^1550^1568^[ADD] try { map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map  =  map ;^1554^^^^^1550^1568^[REPLACE] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new ErrorPass  (  compiler, JSError.make  (  INPUT_MAP_PROP_PARSE, e.getMessage  (    )    )    )  ;  ;^1556^1557^^^^1550^1568^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map ;^1554^^^^^1550^1568^[REPLACE] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^final VariableMap prevPropertyMap = prevPropertyMap;^1561^^^^^1550^1568^[REPLACE] final VariableMap prevPropertyMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^propertyMap =  runPropertyRenaming ( null, prevPropertyMap, externs, root ) ;^1564^1565^^^^1550^1568^[REPLACE] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new ErrorPass  (  compiler, JSError.make  (  INPUT_MAP_PROP_PARSE, e.getMessage  (    )    )    )  ;  ;^1562^^^^^1550^1568^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^^1607^^^^^1606^1624^[ADD] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^if  ( options.inputVariableMapSerialized == null )  {^1608^^^^^1606^1624^[REPLACE] if  ( options.inputVariableMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^1609^1610^1611^1612^1613^1606^1624^[ADD] try { map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^^1610^^^^^1606^1624^[ADD] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map  =  map ;^1610^^^^^1606^1624^[REPLACE] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new ErrorPass  (  compiler, JSError.make  (  INPUT_MAP_VAR_PARSE, e.getMessage  (    )    )    )  ;  ;^1612^1613^^^^1606^1624^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map  = null ;^1610^^^^^1606^1624^[REPLACE] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^^1611^1612^1613^^^1606^1624^[ADD] catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^final VariableMap prevVariableMap = prevVariableMap;^1617^^^^^1606^1624^[REPLACE] final VariableMap prevVariableMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^^1620^1621^^^^1606^1624^[ADD] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new ErrorPass  (  compiler, JSError.make  (  INPUT_MAP_VAR_PARSE, e.getMessage  (    )    )    )  ;  ;^1618^^^^^1606^1624^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^new FileReader ( options.instrumentationTemplate ) ;^1681^1682^1683^1684^1685^1678^1696^[ADD] try { FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ; ( new InstrumentFunctions ( compiler, functionNames,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 77 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[REPLACE]^return new CompilerPass  (    )   { @Override public void process  (  Node externs, Node root  )   {  ;^1679^^^^^1678^1696^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 77 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[ADD]^^1682^1683^^^^1678^1696^[ADD] FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 77 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[ADD]^^1689^1690^1691^^^1678^1696^[ADD] catch  ( IOException e )  { compiler.report ( JSError.make ( AbstractCompiler.READ_ERROR,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 77 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[REPLACE]^private  JSError error;^1771^^^^^^^[REPLACE] private final JSError error;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] ErrorPass   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  CompilerPass pass 
[REPLACE]^private final  int  reportPath;^1791^^^^^^^[REPLACE] private final String reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  Node externs  root 
[REPLACE]^private  boolean useNameReferenceGraph;^1792^^^^^^^[REPLACE] private final boolean useNameReferenceGraph;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  Node externs  root 
[ADD]^^1803^^^^^1802^1828^[ADD] DefinitionProvider definitionProvider = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^if   (  reportPath != null  )   {  ;^1804^^^^^1802^1828^[REPLACE] if  ( useNameReferenceGraph )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1804^1805^1806^1807^1808^1802^1828^[ADD] if  ( useNameReferenceGraph )  { NameReferenceGraphConstruction graphBuilder = new NameReferenceGraphConstruction ( compiler ) ; graphBuilder.process ( externs, root ) ; definitionProvider = graphBuilder.getNameReferenceGraph (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^definitionProvider =  null;^1812^^^^^1804^1813^[REPLACE] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^DefinitionProvider definitionProvider = null  ;^1810^^^^^1804^1813^[REPLACE] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1808^^^^^1802^1828^[ADD] definitionProvider = graphBuilder.getNameReferenceGraph (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1805^1806^^^^1802^1828^[ADD] NameReferenceGraphConstruction graphBuilder = new NameReferenceGraphConstruction ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^definitionProvider =  null;^1812^^^^^1802^1828^[REPLACE] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^DefinitionProvider definitionProvider = null  ;^1810^^^^^1802^1828^[REPLACE] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^pureFunctionIdentifier .getNameReferenceGraph (  )  ;^1817^^^^^1802^1828^[REPLACE] pureFunctionIdentifier.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1817^1818^1819^1820^1821^1802^1828^[ADD] pureFunctionIdentifier.process ( externs, root ) ;  if  ( reportPath != null )  { try { Files.write ( pureFunctionIdentifier.getDebugReport (  ) ,^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath == true )  {^1819^^^^^1802^1828^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;^1820^1821^1822^1823^1824^1802^1828^[ADD] try { Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( root , root )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( root , externs )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^return ;^1825^^^^^1802^1828^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1824^1825^^^^1802^1828^[ADD] catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( externs , root )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1821^1822^1823^1824^1825^1802^1828^[ADD] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1825^^^^^1802^1828^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
