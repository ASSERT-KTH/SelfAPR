[REPLACE]^referenceMap  = null ;^69^^^^^^^[REPLACE] referenceMap = HashMultimap.create (  ) ;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^private Map<String, Name> nameMap ;^72^^^^^^^[REPLACE] private Map<String, Name> nameMap = Maps.newHashMap (  ) ;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^private List<Definition> declarations  = null ;^184^^^^^^^[REPLACE] private List<Definition> declarations = Lists.newLinkedList (  ) ;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^private boolean isExported ;^188^^^^^^^[REPLACE] private boolean isExported = false;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^private boolean isAliased ;^190^^^^^^^[REPLACE] private boolean isAliased = false;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^private boolean exposedToCallOrApply ;^200^^^^^^^[REPLACE] private boolean exposedToCallOrApply = false;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^public  Node site;^365^^^^^^^[REPLACE] public final Node site;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^private JSModule module ;^370^^^^^^^[REPLACE] private JSModule module = null;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^private boolean isUnknown  = null ;^375^^^^^^^[REPLACE] private boolean isUnknown = false;^ [CLASS] NameReferenceGraph Name Reference  
[REPLACE]^this.compiler =  null;^89^^^^^88^103^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^89^^^^^88^103^[ADD] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^WINDOW = new Name ( "window", true ) ; ;^92^^^^^88^103^[REPLACE] UNKNOWN = new Name ( "{UNKNOWN}", true ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^UNKNOWN.isAliased = false;^93^^^^^88^103^[REPLACE] UNKNOWN.isAliased = true;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^93^^^^^88^103^[ADD] UNKNOWN.isAliased = true;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^UNKNOWN.type =  null.getTypeRegistry (  ) .getNativeType ( JSTypeNative.NO_TYPE ) ;^94^95^^^^88^103^[REPLACE] UNKNOWN.type = compiler.getTypeRegistry (  ) .getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^94^95^^^^88^103^[ADD] UNKNOWN.type = compiler.getTypeRegistry (  ) .getNativeType ( JSTypeNative.NO_TYPE ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.NameReferenceGraph ( UNKNOWN ) ;^96^^^^^88^103^[REPLACE] this.createNode ( UNKNOWN ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^MAIN =  new Name ( name, isExtern )  ;^98^^^^^88^103^[REPLACE] MAIN = new Name ( "{Global Main}", true ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.NameReferenceGraph ( MAIN ) ;^99^^^^^88^103^[REPLACE] this.createNode ( MAIN ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^99^^^^^88^103^[ADD] this.createNode ( MAIN ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^UNKNOWN = new Name ( "{UNKNOWN}", true ) ; ;^101^^^^^88^103^[REPLACE] WINDOW = new Name ( "window", true ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.NameReferenceGraph ( WINDOW ) ;^102^^^^^88^103^[REPLACE] this.createNode ( WINDOW ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^102^^^^^88^103^[ADD] this.createNode ( WINDOW ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.qName =  name;^203^^^^^202^210^[REPLACE] this.qName = qName;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^203^204^^^^202^210^[ADD] this.qName = qName; this.isExtern = isExtern;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.isExtern =  true;^204^^^^^202^210^[REPLACE] this.isExtern = isExtern;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^int lastDot = qName .hashCode (  )  ;^205^^^^^202^210^[REPLACE] int lastDot = qName.lastIndexOf ( '.' ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^String name  =  name .lastIndexOf ( lastDot )  ;^206^^^^^202^210^[REPLACE] String name =  ( lastDot == -1 )  ? qName : qName.substring ( lastDot + 1 ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^206^^^^^202^210^[ADD] String name =  ( lastDot == -1 )  ? qName : qName.substring ( lastDot + 1 ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.isExported =  compiler.getCodingConvention (  ) .isExported ( qName ) ;^207^^^^^202^210^[REPLACE] this.isExported = compiler.getCodingConvention (  ) .isExported ( name ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.type ;^208^209^^^^202^210^[REPLACE] this.type = compiler.getTypeRegistry (  ) .getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.site =  null;^378^^^^^377^380^[REPLACE] this.site = site;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node site Node parent [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^this.parent =  site;^379^^^^^377^380^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node site Node parent [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[ADD]^^379^^^^^377^380^[ADD] this.parent = parent;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node site Node parent [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW 
[REPLACE]^Name symbol = true;^106^^^^^105^116^[REPLACE] Name symbol = null;^[METHOD] defineNameIfNotExists [TYPE] NameReferenceGraph$Name [PARAMETER] String name boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol 
[REPLACE]^if  ( nameMap.get ( name )  )  {^107^^^^^105^116^[REPLACE] if  ( nameMap.containsKey ( name )  )  {^[METHOD] defineNameIfNotExists [TYPE] NameReferenceGraph$Name [PARAMETER] String name boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol 
[REPLACE]^symbol =  new Name ( qName, isExtern ) ;^111^^^^^105^116^[REPLACE] symbol = new Name ( name, isExtern ) ;^[METHOD] defineNameIfNotExists [TYPE] NameReferenceGraph$Name [PARAMETER] String name boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol 
[REPLACE]^symbol =  nullMap.get ( null ) ;^109^^^^^105^116^[REPLACE] symbol = nameMap.get ( name ) ;^[METHOD] defineNameIfNotExists [TYPE] NameReferenceGraph$Name [PARAMETER] String name boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol 
[REPLACE]^symbol =  qNameMap.get ( qName ) ;^109^^^^^105^116^[REPLACE] symbol = nameMap.get ( name ) ;^[METHOD] defineNameIfNotExists [TYPE] NameReferenceGraph$Name [PARAMETER] String name boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol 
[REPLACE]^return WINDOW;^115^^^^^105^116^[REPLACE] return symbol;^[METHOD] defineNameIfNotExists [TYPE] NameReferenceGraph$Name [PARAMETER] String name boolean isExtern [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol 
[REPLACE]^Preconditions.checkArgument ( NodeUtil.isGetProp ( parent )  ;^122^123^^^^121^130^[REPLACE] Preconditions.checkArgument ( NodeUtil.isGetProp ( site )  || NodeUtil.isName ( site )  ) ;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[REPLACE]^NodeUtil.isName ( parent )  || NodeUtil.isName ( site )  ) ;^123^^^^^121^130^[REPLACE] NodeUtil.isGetProp ( site )  || NodeUtil.isName ( site )  ) ;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[REPLACE]^NodeUtil.isGetProp ( parent )  || NodeUtil.isName ( site )  ) ;^123^^^^^121^130^[REPLACE] NodeUtil.isGetProp ( site )  || NodeUtil.isName ( site )  ) ;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[ADD]^List<Name> result = new ArrayList<Name> (  ) ;^123^124^^^^121^130^[ADD] NodeUtil.isGetProp ( site )  || NodeUtil.isName ( site )  ) ; List<Name> result = new ArrayList<Name> (  ) ;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[REPLACE]^List<Definition> result = Lists.newArrayList (  ) ;^124^^^^^121^130^[REPLACE] List<Name> result = new ArrayList<Name> (  ) ;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[ADD]^^124^^^^^121^130^[ADD] List<Name> result = new ArrayList<Name> (  ) ;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[REPLACE]^GraphEdge<Name, Reference> edge = super.connect ( src, ref, dest ) ;^125^^^^^121^130^[REPLACE] for  ( DiGraphEdge<Name, Reference> edge : referenceMap.get ( site )  )  {^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[REPLACE]^Name target = null.getDestination (  ) .getValue (  ) ;^126^^^^^121^130^[REPLACE] Name target = edge.getDestination (  ) .getValue (  ) ;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[REPLACE]^return false;^129^^^^^121^130^[REPLACE] return result;^[METHOD] getReferencesAt [TYPE] List [PARAMETER] Node site [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  DiGraphEdge edge  [TYPE]  Node parent  site  [TYPE]  JSModule module  [TYPE]  List declarations  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  symbol  target 
[REPLACE]^List<Name> nameRefs = getReferencesAt ( site ) ;^134^^^^^133^154^[REPLACE] List<Name> nameRefs = getReferencesAt ( useSite ) ;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^if  ( null.isEmpty (  )  )  {^135^^^^^133^154^[REPLACE] if  ( nameRefs.isEmpty (  )  )  {^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[ADD]^^135^136^137^^^133^154^[ADD] if  ( nameRefs.isEmpty (  )  )  { return null; }^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^return false;^136^^^^^133^154^[REPLACE] return null;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^List<Definition> result = Lists.newLinkedList (  ) ;^139^^^^^133^154^[REPLACE] List<Definition> result = Lists.newArrayList (  ) ;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^if  ( nameRefs.isEmpty (  )  )  {^142^^^^^133^154^[REPLACE] if  ( !decls.isEmpty (  )  )  {^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^result .addAll ( null )  ;^145^^^^^133^154^[REPLACE] result.add ( new UnknownDefinition ( useSite )  ) ;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^result.addAll ( null ) ;^143^^^^^133^154^[REPLACE] result.addAll ( decls ) ;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^List<Name> nameRefs = getReferencesAt ( useSite ) ;^140^^^^^133^154^[REPLACE] for  ( Name nameRef : nameRefs )  {^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^List<Definition> decls = target.getDeclarations (  ) ;^141^^^^^133^154^[REPLACE] List<Definition> decls = nameRef.getDeclarations (  ) ;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^if  ( !result.add (  )  )  {^149^^^^^133^154^[REPLACE] if  ( !result.isEmpty (  )  )  {^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REMOVE]^if  ( nameRefs.isEmpty (  )  )  {     return null; }^149^^^^^133^154^[REMOVE] ^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^return true;^152^^^^^133^154^[REPLACE] return null;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^return null;^150^^^^^133^154^[REPLACE] return result;^[METHOD] getDefinitionsReferencedAt [TYPE] Collection [PARAMETER] Node useSite [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^return nameMap.containsKey ( name ) ;^157^^^^^156^158^[REPLACE] return nameMap.get ( name ) ;^[METHOD] getSymbol [TYPE] NameReferenceGraph$Name [PARAMETER] String name [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target 
[REPLACE]^nameMap.put ( target.qName, value ) ;^162^^^^^161^164^[REPLACE] nameMap.put ( value.qName, value ) ;^[METHOD] createNode [TYPE] GraphNode [PARAMETER] Name value [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target  value 
[REPLACE]^return super.createNode ( target ) ;^163^^^^^161^164^[REPLACE] return super.createNode ( value ) ;^[METHOD] createNode [TYPE] GraphNode [PARAMETER] Name value [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  nameRef  symbol  target  value 
[REPLACE]^GraphEdge<Name, Reference> edge = super.connect ( target, ref, dest ) ;^169^^^^^167^172^[REPLACE] GraphEdge<Name, Reference> edge = super.connect ( src, ref, dest ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] Name src Reference ref Name dest [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Reference ref  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  GraphEdge edge  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^referenceMap .get ( null )  ;^170^^^^^167^172^[REPLACE] referenceMap.put ( ref.site,  ( DiGraphEdge<Name, Reference> )  edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] Name src Reference ref Name dest [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Reference ref  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  GraphEdge edge  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return null;^171^^^^^167^172^[REPLACE] return edge;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] Name src Reference ref Name dest [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Reference ref  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  GraphEdge edge  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return true;^213^^^^^212^214^[REPLACE] return type;^[METHOD] getType [TYPE] JSType [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^this.type =  null;^217^^^^^216^218^[REPLACE] this.type = type;^[METHOD] setType [TYPE] void [PARAMETER] JSType type [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^221^^^^^220^222^[REPLACE] return declarations;^[METHOD] getDeclarations [TYPE] List [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^declarations.add ( new AssignmentDefinition ( useSite )  ) ;^225^^^^^224^226^[REPLACE] declarations.add ( new AssignmentDefinition ( node )  ) ;^[METHOD] addAssignmentDeclaration [TYPE] void [PARAMETER] Node node [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^declarations.add ( new NamedFunctionDefinition ( useSite )  ) ;^229^^^^^228^230^[REPLACE] declarations.add ( new NamedFunctionDefinition ( node )  ) ;^[METHOD] addFunctionDeclaration [TYPE] void [PARAMETER] Node node [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^233^^^^^232^234^[REPLACE] return isExtern;^[METHOD] isExtern [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^this.isExported = false;^237^^^^^236^238^[REPLACE] this.isExported = true;^[METHOD] markExported [TYPE] void [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isAliased;^241^^^^^240^242^[REPLACE] return isExported;^[METHOD] isExported [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^for  ( Definition definition : getDeclarations (  )  )  { if  ( NodeUtil.isVarArgsFunction ( definition.getRValue (  )  )  )  {^246^^^^^245^249^[REPLACE] for  ( Definition declaration : getDeclarations (  )  )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  Definition declaration  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^257^^^^^256^258^[REPLACE] return isAliased;^[METHOD] isAliased [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^this.isAliased =  true;^261^^^^^260^262^[REPLACE] this.isAliased = isAliased;^[METHOD] setAliased [TYPE] void [PARAMETER] boolean isAliased [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[ADD]^^261^^^^^260^262^[ADD] this.isAliased = isAliased;^[METHOD] setAliased [TYPE] void [PARAMETER] boolean isAliased [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^265^^^^^264^266^[REPLACE] return isCallable (  ) ;^[METHOD] hasSideEffect [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^269^^^^^268^270^[REPLACE] return qName;^[METHOD] getQualifiedName [TYPE] String [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^int.substringDot = qName.lastIndexOf ( '.' ) ;^277^^^^^276^283^[REPLACE] int lastIndexOfDot = qName.lastIndexOf ( '.' ) ;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastIndexOfDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^if  ( lastIndexOfDot  !=  -1 )  {^278^^^^^276^283^[REPLACE] if  ( lastIndexOfDot == -1 )  {^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastIndexOfDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return qName.hashCode ( lastIndexOfDot + 1 ) ;^281^^^^^276^283^[REPLACE] return qName.substring ( lastIndexOfDot + 1 ) ;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastIndexOfDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return true;^279^^^^^276^283^[REPLACE] return null;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastIndexOfDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return false;^279^^^^^276^283^[REPLACE] return null;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  int lastIndexOfDot  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^286^^^^^285^287^[REPLACE] return type.canBeCalled (  ) ;^[METHOD] isCallable [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^290^^^^^289^291^[REPLACE] return exposedToCallOrApply;^[METHOD] exposedToCallOrApply [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^exposedToCallOrApply = false;^294^^^^^293^295^[REPLACE] exposedToCallOrApply = true;^[METHOD] markExposedToCallOrApply [TYPE] void [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^299^^^^^298^300^[REPLACE] return qName + " : " + type;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^304^^^^^303^305^[REPLACE] return qName.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return ! ( isExtern (  )  ;^335^336^337^338^^322^341^[REPLACE] return ! ( isExtern (  )  || !isCallable (  )  || isAliased (  )  || isExported (  )  ||^[METHOD] canChangeSignature [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^if  ( NodeUtil.isVarArgsFunction ( definition.remove (  )  )  )  {^351^^^^^349^356^[REPLACE] if  ( NodeUtil.isVarArgsFunction ( definition.getRValue (  )  )  )  {^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  Definition definition  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return false;^352^^^^^349^356^[REPLACE] return true;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  Definition definition  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^for  ( Definition definition : getDeclarations (  )  )  { if  ( NodeUtil.isVarArgsFunction ( definition.getRValue (  )  )  )  {^350^^^^^349^356^[REPLACE] for  ( Definition definition : getDeclarations (  )  )  {^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  Definition definition  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return true;^355^^^^^349^356^[REPLACE] return false;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  Definition definition  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^383^^^^^382^384^[REPLACE] return isUnknown;^[METHOD] isUnknown [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^this.isUnknown =  true;^387^^^^^386^388^[REPLACE] this.isUnknown = isUnknown;^[METHOD] setUnknown [TYPE] void [PARAMETER] boolean isUnknown [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^391^^^^^390^392^[REPLACE] return module;^[METHOD] getModule [TYPE] JSModule [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^this.module =  null;^395^^^^^394^396^[REPLACE] this.module = module;^[METHOD] setModule [TYPE] void [PARAMETER] JSModule module [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return NodeUtil.isName ( site ) ;^399^^^^^398^400^[REPLACE] return NodeUtil.isCall ( site ) ;^[METHOD] isCall [TYPE] boolean [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^return isExported;^409^^^^^408^410^[REPLACE] return site;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] NameReferenceGraph Name Reference   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^private final  byte  qName;^179^^^^^^^[REPLACE] private final String qName;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] Name   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^private List<Definition> declarations  = null ;^184^^^^^^^[REPLACE] private List<Definition> declarations = Lists.newLinkedList (  ) ;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] Name   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^boolean isExtern;^186^^^^^^^[REPLACE] final boolean isExtern;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] Name   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^private boolean isExported  = null ;^188^^^^^^^[REPLACE] private boolean isExported = false;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] Name   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^private boolean isAliased  = null ;^190^^^^^^^[REPLACE] private boolean isAliased = false;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] Name   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^private boolean exposedToCallOrApply  = null ;^200^^^^^^^[REPLACE] private boolean exposedToCallOrApply = false;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] Name   [TYPE]  Multimap referenceMap  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  isUnknown  true  [TYPE]  Node node  parent  site  useSite  [TYPE]  JSModule module  [TYPE]  List declarations  decls  nameRefs  result  [TYPE]  String name  qName  [TYPE]  Map nameMap  [TYPE]  Name MAIN  UNKNOWN  WINDOW  dest  nameRef  src  symbol  target  value 
[REPLACE]^this.qName =  name;^203^^^^^202^210^[REPLACE] this.qName = qName;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastDot 
[ADD]^this.isExtern = isExtern;^203^204^^^^202^210^[ADD] this.qName = qName; this.isExtern = isExtern;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastDot 
[REPLACE]^this.isExtern =  true;^204^^^^^202^210^[REPLACE] this.isExtern = isExtern;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastDot 
[REPLACE]^int lastDot = qName .hashCode (  )  ;^205^^^^^202^210^[REPLACE] int lastDot = qName.lastIndexOf ( '.' ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastDot 
[REPLACE]^String name =  ( lastDot  &&  -1 )  ? qName : qName.substring ( lastDot + 1 ) ;^206^^^^^202^210^[REPLACE] String name =  ( lastDot == -1 )  ? qName : qName.substring ( lastDot + 1 ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastDot 
[REPLACE]^this.isExported =  compiler.getCodingConvention (  ) .isExported ( qName ) ;^207^^^^^202^210^[REPLACE] this.isExported = compiler.getCodingConvention (  ) .isExported ( name ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastDot 
[REPLACE]^this.type ;^208^209^^^^202^210^[REPLACE] this.type = compiler.getTypeRegistry (  ) .getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String qName boolean isExtern [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastDot 
[REPLACE]^return true;^213^^^^^212^214^[REPLACE] return type;^[METHOD] getType [TYPE] JSType [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^this.type =  null;^217^^^^^216^218^[REPLACE] this.type = type;^[METHOD] setType [TYPE] void [PARAMETER] JSType type [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName;^221^^^^^220^222^[REPLACE] return declarations;^[METHOD] getDeclarations [TYPE] List [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^declaration.remove (  ) ;^225^^^^^224^226^[REPLACE] declarations.add ( new AssignmentDefinition ( node )  ) ;^[METHOD] addAssignmentDeclaration [TYPE] void [PARAMETER] Node node [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  Node node 
[ADD]^^225^^^^^224^226^[ADD] declarations.add ( new AssignmentDefinition ( node )  ) ;^[METHOD] addAssignmentDeclaration [TYPE] void [PARAMETER] Node node [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  Node node 
[REPLACE]^declaration.remove (  ) ;^229^^^^^228^230^[REPLACE] declarations.add ( new NamedFunctionDefinition ( node )  ) ;^[METHOD] addFunctionDeclaration [TYPE] void [PARAMETER] Node node [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  Node node 
[REPLACE]^return qName;^233^^^^^232^234^[REPLACE] return isExtern;^[METHOD] isExtern [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^this.isExported = false;^237^^^^^236^238^[REPLACE] this.isExported = true;^[METHOD] markExported [TYPE] void [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[ADD]^^237^^^^^236^238^[ADD] this.isExported = true;^[METHOD] markExported [TYPE] void [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName;^241^^^^^240^242^[REPLACE] return isExported;^[METHOD] isExported [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^for  ( Definition declaration : getDeclarations (  )  )  { declaration.remove (  ) ;^246^^^^^245^249^[REPLACE] for  ( Definition declaration : getDeclarations (  )  )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] Name   [TYPE]  Definition declaration  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName;^257^^^^^256^258^[REPLACE] return isAliased;^[METHOD] isAliased [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^this.isAliased =  true;^261^^^^^260^262^[REPLACE] this.isAliased = isAliased;^[METHOD] setAliased [TYPE] void [PARAMETER] boolean isAliased [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[ADD]^^261^^^^^260^262^[ADD] this.isAliased = isAliased;^[METHOD] setAliased [TYPE] void [PARAMETER] boolean isAliased [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName;^265^^^^^264^266^[REPLACE] return isCallable (  ) ;^[METHOD] hasSideEffect [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName + " : " + type;^269^^^^^268^270^[REPLACE] return qName;^[METHOD] getQualifiedName [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^int.substringDot = qName.lastIndexOf ( '.' ) ;^277^^^^^276^283^[REPLACE] int lastIndexOfDot = qName.lastIndexOf ( '.' ) ;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastIndexOfDot 
[REPLACE]^if  ( lastIndexOfDot  ||  -1 )  {^278^^^^^276^283^[REPLACE] if  ( lastIndexOfDot == -1 )  {^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastIndexOfDot 
[REPLACE]^return qName.hashCode ( lastIndexOfDot + 1 - 3 ) ;^281^^^^^276^283^[REPLACE] return qName.substring ( lastIndexOfDot + 1 ) ;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastIndexOfDot 
[REPLACE]^return false;^279^^^^^276^283^[REPLACE] return null;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastIndexOfDot 
[REPLACE]^return true;^279^^^^^276^283^[REPLACE] return null;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastIndexOfDot 
[REPLACE]^return qName.hashCode ( lastIndexOfDot + 1 ) ;^281^^^^^276^283^[REPLACE] return qName.substring ( lastIndexOfDot + 1 ) ;^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName  [TYPE]  int lastIndexOfDot 
[REPLACE]^return qName;^286^^^^^285^287^[REPLACE] return type.canBeCalled (  ) ;^[METHOD] isCallable [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName;^290^^^^^289^291^[REPLACE] return exposedToCallOrApply;^[METHOD] exposedToCallOrApply [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^exposedToCallOrApply = false;^294^^^^^293^295^[REPLACE] exposedToCallOrApply = true;^[METHOD] markExposedToCallOrApply [TYPE] void [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[ADD]^^294^^^^^293^295^[ADD] exposedToCallOrApply = true;^[METHOD] markExposedToCallOrApply [TYPE] void [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName + " : " +qName;^299^^^^^298^300^[REPLACE] return qName + " : " + type;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return qName;^304^^^^^303^305^[REPLACE] return qName.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return  ( isExtern (  )  ;^335^336^337^338^^322^341^[REPLACE] return ! ( isExtern (  )  || !isCallable (  )  || isAliased (  )  || isExported (  )  ||^[METHOD] canChangeSignature [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^if  (   definition.getRValue (  )   )  {^351^^^^^349^356^[REPLACE] if  ( NodeUtil.isVarArgsFunction ( definition.getRValue (  )  )  )  {^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return false;^352^^^^^349^356^[REPLACE] return true;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^for  ( Definition declaration : getDeclarations (  )  )  { declaration.remove (  ) ;^350^^^^^349^356^[REPLACE] for  ( Definition definition : getDeclarations (  )  )  {^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[ADD]^^350^351^352^353^^349^356^[ADD] for  ( Definition definition : getDeclarations (  )  )  { if  ( NodeUtil.isVarArgsFunction ( definition.getRValue (  )  )  )  { return true; }^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^return true;^355^^^^^349^356^[REPLACE] return false;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Name   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^private final Node site;^365^^^^^^^[REPLACE] public final Node site;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^private final Node parent;^368^^^^^^^[REPLACE] public final Node parent;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^private JSModule module  = null ;^370^^^^^^^[REPLACE] private JSModule module = null;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^private boolean isUnknown ;^375^^^^^^^[REPLACE] private boolean isUnknown = false;^[METHOD] nameUsesArgumentsProperty [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  Definition definition  [TYPE]  List declarations  [TYPE]  JSType type  [TYPE]  boolean exposedToCallOrApply  false  isAliased  isExported  isExtern  true  [TYPE]  String name  qName 
[REPLACE]^this.site =  parent;^378^^^^^377^380^[REPLACE] this.site = site;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node site Node parent [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[ADD]^^378^^^^^377^380^[ADD] this.site = site;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node site Node parent [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[REPLACE]^this.parent =  site;^379^^^^^377^380^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node site Node parent [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[REPLACE]^return NodeUtil.isCall ( site ) ;^383^^^^^382^384^[REPLACE] return isUnknown;^[METHOD] isUnknown [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[REPLACE]^this.isUnknown =  null;^387^^^^^386^388^[REPLACE] this.isUnknown = isUnknown;^[METHOD] setUnknown [TYPE] void [PARAMETER] boolean isUnknown [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[REPLACE]^return NodeUtil.isCall ( site ) ;^391^^^^^390^392^[REPLACE] return module;^[METHOD] getModule [TYPE] JSModule [PARAMETER] [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[REPLACE]^this.module =  null;^395^^^^^394^396^[REPLACE] this.module = module;^[METHOD] setModule [TYPE] void [PARAMETER] JSModule module [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[ADD]^^395^^^^^394^396^[ADD] this.module = module;^[METHOD] setModule [TYPE] void [PARAMETER] JSModule module [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[REPLACE]^return NodeUtil .isCall (  )  ;^399^^^^^398^400^[REPLACE] return NodeUtil.isCall ( site ) ;^[METHOD] isCall [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
[REPLACE]^return NodeUtil.isCall ( site ) ;^409^^^^^408^410^[REPLACE] return site;^[METHOD] getSite [TYPE] Node [PARAMETER] [CLASS] Reference   [TYPE]  JSModule module  [TYPE]  boolean false  isUnknown  true  [TYPE]  Node parent  site 
