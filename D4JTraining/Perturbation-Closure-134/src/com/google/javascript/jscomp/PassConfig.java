[REPLACE]^CompilerOptions options;^34^^^^^^^[REPLACE] final CompilerOptions options;^ [CLASS] PassConfig PassConfigDelegate State  
[REPLACE]^Scope topScope  = null ;^44^^^^^^^[REPLACE] Scope topScope = null;^ [CLASS] PassConfig PassConfigDelegate State  
[REPLACE]^private static final  short  serialVersionUID = 1L;^187^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PassConfig PassConfigDelegate State  
[REPLACE]^Map<String, Integer> cssNames;^189^^^^^^^[REPLACE] final Map<String, Integer> cssNames;^ [CLASS] PassConfig PassConfigDelegate State  
[REPLACE]^Set<String> exportedNames;^190^^^^^^^[REPLACE] final Set<String> exportedNames;^ [CLASS] PassConfig PassConfigDelegate State  
[REPLACE]^CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator;^191^^^^^^^[REPLACE] final CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator;^ [CLASS] PassConfig PassConfigDelegate State  
[REPLACE]^VariableMap anonymousFunctionNameMap;^194^^^^^^^[REPLACE] final VariableMap anonymousFunctionNameMap;^ [CLASS] PassConfig PassConfigDelegate State  
[REPLACE]^this.options =  null;^47^^^^^46^48^[REPLACE] this.options = options;^[METHOD] <init> [TYPE] CompilerOptions) [PARAMETER] CompilerOptions options [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate.getOptimizations (  ) ;^154^^^^^153^156^[REPLACE] super ( delegate.options ) ;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[ADD]^this.delegate = delegate;^154^155^^^^153^156^[ADD] super ( delegate.options ) ; this.delegate = delegate;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.delegate =  null;^155^^^^^153^156^[REPLACE] this.delegate = delegate;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[ADD]^^155^^^^^153^156^[ADD] this.delegate = delegate;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.cssNames =  null;^201^^^^^197^208^[REPLACE] this.cssNames = cssNames;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.exportedNames =  null;^202^^^^^197^208^[REPLACE] this.exportedNames = exportedNames;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.crossModuleIdGenerator =  null;^203^^^^^197^208^[REPLACE] this.crossModuleIdGenerator = crossModuleIdGenerator;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.variableMap =  propertyMap;^204^^^^^197^208^[REPLACE] this.variableMap = variableMap;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.propertyMap =  variableMap;^205^^^^^197^208^[REPLACE] this.propertyMap = propertyMap;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[ADD]^^205^^^^^197^208^[ADD] this.propertyMap = propertyMap;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.anonymousFunctionNameMap =  variableMap;^206^^^^^197^208^[REPLACE] this.anonymousFunctionNameMap = anonymousFunctionNameMap;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.functionNames =  null;^207^^^^^197^208^[REPLACE] this.functionNames = functionNames;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return topScope;^54^^^^^53^55^[REPLACE] return typedScopeCreator;^[METHOD] getScopeCreator [TYPE] ScopeCreator [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return typedScopeCreator;^61^^^^^60^62^[REPLACE] return topScope;^[METHOD] getTopScope [TYPE] Scope [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new TypeInferencePass ( compiler, compiler.getTypeRegistry (  ) , topScope, typedScopeCreator ) ;^88^89^90^^^87^91^[REPLACE] return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[METHOD] makeTypeInference [TYPE] TypeInferencePass [PARAMETER] AbstractCompiler compiler [CLASS] PassConfig PassConfigDelegate State   [TYPE]  AbstractCompiler compiler  [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new TypeCheck ( compiler, compiler.getReverseAbstractInterpreter (  ) , compiler.getReverseAbstractInterpreter (  ) ,^97^98^99^100^^96^107^[REPLACE] return new TypeCheck ( compiler, compiler.getReverseAbstractInterpreter (  ) , compiler.getTypeRegistry (  ) ,^[METHOD] makeTypeCheck [TYPE] TypeCheck [PARAMETER] AbstractCompiler compiler [CLASS] PassConfig PassConfigDelegate State   [TYPE]  AbstractCompiler compiler  [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( factoryList.get ( i ) .equals (  ) .equals ( passName )  )  {^112^^^^^109^120^[REPLACE] if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[METHOD] addPassFactoryBefore [TYPE] void [PARAMETER] PassFactory> factoryList PassFactory factory String passName [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  String passName  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  PassFactory factory  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  List factoryList  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return topScope;^114^^^^^109^120^[REPLACE] return;^[METHOD] addPassFactoryBefore [TYPE] void [PARAMETER] PassFactory> factoryList PassFactory factory String passName [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  String passName  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  PassFactory factory  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  List factoryList  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^for  ( int i = 0; i < null.size (  )  + 4; i++ )  {^111^^^^^109^120^[REPLACE] for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[METHOD] addPassFactoryBefore [TYPE] void [PARAMETER] PassFactory> factoryList PassFactory factory String passName [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  String passName  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  PassFactory factory  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  List factoryList  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^112^113^114^115^^109^120^[ADD] if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  { factoryList.add ( i, factory ) ; return; }^[METHOD] addPassFactoryBefore [TYPE] void [PARAMETER] PassFactory> factoryList PassFactory factory String passName [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  String passName  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  PassFactory factory  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  List factoryList  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^for  ( int i = 0 ; i < factoryList.size (  ) ; i++ )  {^111^^^^^109^120^[REPLACE] for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[METHOD] addPassFactoryBefore [TYPE] void [PARAMETER] PassFactory> factoryList PassFactory factory String passName [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  String passName  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  PassFactory factory  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  List factoryList  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^111^112^113^114^115^109^120^[ADD] for  ( int i = 0; i < factoryList.size (  ) ; i++ )  { if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  { factoryList.add ( i, factory ) ; return; }^[METHOD] addPassFactoryBefore [TYPE] void [PARAMETER] PassFactory> factoryList PassFactory factory String passName [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  String passName  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  PassFactory factory  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  List factoryList  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^118^119^^^^109^120^[REPLACE] throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[METHOD] addPassFactoryBefore [TYPE] void [PARAMETER] PassFactory> factoryList PassFactory factory String passName [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  PassConfig delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  String passName  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  PassFactory factory  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  List factoryList  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  { if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^126^^^^^125^131^[REPLACE] PassConfig current = this;^[METHOD] getBasePassConfig [TYPE] PassConfig [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[ADD]^^126^^^^^125^131^[ADD] PassConfig current = this;^[METHOD] getBasePassConfig [TYPE] PassConfig [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^while  ( ! current instanceof PassConfigDelegate )  {^127^^^^^125^131^[REPLACE] while  ( current instanceof PassConfigDelegate )  {^[METHOD] getBasePassConfig [TYPE] PassConfig [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^current =   (  ( PassConfigDelegate )  current ) .delegate;^128^^^^^125^131^[REPLACE] current =  (  ( PassConfigDelegate )  current ) .delegate;^[METHOD] getBasePassConfig [TYPE] PassConfig [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[ADD]^^128^^^^^125^131^[ADD] current =  (  ( PassConfigDelegate )  current ) .delegate;^[METHOD] getBasePassConfig [TYPE] PassConfig [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate;^130^^^^^125^131^[REPLACE] return current;^[METHOD] getBasePassConfig [TYPE] PassConfig [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate.getTopScope (  ) ;^159^^^^^158^160^[REPLACE] return delegate.getChecks (  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate.getScopeCreator (  ) ;^163^^^^^162^164^[REPLACE] return delegate.getOptimizations (  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate.getChecks (  ) ;^167^^^^^166^168^[REPLACE] return delegate.getScopeCreator (  ) ;^[METHOD] getScopeCreator [TYPE] ScopeCreator [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate.getChecks (  ) ;^171^^^^^170^172^[REPLACE] return delegate.getTopScope (  ) ;^[METHOD] getTopScope [TYPE] Scope [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate .setIntermediateState ( this )  ;^175^^^^^174^176^[REPLACE] return delegate.getIntermediateState (  ) ;^[METHOD] getIntermediateState [TYPE] PassConfig$State [PARAMETER] [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^delegate.makeTypeInference ( state ) ;^179^^^^^178^180^[REPLACE] delegate.setIntermediateState ( state ) ;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  State state  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[ADD]^^179^^^^^178^180^[ADD] delegate.setIntermediateState ( state ) ;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] PassConfig PassConfigDelegate State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  State state  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^private  PassConfig delegate;^151^^^^^^^[REPLACE] private final PassConfig delegate;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] PassConfigDelegate   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  Scope topScope  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  State state  [TYPE]  CompilerOptions options  [TYPE]  PassConfig current  delegate  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  MemoizedScopeCreator typedScopeCreator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^return delegate.getOptimizations (  ) ;^154^^^^^153^156^[REPLACE] super ( delegate.options ) ;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[ADD]^this.delegate = delegate;^154^155^^^^153^156^[ADD] super ( delegate.options ) ; this.delegate = delegate;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[REPLACE]^this.delegate =  null;^155^^^^^153^156^[REPLACE] this.delegate = delegate;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[ADD]^^155^^^^^153^156^[ADD] this.delegate = delegate;^[METHOD] <init> [TYPE] PassConfig) [PARAMETER] PassConfig delegate [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getTopScope (  ) ;^159^^^^^158^160^[REPLACE] return delegate.getChecks (  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getScopeCreator (  ) ;^163^^^^^162^164^[REPLACE] return delegate.getOptimizations (  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate .getChecks (  )  ;^167^^^^^166^168^[REPLACE] return delegate.getScopeCreator (  ) ;^[METHOD] getScopeCreator [TYPE] ScopeCreator [PARAMETER] [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getScopeCreator (  ) ;^171^^^^^170^172^[REPLACE] return delegate.getTopScope (  ) ;^[METHOD] getTopScope [TYPE] Scope [PARAMETER] [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[REPLACE]^return delegate.getOptimizations (  ) ;^175^^^^^174^176^[REPLACE] return delegate.getIntermediateState (  ) ;^[METHOD] getIntermediateState [TYPE] PassConfig$State [PARAMETER] [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  boolean false  true 
[REPLACE]^delegate .getIntermediateState (  )  ;^179^^^^^178^180^[REPLACE] delegate.setIntermediateState ( state ) ;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  State state  [TYPE]  boolean false  true 
[ADD]^^179^^^^^178^180^[ADD] delegate.setIntermediateState ( state ) ;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] PassConfigDelegate   [TYPE]  PassConfig delegate  [TYPE]  State state  [TYPE]  boolean false  true 
[REPLACE]^private static  long serialVersionUID = 1;^187^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] State   [TYPE]  PassConfig delegate  [TYPE]  State state  [TYPE]  boolean false  true 
[REPLACE]^Map<String, Integer> cssNames;^189^^^^^^^[REPLACE] final Map<String, Integer> cssNames;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] State   [TYPE]  PassConfig delegate  [TYPE]  State state  [TYPE]  boolean false  true 
[REPLACE]^Set<String> exportedNames;^190^^^^^^^[REPLACE] final Set<String> exportedNames;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] State   [TYPE]  PassConfig delegate  [TYPE]  State state  [TYPE]  boolean false  true 
[REPLACE]^VariableMap propertyMap;^193^^^^^^^[REPLACE] final VariableMap propertyMap;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] State   [TYPE]  PassConfig delegate  [TYPE]  State state  [TYPE]  boolean false  true 
[REPLACE]^this.cssNames =  null;^201^^^^^197^208^[REPLACE] this.cssNames = cssNames;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.exportedNames =  null;^202^^^^^197^208^[REPLACE] this.exportedNames = exportedNames;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.crossModuleIdGenerator =  null;^203^^^^^197^208^[REPLACE] this.crossModuleIdGenerator = crossModuleIdGenerator;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.variableMap =  propertyMap;^204^^^^^197^208^[REPLACE] this.variableMap = variableMap;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.propertyMap =  variableMap;^205^^^^^197^208^[REPLACE] this.propertyMap = propertyMap;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.anonymousFunctionNameMap =  variableMap;^206^^^^^197^208^[REPLACE] this.anonymousFunctionNameMap = anonymousFunctionNameMap;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.functionNames =  null;^207^^^^^197^208^[REPLACE] this.functionNames = functionNames;^[METHOD] <init> [TYPE] FunctionNames) [PARAMETER] Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [CLASS] State   [TYPE]  Set exportedNames  [TYPE]  boolean false  true  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  Map cssNames  [TYPE]  long serialVersionUID  [TYPE]  FunctionNames functionNames 
