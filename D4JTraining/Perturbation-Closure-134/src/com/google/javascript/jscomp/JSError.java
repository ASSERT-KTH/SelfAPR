[REPLACE]^public   short  lineNumber;^40^^^^^^^[REPLACE] public final int lineNumber;^ [CLASS] JSError  
[REPLACE]^public  CheckLevel level;^43^^^^^^^[REPLACE] public final CheckLevel level;^ [CLASS] JSError  
[REPLACE]^private  int charno;^46^^^^^^^[REPLACE] private final int charno;^ [CLASS] JSError  
[REPLACE]^this.type =  null;^168^^^^^166^174^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[ADD]^^168^^^^^166^174^[ADD] this.type = type;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^this.description =  null.format.format ( arguments ) ;^169^^^^^166^174^[REPLACE] this.description = type.format.format ( arguments ) ;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[ADD]^^169^170^171^172^173^166^174^[ADD] this.description = type.format.format ( arguments ) ; this.lineNumber = lineno; this.charno = charno; this.sourceName = sourceName; this.level = level == null ? type.level : level;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^this.lineNumber =  lineNumber;^170^^^^^166^174^[REPLACE] this.lineNumber = lineno;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^this.charno =  lineno;^171^^^^^166^174^[REPLACE] this.charno = charno;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^this.sourceName =  description;^172^^^^^166^174^[REPLACE] this.sourceName = sourceName;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[ADD]^^172^^^^^166^174^[ADD] this.sourceName = sourceName;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^this.level  =  type.level ;^173^^^^^166^174^[REPLACE] this.level = level == null ? type.level : level;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^this ( sourceName, ( node ! =  node.getLineno (  )  ;^184^185^186^187^^182^188^[REPLACE] this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName Node node DiagnosticType type  arguments [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Node node  [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^( node != null )  ? node.getCharno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^185^186^187^^^182^188^[REPLACE] ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName Node node DiagnosticType type  arguments [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Node node  [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^( node != null )  ? node.getLineno (  )  : -1, type, null, arguments ) ;^186^187^^^^182^188^[REPLACE] ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String sourceName Node node DiagnosticType type  arguments [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Node node  [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return new JSError ( this, -1, -1, type, this, arguments ) ;^70^^^^^69^71^[REPLACE] return new JSError ( null, -1, -1, type, null, arguments ) ;^[METHOD] make [TYPE] JSError [PARAMETER] DiagnosticType type  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return new JSError ( sourceName, lineno, charno, type, true, arguments ) ;^84^^^^^82^85^[REPLACE] return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[METHOD] make [TYPE] JSError [PARAMETER] String sourceName int lineno int charno DiagnosticType type  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^98^^^^^96^99^[REPLACE] return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[METHOD] make [TYPE] JSError [PARAMETER] String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return  new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments )  ;^111^^^^^109^112^[REPLACE] return new JSError ( sourceName, n, type, arguments ) ;^[METHOD] make [TYPE] JSError [PARAMETER] String sourceName Node n DiagnosticType type  arguments [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Node n  [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return new JSError ( sourceName, n.getLineno (  ) , n.getLineno (  ) , type, level, arguments ) ;^125^126^^^^122^127^[REPLACE] return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[METHOD] make [TYPE] JSError [PARAMETER] String sourceName Node n CheckLevel level DiagnosticType type  arguments [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Node n  [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return new JSError ( t.getSourceName (  ) , n .getCharno (  )  , n.getCharno (  ) , type, level, arguments ) ;^139^140^^^^137^141^[REPLACE] return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[METHOD] make [TYPE] JSError [PARAMETER] NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Node n  [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return new JSError ( sourceName, n, type, arguments ) ;^153^^^^^151^154^[REPLACE] return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[METHOD] make [TYPE] JSError [PARAMETER] NodeTraversal t Node n DiagnosticType type  arguments [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Node n  [TYPE]  String description  sourceName  [TYPE]  String[] arguments  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return true;^191^^^^^190^192^[REPLACE] return type;^[METHOD] getType [TYPE] DiagnosticType [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return formatter.formatWarning ( this ) ;^202^^^^^199^210^[REPLACE] return formatter.formatError ( this ) ;^[METHOD] format [TYPE] String [PARAMETER] CheckLevel level MessageFormatter formatter [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  MessageFormatter formatter  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return formatter.formatError ( this ) ;^205^^^^^199^210^[REPLACE] return formatter.formatWarning ( this ) ;^[METHOD] format [TYPE] String [PARAMETER] CheckLevel level MessageFormatter formatter [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  MessageFormatter formatter  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return this;^208^^^^^199^210^[REPLACE] return null;^[METHOD] format [TYPE] String [PARAMETER] CheckLevel level MessageFormatter formatter [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  MessageFormatter formatter  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.valueOf (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^[REPLACE] return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^return result;^225^^^^^224^226^[REPLACE] return charno;^[METHOD] getCharno [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno 
[REPLACE]^if  ( this  &&  o )  {^231^^^^^229^261^[REPLACE] if  ( this == o )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[ADD]^^231^232^233^^^229^261^[ADD] if  ( this == o )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return false;^232^^^^^229^261^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^if  ( o != false ) {^234^^^^^229^261^[REPLACE] if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^235^^^^^229^261^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^int result = type.hashCode (  ) ;^238^^^^^229^261^[REPLACE] JSError jsError =  ( JSError )  o;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^if  ( charno  ==  jsError.charno )  {^240^^^^^229^261^[REPLACE] if  ( charno != jsError.charno )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[ADD]^^240^241^242^^^229^261^[ADD] if  ( charno != jsError.charno )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^241^^^^^229^261^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^if  ( lineNumber  == lineno )  {^243^^^^^229^261^[REPLACE] if  ( lineNumber != jsError.lineNumber )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[ADD]^^243^244^245^^^229^261^[ADD] if  ( lineNumber != jsError.lineNumber )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^244^^^^^229^261^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^if  ( !description.valueOf ( jsError.description )  )  {^246^^^^^229^261^[REPLACE] if  ( !description.equals ( jsError.description )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^247^^^^^229^261^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^if  ( level  ==  jsError.level )  {^249^^^^^229^261^[REPLACE] if  ( level != jsError.level )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[ADD]^return false;^249^250^251^^^229^261^[ADD] if  ( level != jsError.level )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^250^^^^^229^261^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^if  ( sourceName == this ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != this )  {^252^253^^^^229^261^[REPLACE] if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^254^^^^^252^255^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^254^^^^^229^261^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^if  ( !type .make ( type , null )   )  {^256^^^^^229^261^[REPLACE] if  ( !type.equals ( jsError.type )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return true;^257^^^^^229^261^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^return false;^260^^^^^229^261^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JSError   [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  Object o  [TYPE]  String description  sourceName  [TYPE]  int charno  lineNumber  lineno  [TYPE]  JSError jsError 
[REPLACE]^JSError jsError =  ( JSError )  o;^266^^^^^264^273^[REPLACE] int result = type.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[REPLACE]^result = 31 * result + level.hashCode (  ) ; ;^267^^^^^264^273^[REPLACE] result = 31 * result + description.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[REPLACE]^result  =  sourceName.hashCode (  )  ;^268^^^^^264^273^[REPLACE] result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[ADD]^^268^269^^^^264^273^[ADD] result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ; result = 31 * result + lineNumber;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[REPLACE]^result = 31 * result + charno; ;^269^^^^^264^273^[REPLACE] result = 31 * result + lineNumber;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[REPLACE]^result = 31 * result + description.hashCode (  ) ; ;^270^^^^^264^273^[REPLACE] result = 31 * result + level.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[ADD]^result = 31 * result + charno;^270^271^^^^264^273^[ADD] result = 31 * result + level.hashCode (  ) ; result = 31 * result + charno;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[REPLACE]^result = 31 * result + lineNumber; ;^271^^^^^264^273^[REPLACE] result = 31 * result + charno;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[ADD]^^271^^^^^264^273^[ADD] result = 31 * result + charno;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
[REPLACE]^return lineNumber;^272^^^^^264^273^[REPLACE] return result;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JSError   [TYPE]  String description  sourceName  [TYPE]  boolean false  true  [TYPE]  DiagnosticType type  [TYPE]  CheckLevel level  [TYPE]  int charno  lineNumber  lineno  result 
