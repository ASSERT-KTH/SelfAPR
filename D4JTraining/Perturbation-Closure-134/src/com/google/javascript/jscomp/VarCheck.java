[REPLACE]^static final DiagnosticType UNDEFINED_VAR_ERROR  = null ;^36^37^38^^^36^38^[REPLACE] static final DiagnosticType UNDEFINED_VAR_ERROR = DiagnosticType.error ( "JSC_UNDEFINED_VARIABLE", "variable {0} is undefined" ) ;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^static final DiagnosticType VIOLATED_MODULE_DEP_ERROR  = null ;^40^41^42^43^^40^43^[REPLACE] static final DiagnosticType VIOLATED_MODULE_DEP_ERROR = DiagnosticType.error ( "JSC_VIOLATED_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + "module {1}, since {1} loads after {0}" ) ;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^static final DiagnosticType MISSING_MODULE_DEP_ERROR  = null ;^45^46^47^48^^45^48^[REPLACE] static final DiagnosticType MISSING_MODULE_DEP_ERROR = DiagnosticType.warning ( "JSC_MISSING_MODULE_DEPENDENCY", "missing module dependency; module {0} should depend " + "on module {1} because it references {2}" ) ;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^static final DiagnosticType STRICT_MODULE_DEP_ERROR  = null ;^50^51^52^53^^50^53^[REPLACE] static final DiagnosticType STRICT_MODULE_DEP_ERROR = DiagnosticType.disabled ( "JSC_STRICT_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + "module {1}" ) ;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^static  DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR = DiagnosticType.warning ( "JSC_NAME_REFERENCE_IN_EXTERNS", "accessing name {0} in externs has no effect" ) ;^55^56^57^58^^55^58^[REPLACE] static final DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR = DiagnosticType.warning ( "JSC_NAME_REFERENCE_IN_EXTERNS", "accessing name {0} in externs has no effect" ) ;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^static final DiagnosticType INVALID_FUNCTION_DECL ;^60^61^62^^^60^62^[REPLACE] static final DiagnosticType INVALID_FUNCTION_DECL = DiagnosticType.error ( "JSC_INVALID_FUNCTION_DECL", "Syntax error: function declaration must have a name" ) ;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^private CompilerInput synthesizedExternsInput ;^64^^^^^^^[REPLACE] private CompilerInput synthesizedExternsInput = null;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^private Node synthesizedExternsRoot ;^65^^^^^^^[REPLACE] private Node synthesizedExternsRoot = null;^ [CLASS] VarCheck NameRefInExternsCheck  
[REPLACE]^if  ( synthesizedExternsRoot.getType (  )   ==  Token.NAME )  {^90^^^^^89^170^[REPLACE] if  ( n.getType (  )  != Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return;  ;^91^^^^^89^170^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( NodeUtil.isLabelName ( synthesizedExternsRoot )  )  {^94^^^^^89^170^[REPLACE] if  ( NodeUtil.isLabelName ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return;  ;^95^^^^^89^170^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^String varName = synthesizedExternsRoot.getString (  ) ;^98^^^^^89^170^[REPLACE] String varName = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^101^^^^^89^170^[REPLACE] if  ( varName.isEmpty (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( !NodeUtil.isFunction ( parent )  )  {^106^^^^^89^170^[REPLACE] if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^t.report ( n, INVALID_FUNCTION_DECL ) ;^106^107^108^^^89^170^[ADD] if  ( !NodeUtil.isAnonymousFunction ( parent )  )  { t.report ( n, INVALID_FUNCTION_DECL ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.traverseRoots ( n, INVALID_FUNCTION_DECL ) ;^107^^^^^89^170^[REPLACE] t.report ( n, INVALID_FUNCTION_DECL ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return;  ;^109^^^^^89^170^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( !NodeUtil .isFunction ( parent )   )  {^106^^^^^89^170^[REPLACE] if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( synthesizedExternsRoot, INVALID_FUNCTION_DECL ) ;^107^^^^^89^170^[REPLACE] t.report ( n, INVALID_FUNCTION_DECL ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Scope scope = t.getInput (  ) ;^113^^^^^89^170^[REPLACE] Scope scope = t.getScope (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^CompilerInput synthesizedExterns = getSynthesizedExternsInput (  )  ;^114^^^^^89^170^[REPLACE] Scope.Var var = scope.getVar ( varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( var != false )  {^115^^^^^89^170^[REPLACE] if  ( var == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  !NodeUtil.isAnonymousFunction  (  parent  )    )   {  ;^116^^^^^89^170^[REPLACE] if  ( NodeUtil.isAnonymousFunction ( parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^122^^^^^116^133^[REPLACE] if  ( sanityCheck )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^122^123^124^^^116^133^[ADD] if  ( sanityCheck )  { throw new IllegalStateException  (" ")  ; } else {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^CompilerInput synthesizedExterns = getSynthesizedExternsInput (  )  ;^127^^^^^122^132^[REPLACE] Node nameNode = Node.newString ( Token.NAME, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^123^^^^^116^133^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^127^^^^^116^133^[ADD] Node nameNode = Node.newString ( Token.NAME, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return ;^123^^^^^116^133^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^122^^^^^89^170^[REPLACE] if  ( sanityCheck )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node nameNode = Node .getString (  )  ;^127^^^^^122^132^[REPLACE] Node nameNode = Node.newString ( Token.NAME, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^123^^^^^89^170^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return;  ;^134^^^^^89^170^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node nameNode = Node .getString (  )  ;^127^^^^^89^170^[REPLACE] Node nameNode = Node.newString ( Token.NAME, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^116^117^^119^120^89^170^[ADD] if  ( NodeUtil.isAnonymousFunction ( parent )  )  {  } else { t.report ( n, UNDEFINED_VAR_ERROR, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^Node nameNode = Node .getString (  )  ;^127^^^^^116^133^[REPLACE] Node nameNode = Node.newString ( Token.NAME, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^122^123^124^^^89^170^[ADD] if  ( sanityCheck )  { throw new IllegalStateException  (" ")  ; } else {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^127^^^^^122^132^[ADD] Node nameNode = Node.newString ( Token.NAME, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return ;^123^^^^^89^170^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^CompilerInput synthesizedExterns = getSynthesizedExternsInput (  )  ;^127^^^^^89^170^[REPLACE] Node nameNode = Node.newString ( Token.NAME, varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^CompilerInput currInput = t .getScope (  )  ;^137^^^^^89^170^[REPLACE] CompilerInput currInput = t.getInput (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^CompilerInput currInput = t.getInput (  )  ;^138^^^^^89^170^[REPLACE] CompilerInput varInput = var.input;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( currInput != synthesizedExternsInput ) {^139^^^^^89^170^[REPLACE] if  ( currInput == varInput || currInput == null || varInput == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^139^140^141^142^^89^170^[ADD] if  ( currInput == varInput || currInput == null || varInput == null )  {  return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return;  ;^141^^^^^89^170^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^JSModule currModule = varInput.getModule (  ) ;^145^^^^^89^170^[REPLACE] JSModule currModule = currInput.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^JSModule varModule = synthesizedExternsInput.getModule (  ) ;^146^^^^^89^170^[REPLACE] JSModule varModule = varInput.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^147^^^^^89^170^[ADD] JSModuleGraph moduleGraph = compiler.getModuleGraph (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (  varModule != null && currModule != null )  {^148^^^^^89^170^[REPLACE] if  ( varModule != currModule && varModule != null && currModule != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^148^149^^151^^89^170^[ADD] if  ( varModule != currModule && varModule != null && currModule != null )  { if  ( moduleGraph.dependsOn ( currModule, varModule )  )  { } else {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  moduleGraph.dependsOn  (  varModule, currModule  )    )   {  ;^149^^^^^89^170^[REPLACE] if  ( moduleGraph.dependsOn ( currModule, varModule )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( sanityCheck && scope.isGlobal (  )  )  {^152^^^^^149^168^[REPLACE] if  ( !sanityCheck && scope.isGlobal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t .report ( n , INVALID_FUNCTION_DECL )  , varName ) ;^165^166^^^^152^167^[REPLACE] t.report ( n, STRICT_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^varModule.getName (  )  ;^166^^^^^152^167^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  ) , currModule.getName (  ) , varName ) ;^166^^^^^152^167^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^166^^^^^152^167^[ADD] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  moduleGraph.dependsOn  (  currModule, varModule  )    )   {  ;^153^^^^^149^168^[REPLACE] if  ( moduleGraph.dependsOn ( varModule, currModule )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^153^154^155^156^^149^168^[ADD] if  ( moduleGraph.dependsOn ( varModule, currModule )  )  {  t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^varModule.getName (  )  ;^162^^^^^153^163^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^162^^^^^153^163^[ADD] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  ) , currModule.getName (  ) , varName ) ;^162^^^^^153^163^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^varModule.getName (  )  ;^156^^^^^149^168^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  )  ;^156^^^^^149^168^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^156^^^^^149^168^[ADD] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( synthesizedExternsRoot, MISSING_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^161^162^^^^153^163^[REPLACE] t.report ( n, MISSING_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( n, VIOLATED_MODULE_DEP_ERROR, varModule.getName (  ) , varModule.getName (  ) , varName ) ;^155^156^^^^149^168^[REPLACE] t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  ) , currModule.getName (  ) , varName ) ;^156^^^^^149^168^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( sanityCheck ) {^152^^^^^89^170^[REPLACE] if  ( !sanityCheck && scope.isGlobal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( n, STRICT_MODULE_DEP_ERROR, varModule.getName (  ) , varModule.getName (  ) , varName ) ;^165^166^^^^152^167^[REPLACE] t.report ( n, STRICT_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  )  ;^166^^^^^152^167^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( moduleGraph.dependsOsynthesizedExternsRoot ( varModule, currModule )  )  {^153^^^^^89^170^[REPLACE] if  ( moduleGraph.dependsOn ( varModule, currModule )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^153^154^155^156^^89^170^[ADD] if  ( moduleGraph.dependsOn ( varModule, currModule )  )  {  t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( n, MISSING_MODULE_DEP_ERROR, varModule.getName (  ) , varModule.getName (  ) , varName ) ;^161^162^^^^153^163^[REPLACE] t.report ( n, MISSING_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  )  ;^162^^^^^153^163^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( synthesizedExternsRoot, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^155^156^^^^89^170^[REPLACE] t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^varModule.getName (  )  ;^156^^^^^89^170^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  )  ;^156^^^^^89^170^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  moduleGraph.dependsOn  (  currModule, varModule  )    )   {  ;^153^^^^^89^170^[REPLACE] if  ( moduleGraph.dependsOn ( varModule, currModule )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t .report ( parent , VIOLATED_MODULE_DEP_ERROR )  , varName ) ;^155^156^^^^89^170^[REPLACE] t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^155^156^^^^89^170^[ADD] t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^156^^^^^89^170^[ADD] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( synthesizedExternsRoot, STRICT_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^165^166^^^^152^167^[REPLACE] t.report ( n, STRICT_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , currModule.getName (  ) , varName ) ;^155^156^^^^149^168^[REPLACE] t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^compiler.getModuleGraph (  )  ;^156^^^^^149^168^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REMOVE]^t.getScope (  )  ;^156^^^^^149^168^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( sanityCheck && scope.isGlobal (  )  )  {^152^^^^^89^170^[REPLACE] if  ( !sanityCheck && scope.isGlobal (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^152^153^^155^156^89^170^[ADD] if  ( !sanityCheck && scope.isGlobal (  )  )  { if  ( moduleGraph.dependsOn ( varModule, currModule )  )  { t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( n, VIOLATED_MODULE_DEP_ERROR, varModule.getName (  ) , varModule.getName (  ) , varName ) ;^155^156^^^^89^170^[REPLACE] t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^currModule.getName (  ) , currModule.getName (  ) , varName ) ;^156^^^^^89^170^[REPLACE] currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , currModule.getName (  ) , varName ) ;^155^156^^^^89^170^[REPLACE] t.report ( n, VIOLATED_MODULE_DEP_ERROR, currModule.getName (  ) , varModule.getName (  ) , varName ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] VarCheck NameRefInExternsCheck   [TYPE]  CompilerInput currInput  synthesizedExternsInput  varInput  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  sanityCheck  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  [TYPE]  Var var  [TYPE]  Node externs  n  nameNode  parent  root  synthesizedExternsRoot  [TYPE]  JSModule currModule  varModule  [TYPE]  String varName  [TYPE]  JSModuleGraph moduleGraph 
