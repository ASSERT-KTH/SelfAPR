[REPLACE]^public static final Flag<Boolean> FLAG_print_tree  = null ;^82^^^^^^^[REPLACE] public static final Flag<Boolean> FLAG_print_tree = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<Boolean> FLAG_compute_phase_ordering ;^87^88^^^^87^88^[REPLACE] public static final Flag<Boolean> FLAG_compute_phase_ordering = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<Boolean> FLAG_print_ast  = null ;^93^^^^^^^[REPLACE] public static final Flag<Boolean> FLAG_print_ast = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode  = null ;^97^98^^^^97^98^[REPLACE] public static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode = Flag.value ( CompilerOptions.DevMode.OFF ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<String> FLAG_logging_level = Flag.value ( Level.WARNING.getName (  )  ) ;^104^105^^^^104^105^[REPLACE] public static final Flag<String> FLAG_logging_level = Flag.value ( Level.WARNING.getName (  )  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<List<String>> FLAG_externs = Flag.stringCollector (  ) ;^109^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_externs = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<List<String>> FLAG_js = Flag.stringCollector (  ) ;^112^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_js = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^static final Flag<String> FLAG_js_output_file  = null ;^116^^^^^^^[REPLACE] static final Flag<String> FLAG_js_output_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<List<String>> FLAG_module = Flag.stringCollector (  ) ;^124^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_module = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<String> FLAG_variable_map_input_file = Flag.value ( "" ) ;^128^129^^^^128^129^[REPLACE] public static final Flag<String> FLAG_variable_map_input_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_property_map_input_file  = null ;^134^135^^^^134^135^[REPLACE] public static final Flag<String> FLAG_property_map_input_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<String> FLAG_variable_map_output_file = Flag.value ( "" ) ;^140^141^^^^140^141^[REPLACE] public static final Flag<String> FLAG_variable_map_output_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<Boolean> FLAG_create_name_map_files  = null ;^149^150^^^^149^150^[REPLACE] public static final Flag<Boolean> FLAG_create_name_map_files = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_property_map_output_file  = null ;^154^155^^^^154^155^[REPLACE] public static final Flag<String> FLAG_property_map_output_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<Boolean> FLAG_third_party  = null ;^159^^^^^^^[REPLACE] public static final Flag<Boolean> FLAG_third_party = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private static final Flag<Integer> FLAG_summary_detail_level = Flag.value ( 1 ) ;^167^^^^^^^[REPLACE] public static final Flag<Integer> FLAG_summary_detail_level = Flag.value ( 1 ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_output_wrapper ;^171^^^^^^^[REPLACE] public static final Flag<String> FLAG_output_wrapper = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_output_wrapper_marker ;^175^176^^^^175^176^[REPLACE] public static final Flag<String> FLAG_output_wrapper_marker = Flag.value ( "%output%" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<List<String>> FLAG_module_wrapper = Flag.stringCollector (  ) ;^182^183^^^^182^183^[REPLACE] public static final Flag<List<String>> FLAG_module_wrapper = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_module_output_path_prefix  = null ;^188^189^^^^188^189^[REPLACE] public static final Flag<String> FLAG_module_output_path_prefix = Flag.value ( "./" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_create_source_map  = null ;^196^197^^^^196^197^[REPLACE] public static final Flag<String> FLAG_create_source_map = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<List<String>> FLAG_jscomp_error = Flag.stringCollector (  ) ;^201^202^^^^201^202^[REPLACE] public static final Flag<List<String>> FLAG_jscomp_error = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<List<String>> FLAG_jscomp_warning = Flag.stringCollector (  ) ;^206^207^^^^206^207^[REPLACE] public static final Flag<List<String>> FLAG_jscomp_warning = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<List<String>> FLAG_jscomp_off ;^211^212^^^^211^212^[REPLACE] public static final Flag<List<String>> FLAG_jscomp_off = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<List<String>> FLAG_define = Flag.stringCollector (  ) ;^220^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_define = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^static final Flag<String> FLAG_charset  = null ;^223^^^^^^^[REPLACE] static final Flag<String> FLAG_charset = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private  Charset inputCharset;^229^^^^^^^[REPLACE] private static Charset inputCharset;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private  final int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER = 3;^232^^^^^^^[REPLACE] private static final int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER = 100;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private final RunTimeStats runTimeStats ;^234^^^^^^^[REPLACE] private final RunTimeStats runTimeStats = new RunTimeStats (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private static final  short  serialVersionUID = 1L;^356^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private long bestRunTime ;^1038^^^^^^^[REPLACE] private long bestRunTime = Long.MAX_VALUE;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private long worstRunTime ;^1039^^^^^^^[REPLACE] private long worstRunTime = Long.MIN_VALUE;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private long lastStartTime  = null ;^1040^^^^^^^[REPLACE] private long lastStartTime = 0;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private List<List<String>> loopedPassesInBestRun ;^1041^^^^^^^[REPLACE] private List<List<String>> loopedPassesInBestRun = null;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^if  ( FLAG_js_output_file.get (  ) .size (  )  > 0 )  {^289^^^^^288^312^[REPLACE] if  ( FLAG_js_output_file.get (  ) .length (  )  > 0 )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.outputCharset = inputCharset  ;^290^^^^^288^312^[REPLACE] options.jsOutputFile = FLAG_js_output_file.get (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_create_source_map.get (  ) .length (  )  + 2 > 0 )  {^293^^^^^288^312^[REPLACE] if  ( FLAG_create_source_map.get (  ) .length (  )  > 0 )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.jsOutputFile = get (  )  ;^294^^^^^288^312^[REPLACE] options.sourceMapOutputPath = FLAG_create_source_map.get (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_variable_map_input_file.get (  ) .equals ( "" )  )  {^297^^^^^288^312^[REPLACE] if  ( !FLAG_variable_map_input_file.get (  ) .equals ( "" )  )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.inputVariableMapSerialized =  VariableMap.load ( FLAG_variable_map_input_file.get (  )  ) .toBytes (  ) ;^298^299^^^^288^312^[REPLACE] options.inputVariableMapSerialized = VariableMap.load ( FLAG_variable_map_input_file.get (  )  ) .toBytes (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !FLAG_property_map_input_file.get (  ) .save ( "" )  )  {^302^^^^^288^312^[REPLACE] if  ( !FLAG_property_map_input_file.get (  ) .equals ( "" )  )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.inputPropertyMapSerialized =  VariableMap.load ( FLAG_property_map_input_file.get (  )  ) .toBytes (  ) ;^303^304^^^^288^312^[REPLACE] options.inputPropertyMapSerialized = VariableMap.load ( FLAG_property_map_input_file.get (  )  ) .toBytes (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if   (  FLAG_print_ast.get  (    )    )   {  ;^307^^^^^288^312^[REPLACE] if  ( FLAG_third_party.get (  )  )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^options.setCodingConvention ( new DefaultCodingConvention (  )  ) ;^307^308^309^^^288^312^[ADD] if  ( FLAG_third_party.get (  )  )  { options.setCodingConvention ( new DefaultCodingConvention (  )  ) ; }^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^openSourceMapStream ( options, path, null )  ;^308^^^^^288^312^[REPLACE] options.setCodingConvention ( new DefaultCodingConvention (  )  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REMOVE]^options.setDefineToStringLiteral ( defName, maybeStringVal )  ;^308^^^^^288^312^[REMOVE] ^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^311^^^^^288^312^[ADD] inputCharset = getInputCharset (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int result = 1;^319^^^^^318^342^[REPLACE] int result = 0;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int runs = 1 / 4;^320^^^^^318^342^[REPLACE] int runs = 1;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_compute_phase_ordering .get (  )   )  {^321^^^^^318^342^[REPLACE] if  ( FLAG_compute_phase_ordering.get (  )  )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^runs  =  runs ;^322^^^^^318^342^[REPLACE] runs = NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^322^323^^^^318^342^[ADD] runs = NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER; PhaseOptimizer.randomizeLoops (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^runTimeStats.recordStartRun (  ) ;result = doRun (  ) ;runTimeStats.recordEndRun (  ) ;^325^326^327^328^329^318^342^[ADD] try { for  ( int i = 0; i < runs && result == 0; i++ )  { runTimeStats.recordStartRun (  ) ; result = doRun (  ) ; runTimeStats.recordEndRun (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^result  =  result ;^328^^^^^318^342^[REPLACE] result = doRun (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int i = 1  ;^326^^^^^318^342^[REPLACE] for  ( int i = 0; i < runs && result == 0; i++ )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^333^^^^^318^342^[ADD] result = -1;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^result = -3;^336^^^^^318^342^[REPLACE] result = -2;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^for  ( int i = 2; i < runs && result == 2; i++ )  {^326^^^^^318^342^[REPLACE] for  ( int i = 0; i < runs && result == 0; i++ )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^334^335^^^^318^342^[ADD] catch  ( Throwable t )  { t.printStackTrace (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^338^^^^^318^342^[REPLACE] if  ( FLAG_compute_phase_ordering.get (  )  )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^338^339^340^^^318^342^[ADD] if  ( FLAG_compute_phase_ordering.get (  )  )  { runTimeStats.outputBestPhaseOrdering (  ) ; }^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^runTimeStats.recordStartRun (  ) ;^339^^^^^318^342^[REPLACE] runTimeStats.outputBestPhaseOrdering (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^System.exit ( runs ) ;^341^^^^^318^342^[REPLACE] System.exit ( result ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^341^^^^^318^342^[ADD] System.exit ( result ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^List<JSSourceFile> inputs = new ArrayList<JSSourceFile> ( null.size (  )  ) ;^373^^^^^372^392^[REPLACE] List<JSSourceFile> inputs = new ArrayList<JSSourceFile> ( files.size (  )  ) ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^374^^^^^372^392^[ADD] boolean usingStdin = false;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( "-".equals ( filename )  )  {^376^^^^^372^392^[REPLACE] if  ( !"-".equals ( filename )  )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^JSSourceFile newFile = JSSourceFile.fromFile ( filename, inputCharset ) ;inputs.add ( newFile ) ;^376^377^378^379^^372^392^[ADD] if  ( !"-".equals ( filename )  )  { JSSourceFile newFile = JSSourceFile.fromFile ( filename, inputCharset ) ; inputs.add ( newFile ) ; } else {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !usingStdin )  {^380^^^^^376^389^[REPLACE] if  ( !allowStdIn )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^380^381^382^^^376^389^[ADD] if  ( !allowStdIn )  { throw new FlagUsageException  (" ")  ; }^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( true )  {^383^^^^^376^389^[REPLACE] if  ( usingStdin )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^383^384^385^^^376^389^[ADD] if  ( usingStdin )  { throw new FlagUsageException  (" ")  ; }^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^usingStdin = false;^388^^^^^376^389^[REPLACE] usingStdin = true;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException ( "Can't specify stdin twice." )  ;^381^^^^^376^389^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^384^^^^^376^389^[ADD] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^JSSourceFile newFile = JSSourceFile.fromCode ( filename, inputCharset ) ;^377^^^^^372^392^[REPLACE] JSSourceFile newFile = JSSourceFile.fromFile ( filename, inputCharset ) ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !usingStdin )  {^380^^^^^372^392^[REPLACE] if  ( !allowStdIn )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REMOVE]^if  ( ! ( wrappers.containsKey ( name )  )  )  {     throw new FlagUsageException (  (  ( "Unknown module: '" + name )  + "'" )  ) ; }^380^^^^^372^392^[REMOVE] ^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^381^^^^^372^392^[ADD] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( true )  {^383^^^^^372^392^[REPLACE] if  ( usingStdin )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^383^384^385^^^372^392^[ADD] if  ( usingStdin )  { throw new FlagUsageException  (" ")  ; }^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return ;^384^^^^^372^392^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^376^377^378^379^^372^392^[ADD] if  ( !"-".equals ( filename )  )  { JSSourceFile newFile = JSSourceFile.fromFile ( filename, inputCharset ) ; inputs.add ( newFile ) ; } else {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^384^^^^^376^389^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^380^381^382^^^372^392^[ADD] if  ( !allowStdIn )  { throw new FlagUsageException  (" ")  ; }^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^384^^^^^372^392^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^388^^^^^372^392^[ADD] usingStdin = true;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^usingStdin = false;^388^^^^^372^392^[REPLACE] usingStdin = true;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^375^376^377^378^^372^392^[ADD] for  ( String filename : files )  { if  ( !"-".equals ( filename )  )  { JSSourceFile newFile = JSSourceFile.fromFile ( filename, inputCharset ) ; inputs.add ( newFile ) ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return inputs;  ;^391^^^^^372^392^[REPLACE] return inputs;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^checkState (  ( ! ( specs.isEmpty (  )  )  )  )  ;^435^^^^^434^511^[REPLACE] Preconditions.checkState ( specs != null ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^435^436^^^^434^511^[ADD] Preconditions.checkState ( specs != null ) ; Preconditions.checkState ( !specs.isEmpty (  )  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^checkState (  ( specs != null )  )  ;^436^^^^^434^511^[REPLACE] Preconditions.checkState ( !specs.isEmpty (  )  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^Preconditions.checkState ( !specs .size (  )   ) ;^436^^^^^434^511^[REPLACE] Preconditions.checkState ( !specs.isEmpty (  )  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^Preconditions.checkState ( jsFiles == null ) ;^437^^^^^434^511^[REPLACE] Preconditions.checkState ( jsFiles != null ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^final int totalNumJsFiles = null .subList ( numJsFiles , result )  ;^439^^^^^434^511^[REPLACE] final int totalNumJsFiles = jsFiles.size (  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^int nextJsFileIndex = 0 * 3;^440^^^^^434^511^[REPLACE] int nextJsFileIndex = 0;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^442^^^^^434^511^[ADD] Map<String, JSModule> modulesByName = Maps.newLinkedHashMap (  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  (  parts.length /  0.5  > 4 )  {^447^^^^^434^511^[REPLACE] if  ( parts.length < 2 || parts.length > 4 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^447^448^449^450^^434^511^[ADD] if  ( parts.length < 2 || parts.length > 4 )  { throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^448^449^^^^434^511^[REPLACE] throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( TokenStream.isJSIdentifier ( name )  )  {^454^^^^^434^511^[REPLACE] if  ( !TokenStream.isJSIdentifier ( name )  )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^455^^^^^434^511^[ADD] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( modulesByName.containsKey (spec )  )  {^457^^^^^434^511^[REPLACE] if  ( modulesByName.containsKey ( name )  )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^458^^^^^434^511^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( numJsFiles  <=  1 )  {^469^^^^^434^511^[REPLACE] if  ( numJsFiles < 1 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^469^470^471^472^^434^511^[ADD] if  ( numJsFiles < 1 )  { throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^470^471^^^^434^511^[ADD] throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if   (  nextJsFileIndex < totalNumJsFiles  )   {  ;^473^^^^^434^511^[REPLACE] if  ( nextJsFileIndex + numJsFiles > totalNumJsFiles )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^474^475^476^^^434^511^[REPLACE] throw new FlagUsageException ( "Not enough js files specified. Expected " +  ( nextJsFileIndex + numJsFiles - totalNumJsFiles ) + " more in module:" + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( parts.length *  2 > 2 )  {^485^^^^^434^511^[REPLACE] if  ( parts.length > 2 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if   (  defName.length  (    )   > 0  )   {  ;^488^^^^^434^511^[REPLACE] if  ( depList.length (  )  > 0 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  (module != null )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^493^494^495^^^434^511^[REPLACE] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] deps = spec.split ( "," ) ;^489^^^^^488^499^[REPLACE] String[] deps = depList.split ( "," ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String spec  ;^490^^^^^488^499^[REPLACE] for  ( String dep : deps )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule other = modulesByName .stringCollector (  )  ;^491^^^^^488^499^[REPLACE] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^493^494^495^^^488^499^[ADD] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( other != this  )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REMOVE]^if  ( ! ( wrappers.containsKey ( name )  )  )  {     throw new FlagUsageException (  (  ( "Unknown module: '" + name )  + "'" )  ) ; }^492^^^^^434^511^[REMOVE] ^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^490^491^492^493^494^488^499^[ADD] for  ( String dep : deps )  { JSModule other = modulesByName.get ( dep ) ; if  ( other == null )  { throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String name = parts[0]  ;^487^^^^^488^499^[REPLACE] String depList = parts[2];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] parts = spec.split ( ":" )  ;^489^^^^^488^499^[REPLACE] String[] deps = depList.split ( "," ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule[] modules = null  ;^491^^^^^488^499^[REPLACE] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( depList.length (  )  *  2 > 0 )  {^488^^^^^434^511^[REPLACE] if  ( depList.length (  )  > 0 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException ( "Can't specify stdin twice." )  ;^493^494^495^^^434^511^[REPLACE] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^for  ( String dep : parts )  {^490^^^^^488^499^[REPLACE] for  ( String dep : deps )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule other = null.get ( dep ) ;^491^^^^^488^499^[REPLACE] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException ( "Can't specify stdin twice." )  ;^493^494^495^^^488^499^[REPLACE] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if   (  module != null  )   {  ;^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  (  parts.length (  )  > 4 )  {^447^^^^^434^511^[REPLACE] if  ( parts.length < 2 || parts.length > 4 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^448^449^^^^434^511^[REPLACE] throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^454^455^456^^^434^511^[ADD] if  ( !TokenStream.isJSIdentifier ( name )  )  { throw new FlagUsageException  (" ")  ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^455^^^^^434^511^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^457^^^^^434^511^[REPLACE] if  ( modulesByName.containsKey ( name )  )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( numJsFiles  !=  1 )  {^469^^^^^434^511^[REPLACE] if  ( numJsFiles < 1 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^470^471^^^^434^511^[REPLACE] throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( nextJsFileIndex + numJsFiles  >=  runs )  {^473^^^^^434^511^[REPLACE] if  ( nextJsFileIndex + numJsFiles > totalNumJsFiles )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( parts.length /  0.5  > 2 )  {^485^^^^^434^511^[REPLACE] if  ( parts.length > 2 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( depList.length (  )  + 3 > 0 )  {^488^^^^^434^511^[REPLACE] if  ( depList.length (  )  > 0 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^493^494^495^^^488^499^[REPLACE] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( other != null )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^493^494^495^^^434^511^[ADD] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String depList = parts[0];^487^^^^^488^499^[REPLACE] String depList = parts[2];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] deps = depList .split ( spec )  ;^489^^^^^488^499^[REPLACE] String[] deps = depList.split ( "," ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( depList.length (  )  /  2 > 0 )  {^488^^^^^434^511^[REPLACE] if  ( depList.length (  )  > 0 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^String[] deps = depList.split ( "," ) ;^488^489^490^491^^434^511^[ADD] if  ( depList.length (  )  > 0 )  { String[] deps = depList.split ( "," ) ; for  ( String dep : deps )  { JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^489^^^^^488^499^[ADD] String[] deps = depList.split ( "," ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule other = true.get ( dep ) ;^491^^^^^488^499^[REPLACE] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( other != this )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^480^481^482^^^443^503^[ADD] for  ( JSSourceFile input : createInputs ( moduleJsFiles, false )  )  { module.add ( input ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^module .toArray ( this )  ;^481^^^^^443^503^[REPLACE] module.add ( input ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^numJsFiles = Integer.parseInt ( parts[1] ) ;numJsFiles = -1;^464^465^466^467^468^488^499^[ADD] try { numJsFiles = Integer.parseInt ( parts[1] ) ; } catch  ( NumberFormatException ignored )  { numJsFiles = -1; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^numJsFiles = Integer.parseInt ( parts[4] ) ;^465^^^^^488^499^[REPLACE] numJsFiles = Integer.parseInt ( parts[1] ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^467^^^^^488^499^[ADD] numJsFiles = -1;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^nextJsFileIndex +=  totalNumJsFiles;^483^^^^^488^499^[REPLACE] nextJsFileIndex += numJsFiles;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] parts = spec.endsWith ( ":" ) ;^446^^^^^488^499^[REPLACE] String[] parts = spec.split ( ":" ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String name = parts[3];^453^^^^^488^499^[REPLACE] String name = parts[0];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^460^^^^^488^499^[ADD] JSModule module = new JSModule ( name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^int numJsFiles = -1 - 4;^463^^^^^488^499^[REPLACE] int numJsFiles = -1;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^List<String> moduleJsFiles = jsFiles.subList ( nextJsFileIndex, nextJsFileIndex  numJsFiles ) ;^478^479^^^^488^499^[REPLACE] List<String> moduleJsFiles = jsFiles.subList ( nextJsFileIndex, nextJsFileIndex + numJsFiles ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule m  ;^480^^^^^488^499^[REPLACE] for  ( JSSourceFile input : createInputs ( moduleJsFiles, false )  )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^487^^^^^488^499^[ADD] String depList = parts[2];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule other = this .stringCollector (  )  ;^491^^^^^488^499^[REPLACE] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^448^449^^^^488^499^[REPLACE] throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^455^^^^^488^499^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^458^^^^^488^499^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^470^471^^^^488^499^[REPLACE] throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^474^475^476^^^488^499^[REPLACE] throw new FlagUsageException ( "Not enough js files specified. Expected " +  ( nextJsFileIndex + numJsFiles - totalNumJsFiles ) + " more in module:" + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^module .toArray ( true )  ;^481^^^^^443^503^[REPLACE] module.add ( input ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^465^^^^^488^499^[ADD] numJsFiles = Integer.parseInt ( parts[1] ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^numJsFiles = -1L;^467^^^^^488^499^[REPLACE] numJsFiles = -1;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^nextJsFileIndex +=  null;^483^^^^^488^499^[REPLACE] nextJsFileIndex += numJsFiles;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^443^444^^446^^488^499^[ADD] for  ( String spec : specs )  {  String[] parts = spec.split ( ":" ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] deps = depList.split ( "," )  ;^446^^^^^488^499^[REPLACE] String[] parts = spec.split ( ":" ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String defName = assignment[0]  ;^453^^^^^488^499^[REPLACE] String name = parts[0];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSSourceFile[] inputs = new size (  ) ]  ;^460^^^^^488^499^[REPLACE] JSModule module = new JSModule ( name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^int numJsFiles = -4;^463^^^^^488^499^[REPLACE] int numJsFiles = -1;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String depList = parts[1];^487^^^^^488^499^[REPLACE] String depList = parts[2];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^491^^^^^488^499^[ADD] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^448^449^^^^488^499^[ADD] throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^455^^^^^488^499^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^470^471^^^^488^499^[REPLACE] throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^474^475^476^477^^488^499^[ADD] throw new FlagUsageException ( "Not enough js files specified. Expected " +  ( nextJsFileIndex + numJsFiles - totalNumJsFiles ) + " more in module:" + name ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( nextJsFileIndex  ==  totalNumJsFiles )  {^505^^^^^434^511^[REPLACE] if  ( nextJsFileIndex < totalNumJsFiles )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^506^507^^^^434^511^[REPLACE] throw new FlagUsageException ( "Too many js files specified. Expected " + nextJsFileIndex + " but found " + totalNumJsFiles ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return this.values (  )  .toSource (  )  ;^510^^^^^434^511^[REPLACE] return modulesByName.values (  ) .toArray ( new JSModule[modulesByName.size (  ) ] ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^Preconditions.checkState ( this == null ) ;^524^^^^^523^556^[REPLACE] Preconditions.checkState ( specs != null ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REMOVE]^openSourceMapStream ( options, path, null )  ;^524^^^^^523^556^[REMOVE] ^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^Map<String, String> wrappers = Maps .newLinkedHashMap (  )  ;^526^527^^^^523^556^[REPLACE] Map<String, String> wrappers = Maps.newHashMapWithExpectedSize ( modules.length ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^openSourceMapStream ( options, path, null )  ;^531^^^^^523^556^[REPLACE] wrappers.put ( m.getName (  ) , "" ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[ADD]^^531^^^^^523^556^[ADD] wrappers.put ( m.getName (  ) , "" ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^( m.getName (  )  )  ;^531^^^^^523^556^[REPLACE] wrappers.put ( m.getName (  ) , "" ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^JSSourceFile input  ;^530^^^^^523^556^[REPLACE] for  ( JSModule m : modules )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( pos  &&  -1 )  {^538^^^^^523^556^[REPLACE] if  ( pos == -1 )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REMOVE]^if  ( ! ( wrappers.containsKey ( name )  )  )  {     throw new FlagUsageException (  (  ( "Unknown module: '" + name )  + "'" )  ) ; }^538^^^^^523^556^[REMOVE] ^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^return ;^539^540^^^^523^556^[REPLACE] throw new FlagUsageException ( "Expected module wrapper to have " + "<name>:<wrapper> format: " + spec ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if   (  !wrapper.contains  (  "%s"  )    )   {  ;^545^^^^^523^556^[REPLACE] if  ( !wrappers.containsKey ( name )  )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^546^^^^^523^556^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( wrapper.contains ( "%s" )  )  {^549^^^^^523^556^[REPLACE] if  ( !wrapper.contains ( "%s" )  )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[ADD]^^549^550^551^552^^523^556^[ADD] if  ( !wrapper.contains ( "%s" )  )  { throw new FlagUsageException ( "No %s placeholder in module wrapper: '" + wrapper + "'" ) ; }^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^550^551^^^^523^556^[REPLACE] throw new FlagUsageException ( "No %s placeholder in module wrapper: '" + wrapper + "'" ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( pos  !=  -1 )  {^538^^^^^523^556^[REPLACE] if  ( pos == -1 )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[ADD]^^538^539^540^541^^523^556^[ADD] if  ( pos == -1 )  { throw new FlagUsageException ( "Expected module wrapper to have " + "<name>:<wrapper> format: " + spec ) ; }^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^throw new FlagUsageException (  (  (  (  ( "Module '" + name )  + "' depends on unknown module '" )  + dep )  + "'. Be sure to list modules in dependency order." )  )  ;^539^540^^^^523^556^[REPLACE] throw new FlagUsageException ( "Expected module wrapper to have " + "<name>:<wrapper> format: " + spec ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( wrappers .values (  )   )  {^545^^^^^523^556^[REPLACE] if  ( !wrappers.containsKey ( name )  )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[ADD]^^546^^^^^523^556^[ADD] throw new FlagUsageException  (" ")  ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( wrapper.equals ( "%s" )  )  {^549^^^^^523^556^[REPLACE] if  ( !wrapper.contains ( "%s" )  )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^int pos = wrapper.indexOf ( ':' ) ;^537^^^^^523^556^[REPLACE] int pos = spec.indexOf ( ':' ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^String name = spec.substring ( 4, runs ) ;^544^^^^^523^556^[REPLACE] String name = spec.substring ( 0, pos ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[ADD]^^548^^^^^523^556^[ADD] String wrapper = spec.substring ( pos + 1 ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^return ;^550^551^^^^523^556^[REPLACE] throw new FlagUsageException ( "No %s placeholder in module wrapper: '" + wrapper + "'" ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^String dep  ;^534^^^^^523^556^[REPLACE] for  ( String spec : specs )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^String name = spec.substring ( 0L, pos ) ;^544^^^^^523^556^[REPLACE] String name = spec.substring ( 0, pos ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^String wrapper = spec.length (totalNumJsFiles  1 ) ;^548^^^^^523^556^[REPLACE] String wrapper = spec.substring ( pos + 1 ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^return ;^546^^^^^523^556^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^return wrappers;  ;^555^^^^^523^556^[REPLACE] return wrappers;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^int pos = prefix.indexOf ( codePlaceholder ) ;^564^^^^^563^593^[REPLACE] int pos = wrapper.indexOf ( codePlaceholder ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( pos  ==  -1 )  {^565^^^^^563^593^[REPLACE] if  ( pos != -1 )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^565^566^^568^569^563^593^[ADD] if  ( pos != -1 )  { String prefix = ""; if  ( pos > 0 )  { prefix = wrapper.substring ( 0, pos ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.print ( code ) ;^591^^^^^565^592^[REPLACE] out.println ( code ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( pos  ==  0 )  {^568^^^^^563^593^[REPLACE] if  ( pos > 0 )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^569^^^^^563^593^[ADD] prefix = wrapper.substring ( 0, pos ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( suffixStart == wrapper.length (  )  /  2 )  {^576^^^^^563^593^[REPLACE] if  ( suffixStart == wrapper.length (  )  )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.print ( wrapper.substring ( suffixStart )  ) ;^581^^^^^576^582^[REPLACE] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^wrapper.substring ( 0, pos )  ;^581^^^^^576^582^[REPLACE] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^581^^^^^576^582^[ADD] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.print ( code )  ;^579^^^^^563^593^[REPLACE] out.println (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( compiler == null && compiler.getSourceMap (  )  != null )  {^586^^^^^563^593^[REPLACE] if  ( compiler != null && compiler.getSourceMap (  )  != null )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler .getPropertyMap (  )  .setWrapperPrefix ( prefix ) ;^587^^^^^563^593^[REPLACE] compiler.getSourceMap (  ) .setWrapperPrefix ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^587^^^^^563^593^[ADD] compiler.getSourceMap (  ) .setWrapperPrefix ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^prefix = wrapper.substring ( 4, pos ) ;^569^^^^^563^593^[REPLACE] prefix = wrapper.substring ( 0, pos ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String basePath = ""  ;^566^^^^^563^593^[REPLACE] String prefix = "";^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int suffixStart = pos + codePlaceholder.length (  )  - 4;^575^^^^^563^593^[REPLACE] int suffixStart = pos + codePlaceholder.length (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( pos  <=  1 )  {^568^^^^^563^593^[REPLACE] if  ( pos > 0 )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^prefix = wrapper.substring ( 1, pos ) ;^569^^^^^563^593^[REPLACE] prefix = wrapper.substring ( 0, pos ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( suffixStart == prefix.length (  )  + 5 )  {^576^^^^^563^593^[REPLACE] if  ( suffixStart == wrapper.length (  )  )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( wrapper .substring ( pos , numJsFiles )   ) ;^581^^^^^576^582^[REPLACE] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( prefix.substring ( suffixStart )  ) ;^581^^^^^576^582^[REPLACE] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( compiler == this && compiler.getSourceMap (  )  != this )  {^586^^^^^563^593^[REPLACE] if  ( compiler != null && compiler.getSourceMap (  )  != null )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler.getSourceMap (  ) .setWrapperPrefix ( wrapper ) ;^587^^^^^563^593^[REPLACE] compiler.getSourceMap (  ) .setWrapperPrefix ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler.getPropertyMap (  ) .setWrapperPrefix ( prefix ) ;^587^^^^^563^593^[REPLACE] compiler.getSourceMap (  ) .setWrapperPrefix ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.stringCollector (  )  )  ) ;^617^^^^^616^661^[REPLACE] Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.get (  )  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^617^^^^^616^661^[ADD] Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.get (  )  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^CodedOutputStream outputStream = newInstance ( file )  ;^619^^^^^616^661^[REPLACE] List<JSSourceFile> externsList = createExterns (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSSourceFile[] externs = new JSSourceFile[externsList.add (  ) ];^620^^^^^616^661^[REPLACE] JSSourceFile[] externs = new JSSourceFile[externsList.size (  ) ];^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^externsList.add ( externs ) ;^621^^^^^616^661^[REPLACE] externsList.toArray ( externs ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^externsList.size (  )  ;^621^^^^^616^661^[REMOVE] ^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler  =  compiler ;^623^^^^^616^661^[REPLACE] compiler = createCompiler (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^CodedOutputStream outputStream = newInstance ( file )  ;^624^^^^^616^661^[REPLACE] B options = createOptions (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSModule m  ;^626^^^^^616^661^[REPLACE] JSModule[] modules = null;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^627^^^^^616^661^[ADD] Result result;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^openSourceMapStream ( options, path, null )  ;^629^^^^^616^661^[REPLACE] setRunOptions ( options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( inputCharset  &&  Charsets.UTF_8 )  {^635^^^^^616^661^[REPLACE] if  ( inputCharset == Charsets.UTF_8 )  {^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.jsOutputFile = get (  )  ;^638^^^^^635^639^[REPLACE] options.outputCharset = inputCharset;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.outputCharset =  Charsets.US_ASCII;^636^^^^^616^661^[REPLACE] options.outputCharset = Charsets.US_ASCII;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.jsOutputFile = get (  )  ;^638^^^^^616^661^[REPLACE] options.outputCharset = inputCharset;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^641^^^^^616^661^[REPLACE] if  ( !options.jsOutputFile.isEmpty (  )  )  {^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^out = new PrintStream ( options.jsOutputFile, inputCharset.name (  )  ) ;^641^642^643^^^616^661^[ADD] if  ( !options.jsOutputFile.isEmpty (  )  )  { out = new PrintStream ( options.jsOutputFile, inputCharset.name (  )  ) ; }^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^out =  new PrintStream ( null.jsOutputFile, inputCharset.name (  )  ) ;^642^^^^^616^661^[REPLACE] out = new PrintStream ( options.jsOutputFile, inputCharset.name (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^(  ( PrintStreamErrorManager )  compiler.getSourceMap (  )  ) .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^645^646^^^^616^661^[REPLACE] (  ( PrintStreamErrorManager )  compiler.getErrorManager (  )  ) .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^645^646^^^^616^661^[ADD] (  ( PrintStreamErrorManager )  compiler.getErrorManager (  )  ) .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^(  ( PrintStreamErrorManager )  compiler .getSourceMap (  )   ) .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^645^646^^^^616^661^[REPLACE] (  ( PrintStreamErrorManager )  compiler.getErrorManager (  )  ) .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^.setSummaryDetailLevel ( FLAG_summary_detail_level.stringCollector (  )  ) ;^646^^^^^616^661^[REPLACE] .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^646^^^^^616^661^[ADD] .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^List<String> jsFiles = FLAG_js.stringCollector (  ) ;^648^^^^^616^661^[REPLACE] List<String> jsFiles = FLAG_js.get (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String> jsFiles = get (  )  ;^649^^^^^616^661^[REPLACE] List<String> moduleSpecs = FLAG_module.get (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( moduleSpecs.isEmpty (  )  )  {^650^^^^^616^661^[REPLACE] if  ( !moduleSpecs.isEmpty (  )  )  {^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^result = compiler.compile ( externs, modules, options )  ;^657^^^^^650^658^[REPLACE] result = compiler.compile ( externs, inputs, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^654^^^^^650^658^[ADD] List<JSSourceFile> inputList = createSourceInputs ( jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSModule module = new JSModule ( name )  ;^655^^^^^650^658^[REPLACE] JSSourceFile[] inputs = new JSSourceFile[inputList.size (  ) ];^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^651^^^^^616^661^[ADD] modules = createJsModules ( moduleSpecs, jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^result = compiler.compile ( externs, inputs, options )  ;^652^^^^^616^661^[REPLACE] result = compiler.compile ( externs, modules, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^modules =  createJsModules ( this, jsFiles ) ;^651^^^^^616^661^[REPLACE] modules = createJsModules ( moduleSpecs, jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^result = compiler.compile ( externs, modules, options )  ;^657^^^^^616^661^[REPLACE] result = compiler.compile ( externs, inputs, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^List<JSSourceFile> inputList = createSourceInputs ( null ) ;^654^^^^^616^661^[REPLACE] List<JSSourceFile> inputList = createSourceInputs ( jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSSourceFile[] inputs = new JSSourceFile[inputList.add (  ) ];^655^^^^^616^661^[REPLACE] JSSourceFile[] inputs = new JSSourceFile[inputList.size (  ) ];^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return processResults  (  result, modules, options  )  ;  ;^660^^^^^616^661^[REPLACE] return processResults ( result, modules, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^668^^^^^667^764^[REPLACE] if  ( FLAG_compute_phase_ordering.get (  )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 3;^669^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 4;^669^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  FLAG_third_party.get  (    )    )   {  ;^672^^^^^667^764^[REPLACE] if  ( FLAG_print_ast.get (  )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getRoot (  )  != this  )  {^673^^^^^667^764^[REPLACE] if  ( compiler.getRoot (  )  == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0L;^679^^^^^673^680^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^ControlFlowGraph<Node> cfg = compiler.toBytes (  ) ;^676^^^^^673^680^[REPLACE] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1 % 3;^674^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return;  ;^674^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 4;^679^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^ControlFlowGraph<Node> cfg = compiler.toBytes (  ) ;^676^^^^^667^764^[REPLACE] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getRoot (  )  != null )  {^673^^^^^667^764^[REPLACE] if  ( compiler.getRoot (  )  == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0 - 2;^679^^^^^673^680^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^ControlFlowGraph<Node> cfg = compiler .toBytes (  )  ;^676^^^^^673^680^[REPLACE] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1L;^674^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return;  ;^679^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^DotFormatter.appendDot ( compiler.getRoot (  ) , cfg, out ) ;^676^677^^^^667^764^[ADD] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ; DotFormatter.appendDot ( compiler.getRoot (  ) , cfg, out ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  FLAG_print_ast.get  (    )    )   {  ;^683^^^^^667^764^[REPLACE] if  ( FLAG_print_tree.get (  )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getRoot (  )  != null )  {^684^^^^^667^764^[REPLACE] if  ( compiler.getRoot (  )  == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^out.println ( "Code contains errors; no tree was generated." ) ;return 1;compiler.getRoot (  ) .appendStringTree ( out ) ;^684^685^686^687^688^667^764^[ADD] if  ( compiler.getRoot (  )  == null )  { out.println ( "Code contains errors; no tree was generated." ) ; return 1; } else { compiler.getRoot (  ) .appendStringTree ( out ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0L;^690^^^^^684^691^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 3;^686^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return;  ;^686^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return;  ;^690^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 2;^690^^^^^684^691^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0;^686^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0L;^690^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^694^^^^^667^764^[REPLACE] if  ( result.success )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( modules != null )  {^695^^^^^667^764^[REPLACE] if  ( modules == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  )  {^712^^^^^695^748^[REPLACE] if  ( !shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^712^713^714^^^695^748^[ADD] if  ( !shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, false ) ;^713^^^^^695^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  !shouldGenerateMapPerModule  (  options  )    )   {  ;^717^^^^^695^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut =  openSourceMapStream ( null, moduleFilePrefix, m.getName (  )  ) ;^718^719^^^^695^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^726^^^^^695^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  )  ;^727^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .reset (  ) ;^727^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^733^^^^^695^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( out, outputFile.getName (  )  )  ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^734^^^^^695^748^[ADD] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( m.getName (  )  )  ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  (  mapOut == true )  {^739^^^^^695^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = false;^741^^^^^695^748^[REPLACE] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  (ps == null )  {^745^^^^^695^748^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^out.close (  )  ;^746^^^^^695^748^[REPLACE] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  !shouldGenerateMapPerModule  (  options  )    )   {  ;^717^^^^^701^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^717^718^719^720^^701^748^[ADD] if  ( shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut =  openSourceMapStream ( null, moduleFilePrefix, m.getName (  )  ) ;^718^719^^^^701^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == false )  {^726^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .save (  ) ;^727^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( compiler.getVariableMap (  )  )  ;^727^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == true )  {^733^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( mapOut, m .parse ( this )   ) ;^734^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^734^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( m.getName (  )  )  ;^734^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^734^^^^^701^748^[ADD] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  (  ps == false )  {^739^^^^^701^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^741^^^^^701^748^[ADD] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = true;^741^^^^^701^748^[REPLACE] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix  m.getName (  )   ".js" )  ) ;^722^723^724^^^701^748^[REPLACE] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, true ) ;^713^^^^^701^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^String> moduleSpecs = get (  )  ;^702^^^^^701^748^[REPLACE] String moduleFilePrefix = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^704^705^^^^701^748^[ADD] Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.get (  ) , modules ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream mapOut = false;^710^^^^^701^748^[REPLACE] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^JSSourceFile input  ;^716^^^^^701^748^[REPLACE] for  ( JSModule m : modules )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^writeOutput ( out, compiler, compiler.getSourceMap (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^696^697^^^^667^764^[REPLACE] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^writeOutput ( out, compiler, compiler .toSource (  )  , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^696^697^^^^667^764^[REPLACE] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^696^697^^^^667^764^[ADD] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper  .get (  )  , FLAG_output_wrapper_marker^696^697^^^^667^764^[REPLACE] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^.get (  )  , FLAG_output_wrapper_marker^697^^^^^667^764^[REPLACE] .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^697^^^^^667^764^[ADD] .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^openExternExportsStream ( options, options.jsOutputFile )  ;^700^^^^^667^764^[REPLACE] outputSourceMap ( options, options.jsOutputFile ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^700^^^^^667^764^[ADD] outputSourceMap ( options, options.jsOutputFile ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  shouldGenerateMapPerModule  (  options  )    )   {  ;^712^^^^^667^764^[REPLACE] if  ( !shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^712^713^714^^^667^764^[ADD] if  ( !shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  )  ;^713^^^^^667^764^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  !shouldGenerateMapPerModule  (  options  )    )   {  ;^717^^^^^667^764^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^718^719^^^^667^764^[ADD] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^726^^^^^667^764^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  )  ;^727^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .reset (  ) ;^727^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^733^^^^^667^764^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^733^734^735^^^667^764^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( out, outputFile.getName (  )  )  ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^734^^^^^667^764^[ADD] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( compiler.getVariableMap (  )  )  ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( m.getName (  )  )  ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  && mapOut == null )  {^739^^^^^667^764^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^741^^^^^667^764^[ADD] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( mapOut == true )  {^745^^^^^667^764^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^out.close (  )  ;^746^^^^^667^764^[REPLACE] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.externExportsPath == this )  {^751^^^^^667^764^[REPLACE] if  ( options.externExportsPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^752^753^^^^667^764^[ADD] PrintStream eeOut = openExternExportsStream ( options, options.jsOutputFile ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^726^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .reset (  ) ;^727^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == this  )  {^733^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( ps, m.getName (  )  ) ;^734^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  && ps == null )  {^739^^^^^701^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix  m .parse ( this )    ".js" )  ) ;^722^723^724^^^701^748^[REPLACE] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  )  ;^713^^^^^701^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^718^719^^^^701^748^[ADD] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^String moduleFilePrefix = FLAG_module_output_path_prefix.stringCollector (  ) ;^702^^^^^701^748^[REPLACE] String moduleFilePrefix = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper .get (  )  , modules ) ;^704^705^^^^701^748^[REPLACE] Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.get (  ) , modules ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream mapOut = this;^710^^^^^701^748^[REPLACE] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^722^723^724^^^701^748^[ADD] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, true ) ;^713^^^^^695^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^726^^^^^695^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^compiler.getSourceMap (  ) .reset (  ) ;^726^727^728^^^695^748^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .reset (  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  )  .writeTo ( null )  ;^727^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( compiler.getVariableMap (  )  )  ;^727^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^733^^^^^695^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( compiler.getVariableMap (  )  )  ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  ) {^739^^^^^695^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( mapOut == true )  {^745^^^^^695^748^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^mapOut.close (  ) ;^745^746^747^^^695^748^[ADD] if  ( mapOut != null )  { mapOut.close (  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^746^^^^^695^748^[ADD] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^716^717^718^719^720^701^748^[ADD] for  ( JSModule m : modules )  { if  ( shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^726^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler .getPropertyMap (  )  .reset (  ) ;^727^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^727^^^^^701^748^[ADD] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^733^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^733^734^735^^^701^748^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( out, outputFile.getName (  )  )  ;^734^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^( compiler.getVariableMap (  )  )  ;^734^^^^^701^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  (  mapOut == this )  {^739^^^^^701^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^mapOut.close (  ) ;mapOut = null;^739^740^741^742^^701^748^[ADD] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  { mapOut.close (  ) ; mapOut = null; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, false ) ;^713^^^^^701^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = this;^741^^^^^701^748^[REPLACE] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^702^^^^^701^748^[ADD] String moduleFilePrefix = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^.stringCollector (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^697^^^^^667^764^[REPLACE] .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  )  {^712^^^^^667^764^[REPLACE] if  ( !shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut =  openSourceMapStream ( null, moduleFilePrefix, m.getName (  )  ) ;^718^719^^^^667^764^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == this )  {^726^^^^^667^764^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .save (  ) ;^727^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == this )  {^733^^^^^667^764^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler .getPropertyMap (  )  .appendTo ( mapOut, m.getName (  )  ) ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^739^740^741^742^^667^764^[ADD] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  { mapOut.close (  ) ; mapOut = null; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( ps == null )  {^745^^^^^667^764^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^mapOut.close (  ) ;^745^746^747^^^667^764^[ADD] if  ( mapOut != null )  { mapOut.close (  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut .PrintStream ( moduleFilePrefix , moduleFilePrefix )  ;^746^^^^^667^764^[REPLACE] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.externExportsPath == null )  {^751^^^^^667^764^[REPLACE] if  ( options.externExportsPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == this )  {^726^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^726^727^728^^^701^748^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .reset (  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == false )  {^733^^^^^701^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  ) {^739^^^^^701^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix  m .parse ( true )    ".js" )  ) ;^722^723^724^^^701^748^[REPLACE] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^713^^^^^701^748^[ADD] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream mapOut = true;^710^^^^^701^748^[REPLACE] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^752^753^^^^701^748^[ADD] PrintStream eeOut = openExternExportsStream ( options, options.jsOutputFile ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return Math .max ( lastStartTime , lastStartTime )  ;^763^^^^^667^764^[REPLACE] return Math.min ( result.errors.length, 0x7f ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath != null )  {^837^^^^^836^858^[REPLACE] if  ( options.sourceMapOutputPath == null )  {^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return true;^838^^^^^836^858^[REPLACE] return null;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return this;^838^^^^^836^858^[REPLACE] return null;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String exPath = options.externExportsPath  ;^841^^^^^836^858^[REPLACE] String sourceMapPath = options.sourceMapOutputPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( module == this )  {^844^^^^^836^858^[REPLACE] if  ( module != null )  {^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^sourceMapPath =  path.replace ( "%module%", module ) ;^845^^^^^836^858^[REPLACE] sourceMapPath = sourceMapPath.replace ( "%module%", module ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^845^^^^^836^858^[ADD] sourceMapPath = sourceMapPath.replace ( "%module%", module ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String mapPath = false;^848^^^^^836^858^[REPLACE] String mapPath = null;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  (  sourceMapPath.contains ( "\\" )  )  {^850^^^^^836^858^[REPLACE] if  ( sourceMapPath.contains ( "/" )  || sourceMapPath.contains ( "\\" )  )  {^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^854^^^^^850^855^[ADD] mapPath = outputFile.getParent (  )  + File.separatorChar + sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File file = new File ( outputFile )  ;^853^^^^^850^855^[REPLACE] File outputFile = new File ( path ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^851^^^^^836^858^[ADD] mapPath = sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^mapPath =  path;^851^^^^^836^858^[REPLACE] mapPath = sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^exPath =  (  ( outputFile.getParent (  )  )  +  ( separatorChar )  )  + exPath  ;^854^^^^^836^858^[REPLACE] mapPath = outputFile.getParent (  )  + File.separatorChar + sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File outputFile = new File ( sourceMapPath ) ;^853^^^^^836^858^[REPLACE] File outputFile = new File ( path ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return  new PrintStream ( new FileOutputStream ( exPath )  )   ) ;^857^^^^^836^858^[REPLACE] return new PrintStream ( new FileOutputStream ( mapPath )  ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^887^^^^^886^913^[ADD] String basePath = "";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^889^^^^^886^913^[REPLACE] if  ( outputFile.equals ( "" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^904^^^^^889^910^[REPLACE] if  ( outputFileName.endsWith ( ".js" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^904^905^906^907^^889^910^[ADD] if  ( outputFileName.endsWith ( ".js" )  )  { outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ; }^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0 , outputFileName.length (  )  *  2 - 3 ) ;^905^906^^^^889^910^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0, outputFileName.size (  )  - 3 ) ;^905^906^^^^889^910^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath = file.getParent (  )   File.separatorChar  outputFile;^909^^^^^889^910^[REPLACE] basePath = file.getParent (  )  + File.separatorChar + outputFileName;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File outputFile = new File ( path )  ;^899^^^^^889^910^[REPLACE] File file = new File ( outputFile ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^901^^^^^889^910^[ADD] String outputFileName = file.getName (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !FLAG_module_output_path_prefix.get (  ) .save ( "" )  )  {^892^^^^^886^913^[REPLACE] if  ( !FLAG_module_output_path_prefix.get (  ) .equals ( "" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^892^893^894^895^896^886^913^[ADD] if  ( !FLAG_module_output_path_prefix.get (  ) .equals ( "" )  )  { basePath = FLAG_module_output_path_prefix.get (  ) ; } else { basePath = "jscompiler"; }^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  = null ;^895^^^^^892^896^[REPLACE] basePath = "jscompiler";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^893^^^^^886^913^[ADD] basePath = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.jsOutputFile = get (  )  ;^893^^^^^886^913^[REPLACE] basePath = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  =  basePath ;^895^^^^^886^913^[REPLACE] basePath = "jscompiler";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !FLAG_module_output_path_prefix.stringCollector (  ) .equals ( "" )  )  {^892^^^^^886^913^[REPLACE] if  ( !FLAG_module_output_path_prefix.get (  ) .equals ( "" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath ;^895^^^^^892^896^[REPLACE] basePath = "jscompiler";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^904^^^^^886^913^[REPLACE] if  ( outputFileName.endsWith ( ".js" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0 , outputFileName.length (  )  - 4 - 3 ) ;^905^906^^^^886^913^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  =  basePath ;^893^^^^^886^913^[REPLACE] basePath = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  = null ;^895^^^^^886^913^[REPLACE] basePath = "jscompiler";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0 , outputFileName.length (  )  + 5 - 3 ) ;^905^906^^^^886^913^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^exPath =  (  ( outputFile.getParent (  )  )  +  ( separatorChar )  )  + exPath  ;^909^^^^^886^913^[REPLACE] basePath = file.getParent (  )  + File.separatorChar + outputFileName;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File file = new File ( outputFileName ) ;^899^^^^^886^913^[REPLACE] File file = new File ( outputFile ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String outputFileName = file.getParent (  ) ;^901^^^^^886^913^[REPLACE] String outputFileName = file.getName (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return outputFileName;^912^^^^^886^913^[REPLACE] return basePath;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^922^923^^^^920^978^[ADD] String propertyMapOutputPath = null; String variableMapOutputPath = null;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String functionInformationMapOutputPath = null  ;^923^^^^^920^978^[REPLACE] String variableMapOutputPath = null;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String functionInformationMapOutputPath = false;^924^^^^^920^978^[REPLACE] String functionInformationMapOutputPath = null;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if   (  options.externExportsPath != null  )   {  ;^927^^^^^920^978^[REPLACE] if  ( FLAG_create_name_map_files.get (  )  )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^String basePath = getMapPath ( options.jsOutputFile ) ;propertyMapOutputPath = basePath + "_props_map.out";variableMapOutputPath = basePath + "_vars_map.out";^927^928^^930^931^920^978^[ADD] if  ( FLAG_create_name_map_files.get (  )  )  { String basePath = getMapPath ( options.jsOutputFile ) ; propertyMapOutputPath = basePath + "_props_map.out"; variableMapOutputPath = basePath + "_vars_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^variableMapOutputPath = basePath + "_vars_map.out"  ;^930^^^^^920^978^[REPLACE] propertyMapOutputPath = basePath + "_props_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^propertyMapOutputPath = basePath + "_props_map.out"  ;^931^^^^^920^978^[REPLACE] variableMapOutputPath = basePath + "_vars_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^functionInformationMapOutputPath = variableMapOutputPath  variableMapOutputPath;^932^^^^^920^978^[REPLACE] functionInformationMapOutputPath = basePath + "_functions_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^CodedOutputStream outputStream = newInstance ( file )  ;^928^^^^^920^978^[REPLACE] String basePath = getMapPath ( options.jsOutputFile ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^propertyMapOutputPath =variableMapOutputPath  "_props_map.out";^930^^^^^920^978^[REPLACE] propertyMapOutputPath = basePath + "_props_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^932^933^^^^920^978^[ADD] functionInformationMapOutputPath = basePath + "_functions_map.out"; }^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( FLAG_variable_map_output_file.get (  ) .equals ( "" )  )  {^936^^^^^920^978^[REPLACE] if  ( !FLAG_variable_map_output_file.get (  ) .equals ( "" )  )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( variableMapOutputPath == null )  {^937^^^^^920^978^[REPLACE] if  ( variableMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return ;^938^939^^^^920^978^[REPLACE] throw new FlagUsageException ( "The flags variable_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.jsOutputFile = get (  )  ;^942^^^^^920^978^[REPLACE] variableMapOutputPath = FLAG_variable_map_output_file.get (  ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  (propertyMapOutputPath == null )  {^937^^^^^920^978^[REPLACE] if  ( variableMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^938^939^^^^920^978^[ADD] throw new FlagUsageException ( "The flags variable_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( FLAG_property_map_output_file.get (  ) .equals ( "" )  )  {^945^^^^^920^978^[REPLACE] if  ( !FLAG_property_map_output_file.get (  ) .equals ( "" )  )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^945^946^947^948^949^920^978^[ADD] if  ( !FLAG_property_map_output_file.get (  ) .equals ( "" )  )  { if  ( propertyMapOutputPath != null )  { throw new FlagUsageException ( "The flags property_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ; }^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( variableMapOutputPath == null )  {^946^^^^^920^978^[REPLACE] if  ( propertyMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return ;^947^948^^^^920^978^[REPLACE] throw new FlagUsageException ( "The flags property_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.jsOutputFile = get (  )  ;^951^^^^^920^978^[REPLACE] propertyMapOutputPath = FLAG_property_map_output_file.get (  ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  (variableMapOutputPath == false )  {^946^^^^^920^978^[REPLACE] if  ( propertyMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^951^^^^^920^978^[ADD] propertyMapOutputPath = FLAG_property_map_output_file.get (  ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^947^948^^^^920^978^[ADD] throw new FlagUsageException ( "The flags property_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  (propertyMapOutputPath == null )  {^955^^^^^920^978^[REPLACE] if  ( variableMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.getVariableMap (  )  == null )  {^956^^^^^920^978^[REPLACE] if  ( compiler.getVariableMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getVariableMap (  ) .save ( propertyMapOutputPath ) ;^957^^^^^920^978^[REPLACE] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^( compiler.getVariableMap (  )  )  ;^957^^^^^920^978^[REPLACE] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^956^957^958^^^920^978^[ADD] if  ( compiler.getVariableMap (  )  != null )  { compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ; }^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getPropertyMap (  ) .save ( propertyMapOutputPath )  ;^957^^^^^920^978^[REPLACE] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler .getSourceMap (  )  .save ( variableMapOutputPath ) ;^957^^^^^920^978^[REPLACE] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^957^^^^^920^978^[ADD] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( propertyMapOutputPath == null )  {^961^^^^^920^978^[REPLACE] if  ( propertyMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.getPropertyMap (  )  == null )  {^962^^^^^920^978^[REPLACE] if  ( compiler.getPropertyMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getPropertyMap (  ) .save ( variableMapOutputPath ) ;^963^^^^^920^978^[REPLACE] compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getSourceMap (  ) .save ( propertyMapOutputPath ) ;^963^^^^^920^978^[REPLACE] compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^963^^^^^920^978^[ADD] compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler .getSourceMap (  )   == true )  {^962^^^^^920^978^[REPLACE] if  ( compiler.getPropertyMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getVariableMap (  )  ;^963^^^^^920^978^[REPLACE] compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( functionInformationMapOutputPath == null )  {^967^^^^^920^978^[REPLACE] if  ( functionInformationMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^967^968^969^970^971^920^978^[ADD] if  ( functionInformationMapOutputPath != null )  { if  ( compiler.getFunctionalInformationMap (  )  != null )  { FileOutputStream file = new FileOutputStream ( functionInformationMapOutputPath ) ; CodedOutputStream outputStream = CodedOutputStream.newInstance ( file ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.getFunctionalInformationMap (  )  == this )  {^968^^^^^920^978^[REPLACE] if  ( compiler.getFunctionalInformationMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^FileOutputStream file = new FileOutputStream ( variableMapOutputPath ) ;^969^970^^^^920^978^[REPLACE] FileOutputStream file = new FileOutputStream ( functionInformationMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^CodedOutputStream outputStream = CodedOutputStream .flush (  )  ;^971^^^^^920^978^[REPLACE] CodedOutputStream outputStream = CodedOutputStream.newInstance ( file ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String dep  ;^971^^^^^920^978^[REPLACE] CodedOutputStream outputStream = CodedOutputStream.newInstance ( file ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.getFunctionalInformationMap (  )  == false )  {^968^^^^^920^978^[REPLACE] if  ( compiler.getFunctionalInformationMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( defName.length (  )  %  0 .5  > 0  )  {^996^^^^^990^1035^[REPLACE] if  ( defName.length (  )  > 0 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( assignment.length /  2 == 0  )  {^997^^^^^990^1035^[REPLACE] if  ( assignment.length == 1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if   (  defValue.equals  (  "false"  )    )   {  ;^1003^^^^^997^1029^[REPLACE] if  ( defValue.equals ( "true" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if   (  defValue.equals  (  "true"  )    )   {  ;^1006^^^^^997^1029^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.length (  )  + 5 > 0  ) {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^Double.parseDouble ( defValue )  ) ;continue;^1021^1022^1023^1024^1025^1009^1028^[ADD] try { options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ; continue; } catch  ( NumberFormatException e )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Double.parseDouble ( override )  ) ;^1023^^^^^1009^1028^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToStringLiteral ( defName, maybeStringVal ) ;continue;^1016^1017^1018^1019^^1009^1028^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, maybeStringVal ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1014^1015^^^^1009^1028^[ADD] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( override.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, override ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^Double.parseDouble ( defValue )  ) ;continue;^1021^1022^1023^1024^1025^997^1029^[ADD] try { options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ; continue; } catch  ( NumberFormatException e )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Double.parseDouble ( override )  ) ;^1023^^^^^997^1029^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^parseInt ( parts[1] )  ;^1023^^^^^997^1029^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  *  0.5  - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, true ) ;^1007^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.size (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.size (  )  - 1 )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^1024^^^^1009^1028^[ADD] Double.parseDouble ( defValue )  ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, override ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   !=  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( override, maybeStringVal ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1022^1023^^^^997^1029^[ADD] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  *  0.5  - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, maybeStringVal )  ;^1004^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.equals ( "false" )  )  {^1006^^^^^997^1029^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}   continue;^1006^1007^1008^1009^1010^997^1029^[ADD] else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ; continue; } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' &&^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  - 2 > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 2 - 0  )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal .endsWith ( override )    &&  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  - 4 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToStringLiteral ( defName, maybeStringVal ) ;continue;^1016^1017^1018^1019^^997^1029^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, true )  ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^options.setDefineToBooleanLiteral ( defName, true )  ;^1017^^^^^997^1029^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToBooleanLiteral ( defName , false )  ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.split ( 1, defValue.length (  )  + 4 - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, true ) ;^1007^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^options.setDefineToStringLiteral ( defName, maybeStringVal )  ;^1007^^^^^997^1029^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue .appendTo ( err )   - 2 > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( override, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1022^1023^^^^1009^1028^[ADD] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  (   -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( override, maybeStringVal ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 4 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   && totalNumJsFiles )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, maybeStringVal ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( override, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defName = assignment[0]  ;^1001^^^^^997^1029^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  + 3 - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, false ) ;^998^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^options.setDefineToStringLiteral ( defName, maybeStringVal )  ;^998^^^^^990^1035^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if   (  defValue.equals  (  "false"  )    )   {  ;^1003^^^^^990^1035^[REPLACE] if  ( defValue.equals ( "true" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if   (  defValue.equals  (  "true"  )    )   {  ;^1006^^^^^990^1035^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}   options.setDefineToBooleanLiteral ( defName, false ) ;continue;^1006^1007^1008^1009^1010^990^1035^[ADD] else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ; continue; } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' &&^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1025^1026^1027^^^1009^1028^[ADD] catch  ( NumberFormatException e )  {  }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   &&  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, maybeStringVal ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   &&  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1016^1017^1018^1019^^990^1035^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defValue , this )  ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^Double.parseDouble ( defValue )  ) ;continue;^1021^1022^1023^1024^1025^990^1035^[ADD] try { options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ; continue; } catch  ( NumberFormatException e )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^openSourceMapStream ( options, path, null )  ;^1023^^^^^990^1035^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^parseInt ( parts[1] )  ;^1023^^^^^990^1035^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  - 5 - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1025^1026^1027^^^990^1035^[ADD] catch  ( NumberFormatException e )  {  }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, true ) ;^1007^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}^1009^1010^1011^^^990^1035^[ADD] else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ||  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, override ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.length (  )  *  0.5  - 0  ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ) {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, true )  ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^1018^^^^990^1035^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Double.parseDouble ( override )  ) ;^1023^^^^^990^1035^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, false ) ;^1004^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToBooleanLiteral ( override , true )  ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^^^^^1009^1028^[ADD] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^options.setDefineToBooleanLiteral ( defName, true )  ;^1017^^^^^1009^1028^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 0 , defValue.size (  )  - 0  ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, maybeStringVal ) ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( override, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.split ( 1, defValue.length (  )  - 1 - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, true ) ;^1007^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1007^1008^^^^990^1035^[ADD] options.setDefineToBooleanLiteral ( defName, false ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  + 5 > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  + 5 - 1 )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  *  0.5  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defName , this )  ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[1L];^1001^^^^^990^1035^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.length (  )  - 3 - 0  ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( assignment.length *  0.5  == 0  )  {^997^^^^^990^1035^[REPLACE] if  ( assignment.length == 1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( override.equals ( "true" )  )  {^1003^^^^^997^1029^[REPLACE] if  ( defValue.equals ( "true" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1003^1004^1005^1006^1007^997^1029^[ADD] if  ( defValue.equals ( "true" )  )  { options.setDefineToBooleanLiteral ( defName, true ) ; continue; } else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1006^^^^^997^1029^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^continue;^1023^1024^^^^1009^1028^[ADD] Double.parseDouble ( defValue )  ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1014^1015^^^^997^1029^[ADD] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  - 5 > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 5 - 0  )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, true )  ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  + 2 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, maybeStringVal ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^1024^^^^997^1029^[ADD] Double.parseDouble ( defValue )  ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  %  2 - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1025^1026^1027^^^997^1029^[ADD] catch  ( NumberFormatException e )  {  }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, false ) ;^1004^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}^1009^1010^1011^^^997^1029^[ADD] else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  + 2 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   || totalNumJsFiles )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, override ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue .substring ( pos )  ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, maybeStringVal )  ;^1007^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.charAt (  )  + 2 > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  + 2 - 1 )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   &&  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( override , null )  ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal .endsWith ( override )    ) {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1001^^^^^997^1029^[ADD] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.length (  )  %  0.5  - 0  ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.length (  )  - 3 > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 3 - 0  )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.length (  )  %  2 - 0  ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToStringLiteral ( defName, maybeStringVal ) ;continue;^1016^1017^1018^1019^^990^1035^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defValue , true )  ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToBooleanLiteral ( defValue , true )  ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1014^1015^^^^990^1035^[ADD] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1007^^^^^990^1035^[ADD] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   || suffixStart )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1016^1017^1018^1019^^1009^1028^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^1018^^^^1009^1028^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( override, maybeStringVal ) ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^continue;^1017^1018^^^^990^1035^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1022^1023^^^^990^1035^[ADD] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^continue;^1023^1024^^^^990^1035^[ADD] Double.parseDouble ( defValue )  ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, false ) ;^1004^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^^^^^1009^1028^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  /  2 - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.length (  )  + 4 > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  + 4 - 1 )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ||  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( defName .appendTo ( ps )   *  0.5  > 0 )  {^996^^^^^990^1035^[REPLACE] if  ( defName.length (  )  > 0 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^996^997^998^999^^990^1035^[ADD] if  ( defName.length (  )  > 0 )  { if  ( assignment.length == 1 )  { options.setDefineToBooleanLiteral ( defName, true ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( assignment.length %  2 == 1 )  {^997^^^^^990^1035^[REPLACE] if  ( assignment.length == 1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}   options.setDefineToBooleanLiteral ( defName, false ) ;continue;^1006^1007^1008^1009^1010^997^1029^[ADD] else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ; continue; } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' &&^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.length (  )  - 2 - 0  ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   &&  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.size (  )  > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.size (  )  - 0  )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  - 5 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^^^^^997^1029^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^parseInt ( parts[1] )  ;^1023^^^^^1009^1028^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ||  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[1 * 4];^1001^^^^^997^1029^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defName , this )  ;^998^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToBooleanLiteral ( defName, true ) ;continue;options.setDefineToBooleanLiteral ( defName, false ) ;^1003^1004^1005^1006^1007^990^1035^[ADD] if  ( defValue.equals ( "true" )  )  { options.setDefineToBooleanLiteral ( defName, true ) ; continue; } else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1006^^^^^990^1035^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( override.size (  )  > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.size (  )  - 0  )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal .endsWith ( defName )    ) {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  *  2 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   != suffixStart )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^^^^^990^1035^[ADD] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, maybeStringVal )  ;^1007^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   && suffixStart )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  *  0.5  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, maybeStringVal )  ;^1004^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue .substring ( suffixStart )  ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^^^^^990^1035^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^1024^^^^990^1035^[ADD] Double.parseDouble ( defValue )  ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  /  2 - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, true ) ;^1007^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  - 5 > 0  ) {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[1 / 1];^1001^^^^^990^1035^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.charAt (  )  /  2 - 0  ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( assignment.length %  2 == 0  )  {^997^^^^^990^1035^[REPLACE] if  ( assignment.length == 1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  + 3 > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  + 3 - 0  )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( override.indexOf ( '\'' )   &&  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 3 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^continue;^1017^1018^^^^997^1029^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 0 , defValue.length (  )  - 3 - 0  ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.length (  )  - 1 > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 - 1 )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.split ( 1, defValue.length (  )  + 4 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ) {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  - 3 - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^continue;^1007^1008^^^^997^1029^[ADD] options.setDefineToBooleanLiteral ( defName, false ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  /  0.5  > 1 ) {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   !=  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 0 , defValue.length (  )  - 3 - 0  ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[0];^1001^^^^^997^1029^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, false ) ;^998^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^998^^^^^990^1035^[ADD] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.equals ( "false" )  )  {^1006^^^^^990^1035^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.length (  )  %  0.5  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  %  0.5  - 1 )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ) {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  + 3 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( override.indexOf ( '\'' )   ) {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToBooleanLiteral ( override , true )  ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  %  2 - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.length (  )  %  0.5  > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  %  0.5  - 0  )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   ||  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( override , null )  ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^options.setDefineToBooleanLiteral ( defName, true )  ;^1017^^^^^990^1035^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  + 4 - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal .endsWith ( maybeStringVal )    ) {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   || totalNumJsFiles )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  (   -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, override ) ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^993^994^^^^990^1035^[ADD] String[] assignment = override.split ( "=", 2 ) ; String defName = assignment[0];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defName = assignment[0 - 4];^994^^^^^990^1035^[REPLACE] String defName = assignment[0];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defName = assignment[0]  ;^1001^^^^^990^1035^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.length (  )  /  0.5  - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return ;^1032^1033^^^^990^1035^[REPLACE] throw new RuntimeException ( "--define flag syntax invalid: " + override ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String dep  ;^992^^^^^990^1035^[REPLACE] for  ( String override : definitions )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String[] assignment = maybeStringVal.substring ( "=", 2 ) ;^993^^^^^990^1035^[REPLACE] String[] assignment = override.split ( "=", 2 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defName = assignment[0 * 4];^994^^^^^990^1035^[REPLACE] String defName = assignment[0];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[2];^1001^^^^^990^1035^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.split ( 1, defValue.length (  )  *  0.5  - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^private static final long serialVersionUID  = null ;^356^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] FlagUsageException   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^private  short  bestRunTime = Long.MAX_VALUE;^1038^^^^^^^[REPLACE] private long bestRunTime = Long.MAX_VALUE;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
[REPLACE]^private long worstRunTime  = null ;^1039^^^^^^^[REPLACE] private long worstRunTime = Long.MIN_VALUE;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
[REPLACE]^private long lastStartTime  = null ;^1040^^^^^^^[REPLACE] private long lastStartTime = 0;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
[REPLACE]^private List<List<String>> loopedPassesInBestRun  = null ;^1041^^^^^^^[REPLACE] private List<List<String>> loopedPassesInBestRun = null;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
