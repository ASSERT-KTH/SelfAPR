[REPLACE]^private  AbstractCompiler compiler;^47^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] AnalyzeNameReferences PropagateReferences NameInfo  
[REPLACE]^private boolean referenced = true;^98^^^^^^^[REPLACE] private boolean referenced = false;^ [CLASS] AnalyzeNameReferences PropagateReferences NameInfo  
[REPLACE]^private JSModule deepestCommonModuleRef ;^99^^^^^^^[REPLACE] private JSModule deepestCommonModuleRef = null;^ [CLASS] AnalyzeNameReferences PropagateReferences NameInfo  
[ADD]^^121^^^^^120^143^[ADD] boolean hasChanged = false;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if   (  info == null  )   {  ;^122^^^^^120^143^[REPLACE] if  ( !referenced )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^referenced = true;hasChanged = true;^122^123^124^125^^120^143^[ADD] if  ( !referenced )  { referenced = true; hasChanged = true; }^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^hasChanged = true;^123^124^^^^120^143^[ADD] referenced = true; hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^hasChanged = false;^124^^^^^120^143^[REPLACE] hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^referenced = false;^123^^^^^120^143^[REPLACE] referenced = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^124^^^^^120^143^[ADD] hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( moduleGraph == null )  {^127^^^^^120^143^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (startModule != null )  {^130^^^^^120^143^[REPLACE] if  ( deepestCommonModuleRef == null )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^deepestCommonModuleRef =  startModuleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, startModule ) ;^133^134^135^^^130^136^[REPLACE] deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^deepestCommonModuleRef =  startModule;^131^^^^^120^143^[REPLACE] deepestCommonModuleRef = module;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  (startModule  ==  deepestCommonModuleRef )  {^138^^^^^120^143^[REPLACE] if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^139^^^^^120^143^[ADD] hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^131^^^^^120^143^[ADD] deepestCommonModuleRef = module;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^133^134^135^^^120^143^[ADD] deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^JSModule startModule = startInfo.getDeepestCommonModuleRef (  )  ;^128^^^^^120^143^[REPLACE] JSModule originalDeepestCommon = deepestCommonModuleRef;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( deepestCommonModuleRef !=startModule )  {^130^^^^^120^143^[REPLACE] if  ( deepestCommonModuleRef == null )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^if  ( originalDeepestCommon  ==  deepestCommonModuleRef )  {^138^^^^^120^143^[REPLACE] if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^hasChanged = true;^138^139^140^^^120^143^[ADD] if  ( originalDeepestCommon != deepestCommonModuleRef )  { hasChanged = true; }^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^deepestCommonModuleRef =  startModuleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, startModule ) ;^133^134^135^^^120^143^[REPLACE] deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[ADD]^^128^^^^^120^143^[ADD] JSModule originalDeepestCommon = deepestCommonModuleRef;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^return true;^142^^^^^120^143^[REPLACE] return hasChanged;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] AnalyzeNameReferences PropagateReferences NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  startModule  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  hasChanged  referenced  true  [TYPE]  NameReferenceGraph graph  [TYPE]  JSModuleGraph moduleGraph 
[REPLACE]^private boolean referenced ;^98^^^^^^^[REPLACE] private boolean referenced = false;^[METHOD] traverseEdge [TYPE] boolean [PARAMETER] Name start Reference edge Name dest [CLASS] NameInfo   [TYPE]  NameInfo destInfo  startInfo  [TYPE]  boolean false  true  [TYPE]  Reference edge  [TYPE]  JSModule startModule  [TYPE]  Name dest  start 
[REPLACE]^private JSModule deepestCommonModuleRef ;^99^^^^^^^[REPLACE] private JSModule deepestCommonModuleRef = null;^[METHOD] traverseEdge [TYPE] boolean [PARAMETER] Name start Reference edge Name dest [CLASS] NameInfo   [TYPE]  NameInfo destInfo  startInfo  [TYPE]  boolean false  true  [TYPE]  Reference edge  [TYPE]  JSModule startModule  [TYPE]  Name dest  start 
[ADD]^^121^^^^^120^143^[ADD] boolean hasChanged = false;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^if  ( referenced )  {^122^^^^^120^143^[REPLACE] if  ( !referenced )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^referenced = true;hasChanged = true;^122^123^124^125^^120^143^[ADD] if  ( !referenced )  { referenced = true; hasChanged = true; }^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^^123^124^^^^120^143^[ADD] referenced = true; hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^^124^^^^^120^143^[ADD] hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^hasChanged = false;^124^^^^^120^143^[REPLACE] hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^if  ( moduleGraph == true )  {^127^^^^^120^143^[REPLACE] if  ( moduleGraph != null )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^^127^128^^130^131^120^143^[ADD] if  ( moduleGraph != null )  { JSModule originalDeepestCommon = deepestCommonModuleRef; if  ( deepestCommonModuleRef == null )  { deepestCommonModuleRef = module;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^if  ( deepestCommonModuleRef != null )  {^130^^^^^120^143^[REPLACE] if  ( deepestCommonModuleRef == null )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^deepestCommonModuleRef =  nullGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, null ) ;^133^134^135^^^130^136^[REPLACE] deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^deepestCommonModuleRef =  originalDeepestCommon;^131^^^^^120^143^[REPLACE] deepestCommonModuleRef = module;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^if  ( module  ==  deepestCommonModuleRef )  {^138^^^^^120^143^[REPLACE] if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^hasChanged = true;^138^139^140^^^120^143^[ADD] if  ( originalDeepestCommon != deepestCommonModuleRef )  { hasChanged = true; }^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^^139^^^^^120^143^[ADD] hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^deepestCommonModuleRef =  nullGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, null ) ;^133^134^135^^^120^143^[REPLACE] deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^hasChanged = false;^139^^^^^120^143^[REPLACE] hasChanged = true;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^boolean hasChanged = false  ;^128^^^^^120^143^[REPLACE] JSModule originalDeepestCommon = deepestCommonModuleRef;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^deepestCommonModuleRef =  originalDeepestCommonGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, originalDeepestCommon ) ;^133^134^135^^^130^136^[REPLACE] deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^if  (module  ==  deepestCommonModuleRef )  {^138^^^^^120^143^[REPLACE] if  ( originalDeepestCommon != deepestCommonModuleRef )  {^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^^133^134^135^^^120^143^[ADD] deepestCommonModuleRef = moduleGraph.getDeepestCommonDependencyInclusive ( deepestCommonModuleRef, module ) ;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[ADD]^^128^^^^^120^143^[ADD] JSModule originalDeepestCommon = deepestCommonModuleRef;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
[REPLACE]^return true;^142^^^^^120^143^[REPLACE] return hasChanged;^[METHOD] markReference [TYPE] boolean [PARAMETER] JSModule module [CLASS] NameInfo   [TYPE]  JSModule deepestCommonModuleRef  module  originalDeepestCommon  [TYPE]  boolean false  hasChanged  referenced  true 
