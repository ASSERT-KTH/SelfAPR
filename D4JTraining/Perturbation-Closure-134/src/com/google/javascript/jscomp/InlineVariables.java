[REPLACE]^private  Mode mode;^66^^^^^^^[REPLACE] private final Mode mode;^ [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  
[REPLACE]^private  boolean inlineAllStrings;^69^^^^^^^[REPLACE] private final boolean inlineAllStrings;^ [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  
[REPLACE]^private final IdentifyConstants identifyConstants  = null ;^71^^^^^^^[REPLACE] private final IdentifyConstants identifyConstants = new IdentifyConstants (  ) ;^ [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  
[REPLACE]^private  ReferenceCollection refInfo;^129^^^^^^^[REPLACE] private final ReferenceCollection refInfo;^ [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  
[REPLACE]^private final Set<Var> staleVars  = null ;^148^^^^^^^[REPLACE] private final Set<Var> staleVars = Sets.newHashSet (  ) ;^ [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  
[REPLACE]^Map<Node, AliasCandidate> aliasCandidates = Maps.newHashMap (  ) ;^155^^^^^^^[REPLACE] final Map<Node, AliasCandidate> aliasCandidates = Maps.newHashMap (  ) ;^ [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior  
[REPLACE]^if  ( LOCALS_ONLY  ==  Mode.CONSTANTS_ONLY )  {^170^^^^^169^189^[REPLACE] if  ( mode != Mode.CONSTANTS_ONLY )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( referenceInfo != null && referenceInfo.references.size (  )  - 2 >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^169^189^[REPLACE] if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REMOVE]^if  (  ( mode )  !=  ( CONSTANTS_ONLY )  )  {     for  ( Var> it = t.getScope (  ) .getVars (  ) ; it.hasNext (  ) ; )  {         Var v = it.next (  ) ;         ReferenceCollection referenceInfo = referenceMap.get ( v ) ;         if  (  (  (  ( referenceInfo != null )  &&  (  ( size (  )  )  >= 2 )  )  &&  ( referenceInfo.isWellDefined (  )  )  )  &&  ( referenceInfo.isAssignedOnce (  )  )  )  {             Reference init = referenceInfo.getInitializingReference (  ) ;             Node value = init.getAssignedValue (  ) ;             if  (  ( value != null )  &&  (  ( value.getType (  )  )  ==  ( NAME )  )  )  {                 aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;             }         }     } }^178^^^^^169^189^[REMOVE] ^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( value != true && value .getString (  )   != Token.NAME )  {^183^^^^^178^186^[REPLACE] if  ( value != null && value.getType (  )  == Token.NAME )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^183^184^185^^^178^186^[ADD] if  ( value != null && value.getType (  )  == Token.NAME )  { aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ; }^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^181^^^^^178^186^[REPLACE] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = init.getNameNode (  ) ;^182^^^^^178^186^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( value != null && value.getType (  )  != Token.NAME )  {^183^^^^^169^189^[REPLACE] if  ( value != null && value.getType (  )  == Token.NAME )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^183^184^185^^^169^189^[ADD] if  ( value != null && value.getType (  )  == Token.NAME )  { aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ; }^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^( isStringWorthInlining ( v, refInfo.references )  )  ;^184^^^^^169^189^[REPLACE] aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^184^^^^^169^189^[ADD] aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^for  ( Iterator<Var> it = t.getScope (  ) .replaceChild (  ) ; it.hasNext (  ) ; )  {^171^^^^^169^189^[REPLACE] for  ( Iterator<Var> it = t.getScope (  ) .getVars (  ) ; it.hasNext (  ) ; )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^172^173^^^^169^189^[ADD] Var v = it.next (  ) ; ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^173^^^^^169^189^[ADD] ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference init = refInfo .getInitializingReferenceForConstants (  )  ;^181^^^^^169^189^[REPLACE] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = init.getNameNode (  ) ;^182^^^^^169^189^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  (  referenceInfo.references.length (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^169^189^[REPLACE] if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( value != null && value.getType (  )  != Token.NAME )  {^183^^^^^178^186^[REPLACE] if  ( value != null && value.getType (  )  == Token.NAME )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^181^182^^^^178^186^[ADD] Reference init = referenceInfo.getInitializingReference (  ) ; Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = init .getNameNode (  )  ;^182^^^^^178^186^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^aliasCandidates.put ( varalue, new AliasCandidate ( v, referenceInfo )  ) ;^184^^^^^169^189^[REPLACE] aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^ReferenceCollection referenceInfo = referenceMap .put ( value , null )  ;^173^^^^^169^189^[REPLACE] ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference init = referenceInfo .getInitializingReferenceForConstants (  )  ;^181^^^^^169^189^[REPLACE] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = init .getNameNode (  )  ;^182^^^^^169^189^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( referenceInfo != null ) {^205^206^^^^196^223^[REPLACE] if  ( referenceInfo == null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^210^^^^^196^223^[REPLACE] } else if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  else {^215^^^^^196^223^[REPLACE] } else if  ( mode == Mode.CONSTANTS_ONLY )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^inlineNonConstants ( v, refInfo ) ;^220^^^^^215^221^[REPLACE] inlineNonConstants ( v, referenceInfo ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^220^^^^^215^221^[ADD] inlineNonConstants ( v, referenceInfo ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference init = refInfo.getInitializingReferenceForConstants (  ) ;^211^^^^^196^223^[REPLACE] Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^212^^^^^196^223^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  (   Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^[REPLACE] } else if  ( mode == Mode.CONSTANTS_ONLY )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^}   continue;^215^216^^218^^196^223^[ADD] else if  ( mode == Mode.CONSTANTS_ONLY )  {  continue;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^isInlineableDeclaredConstant ( v, referenceInfo )  ;^220^^^^^215^221^[REPLACE] inlineNonConstants ( v, referenceInfo ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^inlineDeclaredConstant ( v, value, referenceInfo.references ) ;^212^213^^^^196^223^[ADD] Node value = init.getAssignedValue (  ) ; inlineDeclaredConstant ( v, value, referenceInfo.references ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  else {^210^^^^^196^223^[REPLACE] } else if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^inlineNonConstants ( var, referenceInfo ) ;^220^^^^^215^221^[REPLACE] inlineNonConstants ( v, referenceInfo ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^Node value = init.getAssignedValue (  ) ;^211^212^^^^196^223^[ADD] Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ; Node value = init.getAssignedValue (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  (LOCALS_ONLY  !=  Mode.CONSTANTS_ONLY )  {^215^^^^^196^223^[REPLACE] } else if  ( mode == Mode.CONSTANTS_ONLY )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^198^^^^^196^223^[REPLACE] for  ( Iterator<Var> it = t.getScope (  ) .getVars (  ) ; it.hasNext (  ) ; )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Var v = it.hasNext (  ) ;^199^^^^^196^223^[REPLACE] Var v = it.next (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^201^^^^^196^223^[ADD] ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  NodeTraversal t  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^int refCount = refInfo.references.size (  ) ;^227^^^^^226^284^[REPLACE] int refCount = referenceInfo.references.size (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference declaration = referenceInfo.references.get ( 2 ) ;^228^^^^^226^284^[REPLACE] Reference declaration = referenceInfo.references.get ( 0 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^229^^^^^226^284^[ADD] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^230^^^^^226^284^[ADD] int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( firstRefAfterInit > 2 || isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^226^284^[REPLACE] if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^232^233^^^236^226^284^[ADD] if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  { Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  ( refCount  ) {^240^^^^^226^284^[REPLACE] } else if  ( refCount == firstRefAfterInit )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^}   firstRefAfterInit - 1 ) ;^240^241^^243^244^226^284^[ADD] else if  ( refCount == firstRefAfterInit )  {  Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  ( declaration != init || true )  {^249^^^^^226^284^[REPLACE] } else if  ( declaration != init && refCount == 2 )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( isValidDeclaration ( declaration )  ) {^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^250^251^^253^254^226^284^[ADD] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {  Node value = init.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference.getAssignedValue (  ) ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^253^254^^^^226^284^[ADD] Node value = init.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if   (  !isValidDeclaration  (  declaration  )  || !isValidInitialization  (  initialization  )  ;^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference.getNameNode (  ) ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if   (  refCount > 1 && isImmutableAndWellDefinedVariable  (  v, referenceInfo  )    )   {  ;^245^^^^^226^284^[REPLACE] if  ( canInline ( declaration, init, reference )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^inline ( v, declaration, declaration, reference ) ;^246^^^^^226^284^[REPLACE] inline ( v, declaration, init, reference ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^staleVars .contains ( v )  ;^247^^^^^226^284^[REPLACE] staleVars.add ( v ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^247^^^^^226^284^[ADD] staleVars.add ( v ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference reference = referenceInfo.references .get ( var )  ;^243^244^^^^226^284^[REPLACE] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( canInline ( declaration, init, init )  )  {^245^^^^^226^284^[REPLACE] if  ( canInline ( declaration, init, reference )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^inline ( var, declaration, init, reference ) ;^246^^^^^226^284^[REPLACE] inline ( v, declaration, init, reference ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REMOVE]^( isStringWorthInlining ( v, refInfo.references )  )  ;^246^^^^^226^284^[REMOVE] ^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^staleVars.contains ( v ) ;^247^^^^^226^284^[REPLACE] staleVars.add ( v ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  ( declaration != init || refCount == 2 + 1 )  {^249^^^^^226^284^[REPLACE] } else if  ( declaration != init && refCount == 2 )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  (  isValidInitialization ( init )  )  {^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference reference = refInfo.references.get ( firstRefAfterInit  1 ) ;^243^244^^^^226^284^[REPLACE] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference.getAssignedValue (  ) ;^236^^^^^232^258^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  else {^240^^^^^226^284^[REPLACE] } else if  ( refCount == firstRefAfterInit )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  ( declaration != init ) {^249^^^^^226^284^[REPLACE] } else if  ( declaration != init && refCount == 2 )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REMOVE]^if  ( ! ( staleVars.contains ( candidate.alias )  )  )  {     Reference aliasInit;     aliasInit = getInitializingReference (  ) ;     Node value = aliasInit.getAssignedValue (  ) ;     checkNotNull ( value ) ;     inlineWellDefinedVariable ( candidate.alias, value, references ) ;     staleVars.add ( candidate.alias ) ; }^250^^^^^226^284^[REMOVE] ^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^253^^^^^226^284^[ADD] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( canInline ( declaration, declaration, reference )  )  {^245^^^^^226^284^[REPLACE] if  ( canInline ( declaration, init, reference )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^245^246^247^248^^226^284^[ADD] if  ( canInline ( declaration, init, reference )  )  { inline ( v, declaration, init, reference ) ; staleVars.add ( v ) ; }^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^inline ( v, declaration, init, declaration ) ;^246^^^^^226^284^[REPLACE] inline ( v, declaration, init, reference ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^staleVars.add ( var ) ;^247^^^^^226^284^[REPLACE] staleVars.add ( v ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^243^244^^^^226^284^[ADD] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  ( declaration != init || refCount == 2 )  {^249^^^^^226^284^[REPLACE] } else if  ( declaration != init && refCount == 2 )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^}   Node value = init.getAssignedValue (  ) ;^249^250^^^253^226^284^[ADD] else if  ( declaration != init && refCount == 2 )  { if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  { Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( isValidDeclaration ( declaration )  || isValidInitialization ( init )  )  {^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference .getNameNode (  )  ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( isValidDeclaration ( declaration )  || isValidInitialization ( reference )  )  {^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference.getAssignedValue (  ) ;^236^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference reference = referenceInfo.references.size (refCount  1 ) ;^243^244^^^^226^284^[REPLACE] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^264^265^^^^226^284^[REPLACE] if  ( !staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^264^265^266^267^268^226^284^[ADD] if  ( !staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  { List<Reference> refs = referenceInfo.references; f Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if   (  refCount > 1 && isImmutableAndWellDefinedVariable  (  v, referenceInfo  )    )   {  ;^269^^^^^264^283^[REPLACE] if  ( aliasCandidates.containsKey ( nameNode )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( staleVars.contains ( candidate.alias )  )  {^271^^^^^264^283^[REPLACE] if  ( !staleVars.contains ( candidate.alias )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^aliasInit =  null.refInfo.getInitializingReference (  ) ;^273^^^^^264^283^[REPLACE] aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference declaration = get ( 0 )  ;^272^^^^^264^283^[REPLACE] Reference aliasInit;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^274^^^^^264^283^[REPLACE] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^AliasCandidate candidate = aliasCandidates.get ( value ) ;^270^^^^^264^283^[REPLACE] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( !staleVars.add ( candidate.alias )  )  {^271^^^^^264^283^[REPLACE] if  ( !staleVars.contains ( candidate.alias )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference.getAssignedValue (  ) ;^274^^^^^264^283^[REPLACE] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^266^^^^^264^283^[ADD] List<Reference> refs = referenceInfo.references;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^268^^^^^264^283^[ADD] Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^270^^^^^264^283^[ADD] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^272^273^^^^264^283^[ADD] Reference aliasInit; aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if   (  refCount > 1 && isImmutableAndWellDefinedVariable  (  v, referenceInfo  )    )   {  ;^269^^^^^226^284^[REPLACE] if  ( aliasCandidates.containsKey ( nameNode )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REMOVE]^if  ( ! ( staleVars.contains ( candidate.alias )  )  )  {     Reference aliasInit;     aliasInit = getInitializingReference (  ) ;     Node value = aliasInit.getAssignedValue (  ) ;     checkNotNull ( value ) ;     inlineWellDefinedVariable ( candidate.alias, value, references ) ;     staleVars.add ( candidate.alias ) ; }^269^^^^^226^284^[REMOVE] ^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( staleVars.contains ( candidate.alias )  )  {^271^^^^^226^284^[REPLACE] if  ( !staleVars.contains ( candidate.alias )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^271^272^273^274^275^226^284^[ADD] if  ( !staleVars.contains ( candidate.alias )  )  { Reference aliasInit; aliasInit = candidate.refInfo.getInitializingReference (  ) ; Node value = aliasInit.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^aliasInit =  null.refInfo.getInitializingReference (  ) ;^273^^^^^226^284^[REPLACE] aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference declaration = get ( 0 )  ;^272^^^^^226^284^[REPLACE] Reference aliasInit;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference.getAssignedValue (  ) ;^274^^^^^226^284^[REPLACE] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^AliasCandidate candidate = aliasCandidates.containsKey ( value ) ;^270^^^^^226^284^[REPLACE] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if   (  refCount > 1 && isImmutableAndWellDefinedVariable  (  v, referenceInfo  )    )   {  ;^271^^^^^226^284^[REPLACE] if  ( !staleVars.contains ( candidate.alias )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^272^^^^^226^284^[ADD] Reference aliasInit;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^274^275^^^^226^284^[ADD] Node value = aliasInit.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^273^274^^^^226^284^[ADD] aliasInit = candidate.refInfo.getInitializingReference (  ) ; Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^List<Reference> refs = refInfo.references;^266^^^^^226^284^[REPLACE] List<Reference> refs = referenceInfo.references;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node nameNode = null.get ( i ) .getNameNode (  ) ;^268^^^^^226^284^[REPLACE] Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^AliasCandidate candidate = aliasCandidates.containsKey ( nameNode ) ;^270^^^^^226^284^[REPLACE] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = reference .getNameNode (  )  ;^274^^^^^226^284^[REPLACE] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node nameNode  value  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( identifyConstants.apply ( var )  )  {^406^^^^^405^435^[REPLACE] if  ( !identifyConstants.apply ( var )  )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^407^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( refInfo.isAssignedOnce (  )  )  {^410^^^^^405^435^[REPLACE] if  ( !refInfo.isAssignedOnce (  )  )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return false;  ;^411^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^411^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference declaration = get ( 0 )  ;^414^^^^^405^435^[REPLACE] Reference init = refInfo.getInitializingReferenceForConstants (  ) ;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( init != null )  {^415^^^^^405^435^[REPLACE] if  ( init == null )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^416^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return false;  ;^416^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^419^^^^^405^435^[ADD] Node value = init.getAssignedValue (  ) ;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( value != null )  {^420^^^^^405^435^[REPLACE] if  ( value == null )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^424^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( !NodeUtil.isLiteralValue ( value )  )  {^428^^^^^405^435^[REPLACE] if  ( !NodeUtil.isImmutableValue ( value )  )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^return false;^428^429^430^^^405^435^[ADD] if  ( !NodeUtil.isImmutableValue ( value )  )  { return false; }^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^429^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return   isStringWorthInlining ( var, refInfo.references ) ;^433^434^^^^405^435^[REPLACE] return value.getType (  )  != Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference init  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( inlineAllStrings && !var.isDefine (  )  )  {^441^^^^^440^463^[REPLACE] if  ( !inlineAllStrings && !var.isDefine (  )  )  {^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^return len  ;^459^^^^^440^463^[REPLACE] return noInlineBytes >= inlineBytes;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[ADD]^^442^^^^^440^463^[ADD] int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int noInlineBytes = "var xx=;".length (  )  + noInlineBytes + 4 *  ( refs.size (  )  - 1 - 1 ) ;^448^449^^^^440^463^[REPLACE] int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  /  2 - 1 ) ;^455^^^^^440^463^[REPLACE] int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^return false ;^459^^^^^440^463^[REPLACE] return noInlineBytes >= inlineBytes;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int len = var.getInitialValue (  ) .getString (  )  .getFirstChild (  )   *  0.5  + "''"^442^^^^^440^463^[REPLACE] int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  + 3 - 1 ) ;^448^449^^^^440^463^[REPLACE] int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int inlineBytes =  ( len - 1 )  *  ( null.size (  )  /  0.5  - 1 ) ;^455^^^^^440^463^[REPLACE] int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^return false;^462^^^^^440^463^[REPLACE] return true;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  List refs  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^if  (  !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^473^474^475^^^472^513^[REPLACE] if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^476^^^^^473^477^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^476^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( declaration != initialization || initialization.getParent (  ) .getType (  )  != Token.EXPR_RESULT )  {^482^483^^^^472^513^[REPLACE] if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return false;  ;^484^^^^^482^485^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return false;  ;^484^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( declaration .getNameNode (  )   != initialization^489^490^^^^472^513^[REPLACE] if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^491^^^^^489^492^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^491^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = refInit.getAssignedValue (  )  ;^503^^^^^472^513^[REPLACE] Node value = initialization.getAssignedValue (  ) ;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^checkState (  ( refInit ==  ( refSet.get ( 1 )  )  )  )  ;^504^^^^^472^513^[REPLACE] Preconditions.checkState ( value != null ) ;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( value.replaceChild (  )  == Token.GETPROP ) {^505^506^507^^^472^513^[REPLACE] if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^505^506^507^508^509^472^513^[ADD] if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  { return false; }^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;^508^^^^^505^509^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return false;  ;^508^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return canMoveAggressively ( value )  ;^511^512^^^^472^513^[REPLACE] return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^535^^^^^532^561^[REPLACE] Iterator<Node> it;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( initialization.getParent (  ) .getType (  )   !=  Token.VAR )  {^536^^^^^532^561^[REPLACE] if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^536^537^538^539^540^532^561^[ADD] if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  { it = NodeIterators.LocalVarMotion.forVar ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  ( initialization.getParent (  ) .getType (  )   &&  Token.ASSIGN )  {^541^^^^^532^561^[REPLACE] } else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^throw new IllegalStateException (  )  ;^550^^^^^541^551^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^it =  NodeIterators.LocalVarMotion.forAssign ( null.getNameNode (  ) , null.getParent (  ) , null.getGrandparent (  ) ,^544^545^546^547^^532^561^[REPLACE] it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) ,^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^544^545^546^547^548^532^561^[ADD] it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^throw new IllegalStateException (  )  ;^550^^^^^532^561^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^^537^538^539^540^^532^561^[ADD] it = NodeIterators.LocalVarMotion.forVar ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^}  if  (   Token.ASSIGN )  {^541^^^^^532^561^[REPLACE] } else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[ADD]^}   initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^541^542^543^544^545^532^561^[ADD] else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  { Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ; it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) ,^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return ;^550^^^^^541^551^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^it =  NodeIterators.LocalVarMotion.forVar ( null.getNameNode (  ) , null.getParent (  ) , null.getGrandparent (  )  ) ;^537^538^539^540^^532^561^[REPLACE] it = NodeIterators.LocalVarMotion.forVar ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Node value = refInit.getAssignedValue (  )  ;^552^^^^^532^561^[REPLACE] Node targetName = reference.getNameNode (  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^if  ( curNode  !=  targetName )  {^555^^^^^532^561^[REPLACE] if  ( curNode == targetName )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return false;^556^^^^^532^561^[REPLACE] return true;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return true;  ;^556^^^^^532^561^[REPLACE] return true;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Var v = it.next (  )  ;^554^^^^^532^561^[REPLACE] Node curNode = it.next (  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^return false;  ;^560^^^^^532^561^[REPLACE] return false;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference initialization  reference  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node curNode  targetName  [TYPE]  Iterator it  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap 
[REPLACE]^Reference declaration = get ( 0 )  ;^604^^^^^603^637^[REPLACE] List<Reference> refSet = refInfo.references;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^int startingReadRef = 3;^605^^^^^603^637^[REPLACE] int startingReadRef = 1;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[ADD]^^606^^^^^603^637^[ADD] Reference refDecl = refSet.get ( 0 ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( !isValidDeclaration ( refInit )  )  {^607^^^^^603^637^[REPLACE] if  ( !isValidDeclaration ( refDecl )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[ADD]^return false;^607^608^609^^^603^637^[ADD] if  ( !isValidDeclaration ( refDecl )  )  { return false; }^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^608^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^Reference declaration = get ( 0 )  ;^611^^^^^603^637^[REPLACE] Reference refInit = refInfo.getInitializingReference (  ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( !isValidInitialization ( refDecl )  )  {^612^^^^^603^637^[REPLACE] if  ( !isValidInitialization ( refInit )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^613^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( ref  ==  refDecl )  {^616^^^^^603^637^[REPLACE] if  ( refDecl != refInit )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[ADD]^Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ;startingReadRef = 2;^616^617^618^619^^603^637^[ADD] if  ( refDecl != refInit )  { Preconditions.checkState ( refInit == refSet.get ( 1 )  ) ; startingReadRef = 2; }^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^startingReadRef = 1;^618^^^^^603^637^[REPLACE] startingReadRef = 2;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^startingReadRef = 2 % 3;^618^^^^^603^637^[REPLACE] startingReadRef = 2;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( !isValidReference ( refInit )  )  {^623^^^^^603^637^[REPLACE] if  ( !isValidReference ( ref )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REMOVE]^if  ( ! ( refInfo.isAssignedOnce (  )  )  )  {     return false; }^623^^^^^603^637^[REMOVE] ^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^624^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^return false;  ;^624^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[ADD]^^621^622^623^624^625^603^637^[ADD] for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  { Reference ref = refSet.get ( i ) ; if  ( !isValidReference ( ref )  )  { return false; }^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[ADD]^^622^^^^^603^637^[ADD] Reference ref = refSet.get ( i ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( refInfo.isWellDefined (  )  )  {^628^^^^^603^637^[REPLACE] if  ( !refInfo.isWellDefined (  )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^629^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[ADD]^Preconditions.checkNotNull ( value ) ;^632^633^^^^603^637^[ADD] Node value = refInit.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^Preconditions .checkState (  )  ;^633^^^^^603^637^[REPLACE] Preconditions.checkNotNull ( value ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[ADD]^^633^^^^^603^637^[ADD] Preconditions.checkNotNull ( value ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^return NodeUtil.isImmutableValue ( value )  || ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;;^634^635^636^^^603^637^[REPLACE] return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InlineVariables Mode IdentifyConstants IdentifyLocals AliasCandidate InliningBehavior   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  inlineAllStrings  true  [TYPE]  IdentifyConstants identifyConstants  [TYPE]  Set staleVars  [TYPE]  Var alias  v  var  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Mode ALL  CONSTANTS_ONLY  LOCALS_ONLY  mode  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  ReferenceCollection refInfo  referenceInfo  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  int i  startingReadRef 
[REPLACE]^private  Var alias;^128^^^^^^^[REPLACE] private final Var alias;^[METHOD] apply [TYPE] boolean [PARAMETER] Var var [CLASS] AliasCandidate   [TYPE]  boolean false  true  [TYPE]  Var var 
[REPLACE]^private  ReferenceCollection refInfo;^129^^^^^^^[REPLACE] private final ReferenceCollection refInfo;^[METHOD] apply [TYPE] boolean [PARAMETER] Var var [CLASS] AliasCandidate   [TYPE]  boolean false  true  [TYPE]  Var var 
[REPLACE]^private final Set<Var> staleVars  = null ;^148^^^^^^^[REPLACE] private final Set<Var> staleVars = Sets.newHashSet (  ) ;^[METHOD] <init> [TYPE] ReferenceCollection) [PARAMETER] Var alias ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  ReferenceCollection refInfo  [TYPE]  Var alias  [TYPE]  boolean false  true 
[REPLACE]^final Map<Node, AliasCandidate> aliasCandidates ;^155^^^^^^^[REPLACE] final Map<Node, AliasCandidate> aliasCandidates = Maps.newHashMap (  ) ;^[METHOD] <init> [TYPE] ReferenceCollection) [PARAMETER] Var alias ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  ReferenceCollection refInfo  [TYPE]  Var alias  [TYPE]  boolean false  true 
[REPLACE]^if  ( mode  ==  Mode.CONSTANTS_ONLY )  {^170^^^^^169^189^[REPLACE] if  ( mode != Mode.CONSTANTS_ONLY )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^if  ( referenceInfo != true && referenceInfo.references.size (  )  /  2 >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo .getInitializingReference (  )   )  {^178^179^180^^^169^189^[REPLACE] if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^if  ( value != null && value.getType (  )  != Token.NAME )  {^183^^^^^178^186^[REPLACE] if  ( value != null && value.getType (  )  == Token.NAME )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Reference declaration = get ( 0 )  ;^181^^^^^178^186^[REPLACE] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = init.getNameNode (  ) ;^182^^^^^178^186^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^if  ( value != true && value.getType (  )  != Token.NAME )  {^183^^^^^169^189^[REPLACE] if  ( value != null && value.getType (  )  == Token.NAME )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^aliasCandidates .get ( v )  ;^184^^^^^169^189^[REPLACE] aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^for  ( Iterator<Var> it = t.getScope (  ) .replaceChild (  ) ; it.hasNext (  ) ; )  {^171^^^^^169^189^[REPLACE] for  ( Iterator<Var> it = t.getScope (  ) .getVars (  ) ; it.hasNext (  ) ; )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Var v = null.next (  ) ;^172^^^^^169^189^[REPLACE] Var v = it.next (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Reference declaration = get ( 0 )  ;^173^^^^^169^189^[REPLACE] ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Reference declaration = get ( 0 )  ;^181^^^^^169^189^[REPLACE] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^182^^^^^169^189^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^if  (  referenceInfo.references.size (  )  - 5 >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^178^179^180^^^169^189^[REPLACE] if  ( referenceInfo != null && referenceInfo.references.size (  )  >= 2 && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REMOVE]^if  (  ( mode )  !=  ( CONSTANTS_ONLY )  )  {     for  ( Var> it = t.getScope (  ) .getVars (  ) ; it.hasNext (  ) ; )  {         Var v = it.next (  ) ;         ReferenceCollection referenceInfo = referenceMap.get ( v ) ;         if  (  (  (  ( referenceInfo != null )  &&  (  ( size (  )  )  >= 2 )  )  &&  ( referenceInfo.isWellDefined (  )  )  )  &&  ( referenceInfo.isAssignedOnce (  )  )  )  {             Reference init = referenceInfo.getInitializingReference (  ) ;             Node value = init.getAssignedValue (  ) ;             if  (  ( value != null )  &&  (  ( value.getType (  )  )  ==  ( NAME )  )  )  {                 aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ;             }         }     } }^178^^^^^169^189^[REMOVE] ^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^181^^^^^178^186^[REPLACE] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = init .getNameNode (  )  ;^182^^^^^178^186^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^if  ( value != null ) {^183^^^^^169^189^[REPLACE] if  ( value != null && value.getType (  )  == Token.NAME )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^^183^184^185^^^169^189^[ADD] if  ( value != null && value.getType (  )  == Token.NAME )  { aliasCandidates.put ( value, new AliasCandidate ( v, referenceInfo )  ) ; }^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^171^^^^^169^189^[REPLACE] for  ( Iterator<Var> it = t.getScope (  ) .getVars (  ) ; it.hasNext (  ) ; )  {^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Var v = it.hasNext (  ) ;^172^^^^^169^189^[REPLACE] Var v = it.next (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^^181^182^^^^169^189^[ADD] Reference init = referenceInfo.getInitializingReference (  ) ; Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = init .getNameNode (  )  ;^182^^^^^169^189^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] collectAliasCandidates [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^if  (  isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^205^206^^^^196^223^[REPLACE] if  ( referenceInfo == null || isVarInlineForbidden ( v )  || staleVars.contains ( v )  )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^}  if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^210^^^^^196^223^[REPLACE] } else if  ( isInlineableDeclaredConstant ( v, referenceInfo )  )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^}  else {^215^^^^^196^223^[REPLACE] } else if  ( mode == Mode.CONSTANTS_ONLY )  {^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^isInlineableDeclaredConstant ( v, referenceInfo )  ;^220^^^^^215^221^[REPLACE] inlineNonConstants ( v, referenceInfo ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Reference init = referenceInfo.getInitializingReference (  ) ;^211^^^^^196^223^[REPLACE] Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^^212^213^^^^196^223^[ADD] Node value = init.getAssignedValue (  ) ; inlineDeclaredConstant ( v, value, referenceInfo.references ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^^211^^^^^196^223^[ADD] Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = init.getNameNode (  ) ;^212^^^^^196^223^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^}   continue;^215^216^^218^^196^223^[ADD] else if  ( mode == Mode.CONSTANTS_ONLY )  {  continue;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Reference declaration = get ( 0 )  ;^211^^^^^196^223^[REPLACE] Reference init = referenceInfo.getInitializingReferenceForConstants (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = init .getNameNode (  )  ;^212^^^^^196^223^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^^198^199^^201^^196^223^[ADD] for  ( Iterator<Var> it = t.getScope (  ) .getVars (  ) ; it.hasNext (  ) ; )  { Var v = it.next (  ) ; ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^^199^^^^^196^223^[ADD] Var v = it.next (  ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[ADD]^^201^^^^^196^223^[ADD] ReferenceCollection referenceInfo = referenceMap.get ( v ) ;^[METHOD] doInlinesForScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var v  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Iterator it  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^227^^^^^226^284^[REPLACE] int refCount = referenceInfo.references.size (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference init = referenceInfo.getInitializingReferenceForConstants (  )  ;^228^^^^^226^284^[REPLACE] Reference declaration = referenceInfo.references.get ( 0 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference init = referenceInfo .getInitializingReferenceForConstants (  )  ;^229^^^^^226^284^[REPLACE] Reference init = referenceInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^230^^^^^226^284^[ADD] int firstRefAfterInit =  ( declaration == init )  ? 2 : 3;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( refCount > 1 || isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^232^233^^^^226^284^[REPLACE] if  ( refCount > 1 && isImmutableAndWellDefinedVariable ( v, referenceInfo )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^}  if  ( refCount  !=  firstRefAfterInit )  {^240^^^^^226^284^[REPLACE] } else if  ( refCount == firstRefAfterInit )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^}   firstRefAfterInit - 1 ) ;^240^241^^243^244^226^284^[ADD] else if  ( refCount == firstRefAfterInit )  {  Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^}  if  ( declaration != init || refCount == 2 )  {^249^^^^^226^284^[REPLACE] } else if  ( declaration != init && refCount == 2 )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( isValidDeclaration ( declaration )  || isValidInitialization ( init )  )  {^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^253^^^^^226^284^[ADD] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^250^251^^253^254^226^284^[ADD] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {  Node value = init.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = init .getNameNode (  )  ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( canInline ( declaration, init, init )  )  {^245^^^^^226^284^[REPLACE] if  ( canInline ( declaration, init, reference )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^canInline ( declaration, init, reference )  ;^246^^^^^226^284^[REPLACE] inline ( v, declaration, init, reference ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^staleVars .contains ( v )  ;^247^^^^^226^284^[REPLACE] staleVars.add ( v ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference reference = referenceInfo.references.get ( firstRefAfterInit  1 ) ;^243^244^^^^226^284^[REPLACE] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( canInline ( reference, init, reference )  )  {^245^^^^^226^284^[REPLACE] if  ( canInline ( declaration, init, reference )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REMOVE]^if  ( ! ( staleVars.contains ( candidate.alias )  )  )  {     Reference aliasInit;     aliasInit = getInitializingReference (  ) ;     Node value = aliasInit.getAssignedValue (  ) ;     checkNotNull ( value ) ;     inlineWellDefinedVariable ( candidate.alias, value, references ) ;     staleVars.add ( candidate.alias ) ; }^249^^^^^226^284^[REMOVE] ^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if   (  !isValidDeclaration  (  declaration  )  || !isValidInitialization  (  initialization  )  ;^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = reference.getAssignedValue (  ) ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = reference.getNameNode (  ) ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference reference = referenceInfo.references.size ( firstRefAfterInit  1 % 0 ) ;^243^244^^^^226^284^[REPLACE] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^253^254^^^^226^284^[ADD] Node value = init.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^236^237^^^^232^258^[ADD] Node value = init.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^}  if  ( refCount  &&  firstRefAfterInit )  {^240^^^^^226^284^[REPLACE] } else if  ( refCount == firstRefAfterInit )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( isValidDeclaration ( declaration )  ) {^250^^^^^226^284^[REPLACE] if  ( isValidDeclaration ( declaration )  && isValidInitialization ( init )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^inline ( v, declaration, init, init ) ;^246^^^^^226^284^[REPLACE] inline ( v, declaration, init, reference ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^staleVars.contains ( v ) ;^247^^^^^226^284^[REPLACE] staleVars.add ( v ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference reference = referenceInfo.references.get ( firstRefAfterInit refCount ) ;^243^244^^^^226^284^[REPLACE] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^247^^^^^226^284^[ADD] staleVars.add ( v ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^}  if  ( declaration != init || refCount == 2L )  {^249^^^^^226^284^[REPLACE] } else if  ( declaration != init && refCount == 2 )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = init.getNameNode (  ) ;^253^^^^^226^284^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^236^^^^^226^284^[ADD] Node value = init.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^243^244^^^^226^284^[ADD] Reference reference = referenceInfo.references.get ( firstRefAfterInit - 1 ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^264^265^^^^226^284^[REPLACE] if  ( !staleVars.contains ( v )  && referenceInfo.isWellDefined (  )  && referenceInfo.isAssignedOnce (  )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REMOVE]^if  ( ! ( staleVars.contains ( candidate.alias )  )  )  {     Reference aliasInit;     aliasInit = getInitializingReference (  ) ;     Node value = aliasInit.getAssignedValue (  ) ;     checkNotNull ( value ) ;     inlineWellDefinedVariable ( candidate.alias, value, references ) ;     staleVars.add ( candidate.alias ) ; }^264^^^^^226^284^[REMOVE] ^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if   (  refCount > 1 && isImmutableAndWellDefinedVariable  (  v, referenceInfo  )    )   {  ;^269^^^^^264^283^[REPLACE] if  ( aliasCandidates.containsKey ( nameNode )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( staleVars.contains ( candidate.alias )  )  {^271^^^^^264^283^[REPLACE] if  ( !staleVars.contains ( candidate.alias )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^aliasInit =  null.refInfo.getInitializingReference (  ) ;^273^^^^^264^283^[REPLACE] aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference declaration = get ( 0 )  ;^272^^^^^264^283^[REPLACE] Reference aliasInit;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^274^^^^^264^283^[REPLACE] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^270^^^^^264^283^[ADD] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^Preconditions.checkNotNull ( value ) ;^274^275^^^^264^283^[ADD] Node value = aliasInit.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = reference.getNameNode (  ) ;^274^^^^^264^283^[REPLACE] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^266^^^^^264^283^[ADD] List<Reference> refs = referenceInfo.references;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node nameNode = refs.get ( firstRefAfterInit ) .getNameNode (  ) ;^268^^^^^264^283^[REPLACE] Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^AliasCandidate candidate = aliasCandidates.get ( value ) ;^270^^^^^264^283^[REPLACE] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^272^^^^^264^283^[ADD] Reference aliasInit;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( aliasCandidates.containsKey ( value )  )  {^269^^^^^226^284^[REPLACE] if  ( aliasCandidates.containsKey ( nameNode )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( staleVars.contains ( candidate.alias )  )  {^271^^^^^226^284^[REPLACE] if  ( !staleVars.contains ( candidate.alias )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^Reference aliasInit;aliasInit = candidate.refInfo.getInitializingReference (  ) ;Node value = aliasInit.getAssignedValue (  ) ;Preconditions.checkNotNull ( value ) ;^271^272^273^274^275^226^284^[ADD] if  ( !staleVars.contains ( candidate.alias )  )  { Reference aliasInit; aliasInit = candidate.refInfo.getInitializingReference (  ) ; Node value = aliasInit.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^aliasInit =  null.refInfo.getInitializingReference (  ) ;^273^^^^^226^284^[REPLACE] aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^272^^^^^226^284^[ADD] Reference aliasInit;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^274^^^^^226^284^[ADD] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^AliasCandidate candidate = aliasCandidates.containsKey ( value ) ;^270^^^^^226^284^[REPLACE] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference declaration = get ( 0 )  ;^272^^^^^226^284^[REPLACE] Reference aliasInit;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node value = reference.getAssignedValue (  ) ;^274^^^^^226^284^[REPLACE] Node value = aliasInit.getAssignedValue (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( !staleVars.add ( candidate.alias )  )  {^271^^^^^226^284^[REPLACE] if  ( !staleVars.contains ( candidate.alias )  )  {^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^272^273^^^^226^284^[ADD] Reference aliasInit; aliasInit = candidate.refInfo.getInitializingReference (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^274^275^^^^226^284^[ADD] Node value = aliasInit.getAssignedValue (  ) ; Preconditions.checkNotNull ( value ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Reference declaration = get ( 0 )  ;^266^^^^^226^284^[REPLACE] List<Reference> refs = referenceInfo.references;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[ADD]^^267^268^^^^226^284^[ADD] f Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^Node nameNode = refs.get ( firstRefAfterInit ) .replaceChild (  ) ;^268^^^^^226^284^[REPLACE] Node nameNode = refs.get ( i ) .getNameNode (  ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^AliasCandidate candidate = aliasCandidates.get ( value ) ;^270^^^^^226^284^[REPLACE] AliasCandidate candidate = aliasCandidates.get ( nameNode ) ;^[METHOD] inlineNonConstants [TYPE] void [PARAMETER] Var v ReferenceCollection referenceInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference aliasInit  declaration  init  reference  [TYPE]  Node nameNode  value  [TYPE]  List refs  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection referenceInfo  [TYPE]  int firstRefAfterInit  i  refCount  [TYPE]  AliasCandidate candidate 
[REPLACE]^if  ( identifyConstants.apply ( var )  )  {^406^^^^^405^435^[REPLACE] if  ( !identifyConstants.apply ( var )  )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^return true;^407^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^return false;  ;^407^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^if  ( refInfo.isAssignedOnce (  )  )  {^410^^^^^405^435^[REPLACE] if  ( !refInfo.isAssignedOnce (  )  )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[ADD]^return false;^410^411^412^^^405^435^[ADD] if  ( !refInfo.isAssignedOnce (  )  )  { return false; }^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^return true;^411^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^Reference init = refInfo.getInitializingReference (  ) ;^414^^^^^405^435^[REPLACE] Reference init = refInfo.getInitializingReferenceForConstants (  ) ;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^if  ( init != this  )  {^415^^^^^405^435^[REPLACE] if  ( init == null )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^return true;^416^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^Node value = init .getNameNode (  )  ;^419^^^^^405^435^[REPLACE] Node value = init.getAssignedValue (  ) ;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^if  ( value != null )  {^420^^^^^405^435^[REPLACE] if  ( value == null )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REMOVE]^if  ( ! ( refInfo.isAssignedOnce (  )  )  )  {     return false; }^420^^^^^405^435^[REMOVE] ^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^return true;^424^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^if  ( !NodeUtil.isLiteralValue ( value )  )  {^428^^^^^405^435^[REPLACE] if  ( !NodeUtil.isImmutableValue ( value )  )  {^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^return true;^429^^^^^405^435^[REPLACE] return false;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^return value.getType (  )  != Token.STRING && isStringWorthInlining ( var, refInfo.references ) ;;^433^434^^^^405^435^[REPLACE] return value.getType (  )  != Token.STRING || isStringWorthInlining ( var, refInfo.references ) ;^[METHOD] isInlineableDeclaredConstant [TYPE] boolean [PARAMETER] Var var ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var var  [TYPE]  Reference init  [TYPE]  Node value  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo 
[REPLACE]^if  (  !var.isDefine (  )  )  {^441^^^^^440^463^[REPLACE] if  ( !inlineAllStrings && !var.isDefine (  )  )  {^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[ADD]^^441^442^^^^440^463^[ADD] if  ( !inlineAllStrings && !var.isDefine (  )  )  { int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^return noInlineBytes >= inlineBytes;  ;^459^^^^^440^463^[REPLACE] return noInlineBytes >= inlineBytes;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int len = var.getInitialValue (  ) .getString (  ) .replaceChild (  )  /  2 + "''".length (  )  /  2;^442^^^^^440^463^[REPLACE] int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( this.get (  )  - 3 - 1 ) ;^448^449^^^^440^463^[REPLACE] int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int inlineBytes =  ( len - 0  )  *  ( refs.size (  )  - 5 - 0  ) ;^455^^^^^440^463^[REPLACE] int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int len = var.getInitialValue (  ) .getString (  ) .length (  )  - 5 + "''".length (  )  - 5;^442^^^^^440^463^[REPLACE] int len = var.getInitialValue (  ) .getString (  ) .length (  )  + "''".length (  ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  %  0.5  - 1 ) ;^448^449^^^^440^463^[REPLACE] int noInlineBytes = "var xx=;".length (  )  + len + 4 *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[ADD]^^455^^^^^440^463^[ADD] int inlineBytes =  ( len - 1 )  *  ( refs.size (  )  - 1 ) ;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^return false;^462^^^^^440^463^[REPLACE] return true;^[METHOD] isStringWorthInlining [TYPE] boolean [PARAMETER] Var var Reference> refs [CLASS] InliningBehavior   [TYPE]  List refs  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Var var  [TYPE]  int inlineBytes  len  noInlineBytes 
[REPLACE]^if  ( isValidDeclaration ( declaration ) ) {^473^474^475^^^472^513^[REPLACE] if  ( !isValidDeclaration ( declaration ) || !isValidInitialization ( initialization ) || !isValidReference ( reference )  )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^476^^^^^473^477^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^476^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^if  ( declaration != initialization ) {^482^483^^^^472^513^[REPLACE] if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[ADD]^^482^483^484^485^^472^513^[ADD] if  ( declaration != initialization && initialization.getGrandparent (  ) .getType (  )  != Token.EXPR_RESULT )  { return false; }^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^484^^^^^482^485^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^484^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^if  (  declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^489^490^^^^472^513^[REPLACE] if  ( declaration.getBasicBlock (  )  != initialization.getBasicBlock (  ) || declaration.getBasicBlock (  )  != reference.getBasicBlock (  )  )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^491^^^^^489^492^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^491^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[ADD]^^503^^^^^472^513^[ADD] Node value = initialization.getAssignedValue (  ) ;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^Preconditions.checkState ( value == null ) ;^504^^^^^472^513^[REPLACE] Preconditions.checkState ( value != null ) ;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^if  ( value.getType (  )  == Token.GETPROP || reference.getParent (  ) .getType (  )  == Token.CALL || reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^505^506^507^^^472^513^[REPLACE] if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  {^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[ADD]^^505^506^507^508^509^472^513^[ADD] if  ( value.getType (  )  == Token.GETPROP && reference.getParent (  ) .getType (  )  == Token.CALL && reference.getParent (  ) .getFirstChild (  )  == reference.getNameNode (  )  )  { return false; }^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^508^^^^^505^509^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return true;^508^^^^^472^513^[REPLACE] return false;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^return   canMoveModerately ( initialization, reference ) ;^511^512^^^^472^513^[REPLACE] return canMoveAggressively ( value )  || canMoveModerately ( initialization, reference ) ;^[METHOD] canInline [TYPE] boolean [PARAMETER] Reference declaration Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference declaration  initialization  reference  [TYPE]  Node value 
[REPLACE]^Node value = initialization.getAssignedValue (  )  ;^535^^^^^532^561^[REPLACE] Iterator<Node> it;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^if  ( initialization.getParent (  ) .getType (  )   ||  Token.VAR )  {^536^^^^^532^561^[REPLACE] if  ( initialization.getParent (  ) .getType (  )  == Token.VAR )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^if   (  initialization.getParent  (    )  .getType  (    )   == Token.VAR  )   {  ;^541^^^^^532^561^[REPLACE] } else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[ADD]^}   initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ;^541^542^543^544^545^532^561^[ADD] else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  { Preconditions.checkState ( initialization.getGrandparent (  ) .getType (  )  == Token.EXPR_RESULT ) ; it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) ,^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[ADD]^^550^^^^^541^551^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^it =  NodeIterators.LocalVarMotion.forAssign ( null.getNameNode (  ) , null.getParent (  ) , null.getGrandparent (  ) ,^544^545^546^547^^532^561^[REPLACE] it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) ,^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[ADD]^^544^545^546^547^548^532^561^[ADD] it = NodeIterators.LocalVarMotion.forAssign ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  ) , initialization.getGrandparent (  ) .getParent (  )  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^return ;^550^^^^^532^561^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[ADD]^^537^538^539^540^^532^561^[ADD] it = NodeIterators.LocalVarMotion.forVar ( initialization.getNameNode (  ) , initialization.getParent (  ) , initialization.getGrandparent (  )  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^}  if  ( initialization.getParent (  ) .getType (  )   !=  Token.ASSIGN )  {^541^^^^^532^561^[REPLACE] } else if  ( initialization.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^return ;^550^^^^^541^551^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[ADD]^^550^^^^^532^561^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[ADD]^^552^^^^^532^561^[ADD] Node targetName = reference.getNameNode (  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^if  ( curNode  !=  targetName )  {^555^^^^^532^561^[REPLACE] if  ( curNode == targetName )  {^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^return false;^556^^^^^532^561^[REPLACE] return true;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^Node curNode = this.next (  ) ;^554^^^^^532^561^[REPLACE] Node curNode = it.next (  ) ;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^return true;^560^^^^^532^561^[REPLACE] return false;^[METHOD] canMoveModerately [TYPE] boolean [PARAMETER] Reference initialization Reference reference [CLASS] InliningBehavior   [TYPE]  Iterator it  [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  Reference initialization  reference  [TYPE]  Node curNode  targetName 
[REPLACE]^Reference declaration = get ( 0 )  ;^604^^^^^603^637^[REPLACE] List<Reference> refSet = refInfo.references;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^int startingReadRef = 3;^605^^^^^603^637^[REPLACE] int startingReadRef = 1;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^Reference refDecl = refSet.get ( 0L ) ;^606^^^^^603^637^[REPLACE] Reference refDecl = refSet.get ( 0 ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( !isValidDeclaration ( refInit )  )  {^607^^^^^603^637^[REPLACE] if  ( !isValidDeclaration ( refDecl )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^608^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[ADD]^^611^^^^^603^637^[ADD] Reference refInit = refInfo.getInitializingReference (  ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( !isValidInitialization ( refDecl )  )  {^612^^^^^603^637^[REPLACE] if  ( !isValidInitialization ( refInit )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^613^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( ref  ==  refDecl )  {^616^^^^^603^637^[REPLACE] if  ( refDecl != refInit )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^startingReadRef = 3;^618^^^^^603^637^[REPLACE] startingReadRef = 2;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[ADD]^^618^^^^^603^637^[ADD] startingReadRef = 2;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( !isValidReference ( refInit )  )  {^623^^^^^603^637^[REPLACE] if  ( !isValidReference ( ref )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[ADD]^return false;^623^624^625^^^603^637^[ADD] if  ( !isValidReference ( ref )  )  { return false; }^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^624^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^return false;  ;^624^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[ADD]^^621^622^623^624^625^603^637^[ADD] for  ( int i = startingReadRef; i < refSet.size (  ) ; i++ )  { Reference ref = refSet.get ( i ) ; if  ( !isValidReference ( ref )  )  { return false; }^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^Reference ref = refSet .put ( value , false )  ;^622^^^^^603^637^[REPLACE] Reference ref = refSet.get ( i ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^if  ( refInfo.isWellDefined (  )  )  {^628^^^^^603^637^[REPLACE] if  ( !refInfo.isWellDefined (  )  )  {^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REMOVE]^if  ( ! ( refInfo.isAssignedOnce (  )  )  )  {     return false; }^628^^^^^603^637^[REMOVE] ^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^return true;^629^^^^^603^637^[REPLACE] return false;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^Node value = refDecl.getNameNode (  ) ;^632^^^^^603^637^[REPLACE] Node value = refInit.getAssignedValue (  ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^checkState (  ( value != null )  )  ;^633^^^^^603^637^[REPLACE] Preconditions.checkNotNull ( value ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
[REPLACE]^return   ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;;^634^635^636^^^603^637^[REPLACE] return NodeUtil.isImmutableValue ( value )  && ( value.getType (  )  != Token.STRING || isStringWorthInlining ( v, refInfo.references )  ) ;^[METHOD] isImmutableAndWellDefinedVariable [TYPE] boolean [PARAMETER] Var v ReferenceCollection refInfo [CLASS] InliningBehavior   [TYPE]  Set staleVars  [TYPE]  boolean false  true  [TYPE]  Var v  [TYPE]  Reference ref  refDecl  refInit  [TYPE]  Node value  [TYPE]  List refSet  [TYPE]  Map aliasCandidates  referenceMap  [TYPE]  ReferenceCollection refInfo  [TYPE]  int i  startingReadRef 
