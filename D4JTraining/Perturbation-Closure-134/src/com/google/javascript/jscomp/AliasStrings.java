[REPLACE]^private  final Logger logger = Logger.getLogger ( AliasStrings.class.getName (  )  ) ;^47^48^^^^47^48^[REPLACE] private static final Logger logger = Logger.getLogger ( AliasStrings.class.getName (  )  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private static  String STRING_ALIAS_PREFIX = "$$S_";^51^^^^^^^[REPLACE] private static final String STRING_ALIAS_PREFIX = "$$S_";^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private  AbstractCompiler compiler;^53^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private  JSModuleGraph moduleGraph;^55^^^^^^^[REPLACE] private final JSModuleGraph moduleGraph;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private Matcher blacklist ;^58^^^^^^^[REPLACE] private Matcher blacklist = null;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private  Map<String, StringInfo> stringInfoMap = new LinkedHashMap<String, StringInfo> (  ) ;^68^69^^^^68^69^[REPLACE] private final Map<String, StringInfo> stringInfoMap = new LinkedHashMap<String, StringInfo> (  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private final Set<String> usedHashedAliases  = null ;^71^^^^^^^[REPLACE] private final Set<String> usedHashedAliases = new LinkedHashSet<String> (  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private  Map<JSModule, Node> moduleVarParentMap = new HashMap<JSModule, Node> (  ) ;^77^78^^^^77^78^[REPLACE] private final Map<JSModule, Node> moduleVarParentMap = new HashMap<JSModule, Node> (  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^long unitTestHashReductionMask  = null ;^82^^^^^^^[REPLACE] long unitTestHashReductionMask = ~0L;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^Node node;^363^^^^^^^[REPLACE] final Node node;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^List<StringOccurrence> occurrences;^381^^^^^^^[REPLACE] final List<StringOccurrence> occurrences;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^boolean  aliasName;^389^^^^^^^[REPLACE] String aliasName;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^this.compiler =  null;^100^^^^^95^109^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.moduleGraph =  null;^101^^^^^95^109^[REPLACE] this.moduleGraph = moduleGraph;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.aliasableStrings =  true;^102^^^^^95^109^[REPLACE] this.aliasableStrings = strings;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^102^^^^^95^109^[ADD] this.aliasableStrings = strings;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( blacklistRegex.length (  )  - 2 != 0 )  {^103^^^^^95^109^[REPLACE] if  ( blacklistRegex.length (  )  != 0 )  {^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.blacklist = this;^106^^^^^95^109^[REPLACE] this.blacklist = null;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.blacklist =  Pattern.compile ( aliasName ) .matcher ( "" ) ;^104^^^^^95^109^[REPLACE] this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.blacklist =  Pattern.compile ( null ) .matcher ( "" ) ;^104^^^^^95^109^[REPLACE] this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.outputStringUsage =  true;^108^^^^^95^109^[REPLACE] this.outputStringUsage = outputStringUsage;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.node =  siblingToInsertVarDeclBefore;^367^^^^^366^369^[REPLACE] this.node = node;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node node Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.parent =  siblingToInsertVarDeclBefore;^368^^^^^366^369^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node node Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.id =  numOccurrencesInfrequentlyExecuted;^392^^^^^391^395^[REPLACE] this.id = id;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.occurrences  = null ;^393^^^^^391^395^[REPLACE] this.occurrences = new ArrayList<StringOccurrence> (  ) ;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.isAliased = true;^394^^^^^391^395^[REPLACE] this.isAliased = false;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^logger.info ( sb.toString (  )  ) ;^115^^^^^114^129^[REPLACE] logger.info ( "Aliasing common strings" ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^NodeTraversal.traverse ( compiler, siblingToInsertVarDeclBefore, this ) ;^118^^^^^114^129^[REPLACE] NodeTraversal.traverse ( compiler, root, this ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node.newString ( Token.NAME, name )  ) ;^121^^^^^114^129^[REPLACE] replaceStringsWithAliases (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  ) ;^124^^^^^114^129^[REPLACE] addAliasDeclarationNodes (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^126^^^^^114^129^[REPLACE] if  ( outputStringUsage )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( Long.toHexString ( hash )  ) ;^127^^^^^114^129^[REPLACE] outputStringUsage (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  parent.getType (  )  != Token.GETPROP || parent.getType (  )  != Token.REGEXP || !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^134^205^[REPLACE] if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( "undefined".charAt ( blacklistRegex )  )  {^145^^^^^135^204^[REPLACE] if  ( "undefined".equals ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^145^146^147^^^135^204^[ADD] if  ( "undefined".equals ( str )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return info;^146^^^^^135^204^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( blacklist == true && blacklist.reset ( str ) .find (  )  )  {^149^^^^^135^204^[REPLACE] if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^return;^149^150^151^^^135^204^[ADD] if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return info;^150^^^^^135^204^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( aliasableStrings != null || aliasableStrings.contains ( str )  )  {^153^^^^^135^204^[REPLACE] if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( t.inGlobalScope (  )  ) {^160^^^^^135^204^[REPLACE] if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.numOccurrences  ||  0 )  {^164^^^^^135^204^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^164^202^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REMOVE]^if  (  ( info.numOccurrences )  == 1 )  {     info.moduleToContainDecl = t.getModule (  ) ;     Node prev = n;     for  ( Node ancestor : n.getAncestors (  )  )  {         if  (  ( ancestor.getType (  )  )  ==  ( SCRIPT )  )  {             info.parentForNewVarDecl = ancestor;             info.siblingToInsertVarDeclBefore = prev;             break;         }         prev = ancestor;     } }else {     JSModule module = t.getModule (  ) ;     if  (  (  (  ( module != null )  &&  (  ( info.moduleToContainDecl )  != null )  )  &&  ( module !=  ( info.moduleToContainDecl )  )  )  &&  ( ! ( moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  )  )  {         module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;         Node varParent = moduleVarParentMap.get ( module ) ;         if  ( varParent == null )  {             varParent = compiler.getNodeForCodeInsertion ( module ) ;             moduleVarParentMap.put ( module, varParent ) ;         }         info.moduleToContainDecl = module;         info.parentForNewVarDecl = varParent;         info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;     } }^185^^^^^164^202^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent !=siblingToInsertVarDeclBefore )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^185^201^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^185^201^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^^^^^185^201^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  ) ; ;^198^^^^^185^201^[REPLACE] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = ancestor; ;^199^^^^^185^201^[REPLACE] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^199^^^^^185^201^[ADD] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^185^201^[REPLACE] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^200^201^^^^185^201^[ADD] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^185^201^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != true )  {^194^^^^^164^202^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^164^202^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^164^202^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^191^192^^^^164^202^[ADD] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  ) ; ;^198^^^^^164^202^[REPLACE] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^198^^^^^164^202^[ADD] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = ancestor; ;^199^^^^^164^202^[REPLACE] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^164^202^[REPLACE] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^JSModule module = t.inGlobalScope (  ) ;^184^^^^^164^202^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^164^202^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   !=  Token.SCRIPT )  {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.parentForNewVarDecl = ancestor;info.siblingToInsertVarDeclBefore = prev;^173^174^175^176^177^135^204^[ADD] if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = varParent; ;^174^^^^^135^204^[REPLACE] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  prev;^175^^^^^135^204^[REPLACE] info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = module; ;^166^^^^^135^204^[REPLACE] info.moduleToContainDecl = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  root;^178^^^^^135^204^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node prev = siblingToInsertVarDeclBefore;^171^^^^^135^204^[REPLACE] Node prev = n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( Node ancestor : n.getAncestors (  )  )  { if  ( ancestor.getType (  )  == Token.SCRIPT )  {^172^^^^^135^204^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor .getString (  )    ||  Token.SCRIPT )  {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^175^176^177^^^135^204^[ADD] info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == this ) {^185^186^187^188^^135^204^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^185^186^187^188^^135^204^[ADD] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != true )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^198^^^^^185^201^[ADD] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != true )  {^194^^^^^135^204^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^135^204^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^^^^^135^204^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.siblingToInsertVarDeclBefore = prev;^174^175^^^^135^204^[ADD] info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  varParent;^178^^^^^135^204^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  nullGraph.getDeepestCommonDependency ( null, info.nullToContainDecl ) ;^191^192^^^^135^204^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^191^192^^^^135^204^[ADD] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^135^204^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^196^^^^135^204^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  ) ; ;^198^^^^^135^204^[REPLACE] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = ancestor; ;^199^^^^^135^204^[REPLACE] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^135^204^[REPLACE] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringOccurrence occurrence = new StringOccurrence ( n, varParent ) ;^154^^^^^135^204^[REPLACE] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^154^155^^^^135^204^[ADD] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ; StringInfo info = getOrCreateStringInfo ( str ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = getOrCreateStringInfo ( blacklistRegex ) ;^155^^^^^135^204^[REPLACE] StringInfo info = getOrCreateStringInfo ( str ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node prev = varParent;^171^^^^^135^204^[REPLACE] Node prev = n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^JSModule module = t .inGlobalScope (  )  ;^184^^^^^135^204^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^193^^^^^135^204^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( t.inGlobalScope (  )  && isInThrowExpression ( n )  )  {^160^^^^^135^204^[REPLACE] if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBeforeumOccurrencesInfrequentlyExecuted  ||  1 )  {^164^^^^^135^204^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^164^202^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^185^186^187^188^^164^202^[ADD] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (siblingToInsertVarDeclBefore != null )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  nullGraph.getDeepestCommonDependency ( null, info.nullToContainDecl ) ;^191^192^^^^185^201^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^185^201^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != null )  {^194^^^^^164^202^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^194^195^196^197^^164^202^[ADD] if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^164^202^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  nullGraph.getDeepestCommonDependency ( null, info.nullToContainDecl ) ;^191^192^^^^164^202^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^193^^^^^164^202^[ADD] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   ||  Token.SCRIPT )  {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^174^^^^^135^204^[ADD] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  siblingToInsertVarDeclBefore;^178^^^^^135^204^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.newString (  )   ||  Token.SCRIPT )  {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^135^204^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REMOVE]^if  (  ( info.numOccurrences )  == 1 )  {     info.moduleToContainDecl = t.getModule (  ) ;     Node prev = n;     for  ( Node ancestor : n.getAncestors (  )  )  {         if  (  ( ancestor.getType (  )  )  ==  ( SCRIPT )  )  {             info.parentForNewVarDecl = ancestor;             info.siblingToInsertVarDeclBefore = prev;             break;         }         prev = ancestor;     } }else {     JSModule module = t.getModule (  ) ;     if  (  (  (  ( module != null )  &&  (  ( info.moduleToContainDecl )  != null )  )  &&  ( module !=  ( info.moduleToContainDecl )  )  )  &&  ( ! ( moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  )  )  {         module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;         Node varParent = moduleVarParentMap.get ( module ) ;         if  ( varParent == null )  {             varParent = compiler.getNodeForCodeInsertion ( module ) ;             moduleVarParentMap.put ( module, varParent ) ;         }         info.moduleToContainDecl = module;         info.parentForNewVarDecl = varParent;         info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;     } }^185^^^^^135^204^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (prev != true )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^moduleVarParentMap.put ( module, varParent ) ;^195^196^^^^185^201^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.parentForNewVarDecl = varParent;^198^199^^^^185^201^[ADD] info.moduleToContainDecl = module; info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != this  )  {^194^^^^^135^204^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^166^^^^^135^204^[ADD] info.moduleToContainDecl = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^135^204^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^199^^^^^135^204^[ADD] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^200^201^^^^135^204^[ADD] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String str = varParent.getString (  ) ;^140^^^^^135^204^[REPLACE] String str = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String encoded = sb.toString (  ) ;^154^^^^^135^204^[REPLACE] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^JSModule module = t.inGlobalScope (  ) ;^184^^^^^135^204^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^135^204^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( "undefined".equals ( blacklistRegex )  )  {^145^^^^^134^205^[REPLACE] if  ( "undefined".equals ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return info;^146^^^^^134^205^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( blacklist == null && blacklist.reset ( str ) .find (  )  )  {^149^^^^^134^205^[REPLACE] if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return info;^150^^^^^134^205^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( aliasableStrings != null ) {^153^^^^^134^205^[REPLACE] if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REMOVE]^if  (  ( info.numOccurrences )  == 1 )  {     info.moduleToContainDecl = t.getModule (  ) ;     Node prev = n;     for  ( Node ancestor : n.getAncestors (  )  )  {         if  (  ( ancestor.getType (  )  )  ==  ( SCRIPT )  )  {             info.parentForNewVarDecl = ancestor;             info.siblingToInsertVarDeclBefore = prev;             break;         }         prev = ancestor;     } }else {     JSModule module = t.getModule (  ) ;     if  (  (  (  ( module != null )  &&  (  ( info.moduleToContainDecl )  != null )  )  &&  ( module !=  ( info.moduleToContainDecl )  )  )  &&  ( ! ( moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  )  )  {         module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;         Node varParent = moduleVarParentMap.get ( module ) ;         if  ( varParent == null )  {             varParent = compiler.getNodeForCodeInsertion ( module ) ;             moduleVarParentMap.put ( module, varParent ) ;         }         info.moduleToContainDecl = module;         info.parentForNewVarDecl = varParent;         info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;     } }^153^^^^^134^205^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  isInThrowExpression ( n )  )  {^160^^^^^134^205^[REPLACE] if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.numOccurrences  !=  4 )  {^164^^^^^134^205^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( parentForNewVarDecl != this )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != null )  {^194^^^^^164^202^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^196^^^^164^202^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^200^201^^^^164^202^[ADD] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^184^^^^^164^202^[ADD] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   !=  Token.SCRIPT )  {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = varParent; ;^174^^^^^134^205^[REPLACE] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  prev;^175^^^^^134^205^[REPLACE] info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^175^176^177^^^134^205^[ADD] info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = module; ;^166^^^^^134^205^[REPLACE] info.moduleToContainDecl = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  null;^178^^^^^134^205^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^178^^^^^134^205^[ADD] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node prev = varParent;^171^^^^^134^205^[REPLACE] Node prev = n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^171^^^^^134^205^[ADD] Node prev = n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( Node ancestor : n.getAncestors (  )  )  { if  ( ancestor.getType (  )  == Token.SCRIPT )  {^172^^^^^134^205^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor .getString (  )    ||  Token.SCRIPT )  {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^174^175^^^^134^205^[ADD] info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^134^205^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != null )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^193^^^^^185^201^[ADD] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != null )  {^194^^^^^134^205^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^134^205^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^196^^^^134^205^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^166^^^^^134^205^[ADD] info.moduleToContainDecl = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^134^205^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  ) ; ;^198^^^^^134^205^[REPLACE] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.parentForNewVarDecl = varParent;^198^199^^^^134^205^[ADD] info.moduleToContainDecl = module; info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = ancestor; ;^199^^^^^134^205^[REPLACE] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^134^205^[REPLACE] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringOccurrence occurrence = varParentew StringOccurrence ( n, parent ) ;^154^^^^^134^205^[REPLACE] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = getOrCreateStringInfo ( blacklistRegex ) ;^155^^^^^134^205^[REPLACE] StringInfo info = getOrCreateStringInfo ( str ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^172^173^174^175^176^134^205^[ADD] for  ( Node ancestor : n.getAncestors (  )  )  { if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^JSModule module = t.inGlobalScope (  ) ;^184^^^^^134^205^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^134^205^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( t.inGlobalScope (  )  ) {^160^^^^^134^205^[REPLACE] if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (numOccurrencesInfrequentlyExecuted  &&  1 )  {^164^^^^^134^205^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == null ) {^185^186^187^188^^164^202^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^198^199^^^^185^201^[ADD] info.moduleToContainDecl = module; info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.newString (  )   &&  Token.SCRIPT )  {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  varParent;^178^^^^^134^205^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   &&  Token.SCRIPT )  {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == null ) {^185^186^187^188^^134^205^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != null )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^191^192^^^^185^201^[ADD] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^134^205^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^191^192^^^^134^205^[ADD] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String str = varParent.getString (  ) ;^140^^^^^134^205^[REPLACE] String str = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^193^^^^^134^205^[ADD] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = strInfoMap.get ( string ) ;^212^^^^^211^218^[REPLACE] StringInfo info = stringInfoMap.get ( string ) ;^[METHOD] getOrCreateStringInfo [TYPE] AliasStrings$StringInfo [PARAMETER] String string [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info != null )  {^213^^^^^211^218^[REPLACE] if  ( info == null )  {^[METHOD] getOrCreateStringInfo [TYPE] AliasStrings$StringInfo [PARAMETER] String string [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info = new StringInfo ( stringInfoMap.size (  )  ) ;stringInfoMap.put ( string, info ) ;^213^214^215^216^^211^218^[ADD] if  ( info == null )  { info = new StringInfo ( stringInfoMap.size (  )  ) ; stringInfoMap.put ( string, info ) ; }^[METHOD] getOrCreateStringInfo [TYPE] AliasStrings$StringInfo [PARAMETER] String string [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info =  new StringOccurrence ( n, parent )   ) ;^214^^^^^211^218^[REPLACE] info = new StringInfo ( stringInfoMap.size (  )  ) ;^[METHOD] getOrCreateStringInfo [TYPE] AliasStrings$StringInfo [PARAMETER] String string [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return;^217^^^^^211^218^[REPLACE] return info;^[METHOD] getOrCreateStringInfo [TYPE] AliasStrings$StringInfo [PARAMETER] String string [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return false;^228^^^^^223^248^[REPLACE] return true;^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return true;^244^^^^^223^248^[REPLACE] return false;^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( Node ancestor : n.getAncestors (  )  )  { if  ( ancestor.getType (  )  == Token.SCRIPT )  {^225^^^^^223^248^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return true;^247^^^^^223^248^[REPLACE] return false;^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^257^^^^^253^264^[REPLACE] if  ( shouldReplaceWithAlias ( literal, info )  )  {^[METHOD] replaceStringsWithAliases [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( StringOccurrence occurrence : info.occurrences )  { replaceStringWithAliasName (^258^^^^^253^264^[REPLACE] for  ( StringOccurrence occurrence : info.occurrences )  {^[METHOD] replaceStringsWithAliases [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^254^^^^^253^264^[REPLACE] for  ( Entry<String, StringInfo> entry : stringInfoMap.entrySet (  )  )  {^[METHOD] replaceStringsWithAliases [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String literal = entry.getValue (  ) ;^255^^^^^253^264^[REPLACE] String literal = entry.getKey (  ) ;^[METHOD] replaceStringsWithAliases [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = null.getValue (  ) ;^256^^^^^253^264^[REPLACE] StringInfo info = entry.getValue (  ) ;^[METHOD] replaceStringsWithAliases [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.isAliased )  {^273^^^^^270^290^[REPLACE] if  ( !info.isAliased )  {^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.siblingToInsertVarDeclBefore != this )  {^282^^^^^270^290^[REPLACE] if  ( info.siblingToInsertVarDeclBefore == null )  {^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl.addChildBefore ( varParent, info.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^[REPLACE] info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^285^286^287^^^270^290^[ADD] info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ; }^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl.addChildToFront ( value ) ;^283^^^^^270^290^[REPLACE] info.parentForNewVarDecl.addChildToFront ( var ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^271^^^^^270^290^[REPLACE] for  ( Entry<String, StringInfo> entry : stringInfoMap.entrySet (  )  )  {^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^271^272^273^274^275^270^290^[ADD] for  ( Entry<String, StringInfo> entry : stringInfoMap.entrySet (  )  )  { StringInfo info = entry.getValue (  ) ; if  ( !info.isAliased )  { continue; }^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = null.getKey (  ) ;^272^^^^^270^290^[REPLACE] StringInfo info = entry.getValue (  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String alias = info.StringInfo ( entry.getKey (  )  ) ;^276^^^^^270^290^[REPLACE] String alias = info.getVariableName ( entry.getKey (  )  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^276^^^^^270^290^[ADD] String alias = info.getVariableName ( entry.getKey (  )  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node value = Node.newString ( Token.STRING, null.getValue (  )  ) ;^277^^^^^270^290^[REPLACE] Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^277^^^^^270^290^[ADD] Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node name = Node.addChildBefore ( Token.NAME, string ) ;^278^^^^^270^290^[REPLACE] Node name = Node.newString ( Token.NAME, alias ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^280^^^^^270^290^[REPLACE] Node var = new Node ( Token.VAR ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (sizeOfStrings  !=  info.numOccurrencesInfrequentlyExecuted )  {^302^^^^^298^325^[REPLACE] if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^return true;^302^303^304^^^298^325^[ADD] if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  { return true; }^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return false;^303^^^^^298^325^[REPLACE] return true;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfLiteral = 2 + str.length (  )  *  2;^317^^^^^298^325^[REPLACE] int sizeOfLiteral = 2 + str.length (  ) ;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfStrings = info.numOccurrences  ;^318^^^^^298^325^[REPLACE] int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfVariable = 0 ;^319^^^^^298^325^[REPLACE] int sizeOfVariable = 3;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^319^^^^^298^325^[ADD] int sizeOfVariable = 3;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfAliases = 6 + sizeOfStrings + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^[REPLACE] int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return sizeOfAliases  !=  sizeOfVariable;;^324^^^^^298^325^[REPLACE] return sizeOfAliases < sizeOfStrings;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, literal )  ) ;^333^334^^^^330^337^[REPLACE] occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[METHOD] replaceStringWithAliasName [TYPE] void [PARAMETER] StringOccurrence occurrence String name StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^333^334^^^^330^337^[ADD] occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[METHOD] replaceStringWithAliasName [TYPE] void [PARAMETER] StringOccurrence occurrence String name StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node.newString ( Token.NAME, literal )  ) ;^334^^^^^330^337^[REPLACE] Node.newString ( Token.NAME, name )  ) ;^[METHOD] replaceStringWithAliasName [TYPE] void [PARAMETER] StringOccurrence occurrence String name StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.isAliased = false;^335^^^^^330^337^[REPLACE] info.isAliased = true;^[METHOD] replaceStringWithAliasName [TYPE] void [PARAMETER] StringOccurrence occurrence String name StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^335^^^^^330^337^[ADD] info.isAliased = true;^[METHOD] replaceStringWithAliasName [TYPE] void [PARAMETER] StringOccurrence occurrence String name StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  ) ;^336^^^^^330^337^[REPLACE] compiler.reportCodeChange (  ) ;^[METHOD] replaceStringWithAliasName [TYPE] void [PARAMETER] StringOccurrence occurrence String name StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^336^^^^^330^337^[ADD] compiler.reportCodeChange (  ) ;^[METHOD] replaceStringWithAliasName [TYPE] void [PARAMETER] StringOccurrence occurrence String name StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringBuilder sb = new StringBuilder (  ) ;^343^^^^^342^355^[REPLACE] StringBuilder sb = new StringBuilder ( "Strings used more than once:\n" ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^343^^^^^342^355^[ADD] StringBuilder sb = new StringBuilder ( "Strings used more than once:\n" ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.numOccurrences  <=  1 )  {^346^^^^^342^355^[REPLACE] if  ( info.numOccurrences > 1 )  {^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb .StringBuilder ( literal )  ;^347^^^^^342^355^[REPLACE] sb.append ( info.numOccurrences ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.StringBuilder ( ": " ) ;^348^^^^^342^355^[REPLACE] sb.append ( ": " ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( string ) ;^349^^^^^342^355^[REPLACE] sb.append ( str ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( '$' ) ;^350^^^^^342^355^[REPLACE] sb.append ( '\n' ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^344^^^^^342^355^[REPLACE] for  ( String str : stringInfoMap.keySet (  )  )  {^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = stringingInfoMap.get ( str ) ;^345^^^^^342^355^[REPLACE] StringInfo info = stringInfoMap.get ( str ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^345^^^^^342^355^[ADD] StringInfo info = stringInfoMap.get ( str ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^logger.info ( "Aliasing common strings" ) ;^354^^^^^342^355^[REPLACE] logger.info ( sb.toString (  )  ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^354^^^^^342^355^[ADD] logger.info ( sb.toString (  )  ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^logger.info ( sb .StringBuilder ( str )   ) ;^354^^^^^342^355^[REPLACE] logger.info ( sb.toString (  )  ) ;^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REMOVE]^int sizeOfLiteral = 2 + str.length (  ) ;^354^^^^^342^355^[REMOVE] ^[METHOD] outputStringUsage [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( aliasName != this )  {^399^^^^^398^404^[REPLACE] if  ( aliasName == null )  {^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^399^400^401^402^^398^404^[ADD] if  ( aliasName == null )  { aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^aliasName =  encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, null ) ;^400^401^^^^398^404^[REPLACE] aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^aliasName =  encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, string ) ;^400^401^^^^398^404^[REPLACE] aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return info;^403^^^^^398^404^[REPLACE] return aliasName;^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^final int MAX_LIMIT = 20 >>> 1;^427^^^^^425^476^[REPLACE] final int MAX_LIMIT = 20;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^427^^^^^425^476^[ADD] final int MAX_LIMIT = 20;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^final int.getBytes = stringLiteral.length (  ) ;^428^^^^^425^476^[REPLACE] final int length = s.length (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^final int limit = Math.min ( length, sizeOfVariable ) ;^429^^^^^425^476^[REPLACE] final int limit = Math.min ( length, MAX_LIMIT ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfLiteral = 2 + str.length (  ) ;^431^^^^^425^476^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^431^^^^^425^476^[ADD] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.StringBuilder ( prefix ) ;^432^^^^^425^476^[REPLACE] sb.append ( prefix ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^boolean protectHex = true;^433^^^^^425^476^[REPLACE] boolean protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^433^^^^^425^476^[ADD] boolean protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( true )  {^438^^^^^425^476^[REPLACE] if  ( protectHex )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ( protectHex )  && ( protectHex )  )  {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( '\n' ) ;^441^^^^^439^442^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^protectHex = true;^443^^^^^425^476^[REPLACE] protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ch <= '9' )  && ( ch >= 'A' && ch <= 'Z' )  && ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^protectHex = false;^453^^^^^446^454^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( '\n' ) ;^449^^^^^446^454^[REPLACE] sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( int i = 0; i  >  limit; i++ )  {^435^^^^^425^476^[REPLACE] for  ( int i = 0; i < limit; i++ )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( !info.isAliased )  {^438^^^^^425^476^[REPLACE] if  ( protectHex )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ( ch >= '0' ) {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^439^440^441^442^^425^476^[ADD] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ch <= '9' )  && ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^441^^^^^439^442^[ADD] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ( ch >= '0' && ch <= '9' )  && ( ch >= 'A' && ch <= 'Z' )  && ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^446^447^448^449^^425^476^[ADD] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  { sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^453^^^^^446^454^[ADD] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb .StringBuilder ( aliasName )  ;^449^^^^^446^454^[REPLACE] sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^443^^^^^425^476^[ADD] protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^protectHex = false; ;^453^^^^^425^476^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^char ch = s.charAt ( sizeOfVariable ) ;^436^^^^^425^476^[REPLACE] char ch = s.charAt ( i ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^436^^^^^425^476^[ADD] char ch = s.charAt ( i ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^protectHex = false;^453^^^^^425^476^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( int i = 3; i < limit; i++ )  {^435^^^^^425^476^[REPLACE] for  ( int i = 0; i < limit; i++ )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^char ch = s.equals ( i ) ;^436^^^^^425^476^[REPLACE] char ch = s.charAt ( i ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( sizeOfVariable *  0.5  == limit )  {^457^^^^^425^476^[REPLACE] if  ( length == limit )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return sb.StringBuilder (  ) ;^458^^^^^425^476^[REPLACE] return sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String encoded = sb.toString (  ) ;^463^^^^^425^476^[REPLACE] CRC32 crc32 = new CRC32 (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^crc32 .getValue (  )  ;^464^^^^^425^476^[REPLACE] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^464^^^^^425^476^[ADD] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^crc32.update ( stringLiteral.getBytes (  )  ) ;^464^^^^^425^476^[REPLACE] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^long hash = crc32.getValue (  )  |hash;^465^^^^^425^476^[REPLACE] long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^465^466^^^^425^476^[ADD] long hash = crc32.getValue (  )  & unitTestHashReductionMask; sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( '\n' ) ;^466^^^^^425^476^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.StringBuilder ( Long.toHexString ( hash )  ) ;^467^^^^^425^476^[REPLACE] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( Long.toHexString ( unitTestHashReductionMask )  ) ;^467^^^^^425^476^[REPLACE] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^467^^^^^425^476^[ADD] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String encoded = sb.StringBuilder (  ) ;^468^^^^^425^476^[REPLACE] String encoded = sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( usedHashedAliases.add ( encoded )  )  {^469^^^^^425^476^[REPLACE] if  ( !usedHashedAliases.add ( encoded )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^469^470^^^473^425^476^[ADD] if  ( !usedHashedAliases.add ( encoded )  )  {  encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^encoded  || = "_"  ||  id;^473^^^^^425^476^[REPLACE] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^473^^^^^425^476^[ADD] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^encoded  && = "_"  &&  id;^473^^^^^425^476^[REPLACE] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return stringLiteral;^475^^^^^425^476^[REPLACE] return encoded;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node parent;^364^^^^^^^[REPLACE] final Node parent;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringOccurrence   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^this.node =  parent;^367^^^^^366^369^[REPLACE] this.node = node;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node node Node parent [CLASS] StringOccurrence   [TYPE]  Node node  parent  [TYPE]  boolean false  true 
[REPLACE]^this.parent =  node;^368^^^^^366^369^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node node Node parent [CLASS] StringOccurrence   [TYPE]  Node node  parent  [TYPE]  boolean false  true 
[REPLACE]^final  long  id;^377^^^^^^^[REPLACE] final int id;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node node Node parent [CLASS] StringInfo   [TYPE]  Node node  parent  [TYPE]  boolean false  true 
[REPLACE]^List<StringOccurrence> occurrences;^381^^^^^^^[REPLACE] final List<StringOccurrence> occurrences;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node node Node parent [CLASS] StringInfo   [TYPE]  Node node  parent  [TYPE]  boolean false  true 
[REPLACE]^short  numOccurrences;^382^^^^^^^[REPLACE] int numOccurrences;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node node Node parent [CLASS] StringInfo   [TYPE]  Node node  parent  [TYPE]  boolean false  true 
[REPLACE]^this.id =  null;^392^^^^^391^395^[REPLACE] this.id = id;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[ADD]^^392^393^^^^391^395^[ADD] this.id = id; this.occurrences = new ArrayList<StringOccurrence> (  ) ;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[REPLACE]^this.occurrences ;^393^^^^^391^395^[REPLACE] this.occurrences = new ArrayList<StringOccurrence> (  ) ;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[ADD]^this.isAliased = false;^393^394^^^^391^395^[ADD] this.occurrences = new ArrayList<StringOccurrence> (  ) ; this.isAliased = false;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[REPLACE]^this.isAliased = true;^394^^^^^391^395^[REPLACE] this.isAliased = false;^[METHOD] <init> [TYPE] AliasStrings$StringInfo(int) [PARAMETER] int id [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[REPLACE]^if  (stringLiteral != null )  {^399^^^^^398^404^[REPLACE] if  ( aliasName == null )  {^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  stringLiteral  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[ADD]^^399^400^401^402^^398^404^[ADD] if  ( aliasName == null )  { aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  stringLiteral  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[REPLACE]^aliasName =  encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, null ) ;^400^401^^^^398^404^[REPLACE] aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  stringLiteral  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[REPLACE]^return sb.toString (  ) ;^403^^^^^398^404^[REPLACE] return aliasName;^[METHOD] getVariableName [TYPE] String [PARAMETER] String stringLiteral [CLASS] StringInfo   [TYPE]  boolean false  isAliased  true  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  stringLiteral  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted 
[REPLACE]^final int MAX_LIMIT = 20 - 3;^427^^^^^425^476^[REPLACE] final int MAX_LIMIT = 20;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^final int length = stringLiteral.length (  ) ;^428^^^^^425^476^[REPLACE] final int length = s.length (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^final int limit = Math.min ( length, numOccurrencesInfrequentlyExecuted ) ;^429^^^^^425^476^[REPLACE] final int limit = Math.min ( length, MAX_LIMIT ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^CRC32 crc32 = new CRC32 (  ) ;^431^^^^^425^476^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^431^^^^^425^476^[ADD] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb .StringBuilder (  )  ;^432^^^^^425^476^[REPLACE] sb.append ( prefix ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^432^^^^^425^476^[ADD] sb.append ( prefix ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^boolean protectHex = true;^433^^^^^425^476^[REPLACE] boolean protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  ( aliasName == null )  {^438^^^^^425^476^[REPLACE] if  ( protectHex )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  ( ch >= '0' ) {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^439^440^441^442^^425^476^[ADD] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb .StringBuilder (  )  ;^441^^^^^439^442^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^protectHex = true;^443^^^^^425^476^[REPLACE] protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb.append ( '$' ) ;^441^^^^^439^442^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  ( ch >= '0' ) {^446^447^448^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^446^447^448^449^^425^476^[ADD] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  { sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^protectHex = false;^453^^^^^446^454^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb.append ( '$' ) ;^449^^^^^446^454^[REPLACE] sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^for  ( int i = 0; i  !=  limit; i++ )  {^435^^^^^425^476^[REPLACE] for  ( int i = 0; i < limit; i++ )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^435^436^^438^439^425^476^[ADD] for  ( int i = 0; i < limit; i++ )  { char ch = s.charAt ( i ) ; if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  ||^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  ( true )  {^438^^^^^425^476^[REPLACE] if  ( protectHex )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  ( ch >= '0' && ch <= '9' )  && (protectHex )  )  {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REMOVE]^sb.append ( ch ) ;^441^^^^^439^442^[REMOVE] ^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  ( protectHex )  )  {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  ( ch >= '0' && ch <= '9' )  && ( ch >= 'A' && ch <= 'Z' )  && ( protectHex )  )  {^446^447^448^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^protectHex = false; ;^453^^^^^446^454^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb .StringBuilder (  )  ;^449^^^^^446^454^[REPLACE] sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^protectHex = false;^453^^^^^425^476^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^453^^^^^425^476^[ADD] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^char ch = stringLiteral .getBytes (  )  ;^436^^^^^425^476^[REPLACE] char ch = s.charAt ( i ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^protectHex = false; ;^453^^^^^425^476^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^for  ( int i = 3; i < limit; i++ )  {^435^^^^^425^476^[REPLACE] for  ( int i = 0; i < limit; i++ )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^char ch = s.charAt ( numOccurrencesInfrequentlyExecuted ) ;^436^^^^^425^476^[REPLACE] char ch = s.charAt ( i ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  ( length + 3 == limit )  {^457^^^^^425^476^[REPLACE] if  ( length == limit )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^return sb .StringBuilder (  )  ;^458^^^^^425^476^[REPLACE] return sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^return sb.StringBuilder (  ) ;^458^^^^^425^476^[REPLACE] return sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^StringBuilder sb = new StringBuilder (  ) ;^463^^^^^425^476^[REPLACE] CRC32 crc32 = new CRC32 (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^crc32.update ( s.length (  )  ) ;^464^^^^^425^476^[REPLACE] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REMOVE]^sb.append ( Integer.toHexString ( ch )  ) ;^464^^^^^425^476^[REMOVE] ^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^crc32.update ( stringLiteral.length (  )  ) ;^464^^^^^425^476^[REPLACE] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^long hash = crc32.getValue (  )  | hash;^465^^^^^425^476^[REPLACE] long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb .StringBuilder (  )  ;^466^^^^^425^476^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^466^^^^^425^476^[ADD] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb.append (   hash    ) ;^467^^^^^425^476^[REPLACE] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^467^468^^^^425^476^[ADD] sb.append ( Long.toHexString ( hash )  ) ; String encoded = sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^String encoded = sb.StringBuilder (  ) ;^468^^^^^425^476^[REPLACE] String encoded = sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  ( usedHashedAliases.add ( encoded )  )  {^469^^^^^425^476^[REPLACE] if  ( !usedHashedAliases.add ( encoded )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^469^470^^^473^425^476^[ADD] if  ( !usedHashedAliases.add ( encoded )  )  {  encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^encoded  <= = "_"  <=  id;^473^^^^^425^476^[REPLACE] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^encoded  & = "_"  &  id;^473^^^^^425^476^[REPLACE] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^return stringLiteral;^475^^^^^425^476^[REPLACE] return encoded;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
