[REPLACE]^private static final Logger logger ;^47^48^^^^47^48^[REPLACE] private static final Logger logger = Logger.getLogger ( AliasStrings.class.getName (  )  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private static final  short  STRING_ALIAS_PREFIX = "$$S_";^51^^^^^^^[REPLACE] private static final String STRING_ALIAS_PREFIX = "$$S_";^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private Matcher blacklist  = null ;^58^^^^^^^[REPLACE] private Matcher blacklist = null;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private final Map<String, StringInfo> stringInfoMap ;^68^69^^^^68^69^[REPLACE] private final Map<String, StringInfo> stringInfoMap = new LinkedHashMap<String, StringInfo> (  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private final Set<String> usedHashedAliases  = null ;^71^^^^^^^[REPLACE] private final Set<String> usedHashedAliases = new LinkedHashSet<String> (  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^private  Map<JSModule, Node> moduleVarParentMap = new HashMap<JSModule, Node> (  ) ;^77^78^^^^77^78^[REPLACE] private final Map<JSModule, Node> moduleVarParentMap = new HashMap<JSModule, Node> (  ) ;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^long unitTestHashReductionMask = ~0;^82^^^^^^^[REPLACE] long unitTestHashReductionMask = ~0L;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^Node node;^363^^^^^^^[REPLACE] final Node node;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^long  id;^377^^^^^^^[REPLACE] final int id;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^List<StringOccurrence> occurrences;^381^^^^^^^[REPLACE] final List<StringOccurrence> occurrences;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^short  numOccurrences;^382^^^^^^^[REPLACE] int numOccurrences;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^short  numOccurrencesInfrequentlyExecuted;^383^^^^^^^[REPLACE] int numOccurrencesInfrequentlyExecuted;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^long  aliasName;^389^^^^^^^[REPLACE] String aliasName;^ [CLASS] AliasStrings StringOccurrence StringInfo  
[REPLACE]^if  ( n.getType (  )  == Token.STRING || parent.getType (  )  != Token.GETPROP || parent.getType (  )  != Token.REGEXP || !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^134^205^[REPLACE] if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REMOVE]^if  (  ( info.numOccurrences )  == 1 )  {     info.moduleToContainDecl = t.getModule (  ) ;     Node prev = n;     for  ( Node ancestor : n.getAncestors (  )  )  {         if  (  ( ancestor.getType (  )  )  ==  ( SCRIPT )  )  {             info.parentForNewVarDecl = ancestor;             info.siblingToInsertVarDeclBefore = prev;             break;         }         prev = ancestor;     } }else {     JSModule module = t.getModule (  ) ;     if  (  (  (  ( module != null )  &&  (  ( info.moduleToContainDecl )  != null )  )  &&  ( module !=  ( info.moduleToContainDecl )  )  )  &&  ( ! ( moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  )  )  {         module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;         Node varParent = moduleVarParentMap.get ( module ) ;         if  ( varParent == null )  {             varParent = compiler.getNodeForCodeInsertion ( module ) ;             moduleVarParentMap.put ( module, varParent ) ;         }         info.moduleToContainDecl = module;         info.parentForNewVarDecl = varParent;         info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;     } }^135^^^^^134^205^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( "undefined".equals ( blacklistRegex )  )  {^145^^^^^135^204^[REPLACE] if  ( "undefined".equals ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return;  ;^146^^^^^135^204^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  blacklist.reset ( str ) .find (  )  )  {^149^^^^^135^204^[REPLACE] if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return;  ;^150^^^^^135^204^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  aliasableStrings.contains ( str )  )  {^153^^^^^135^204^[REPLACE] if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REMOVE]^if  (  ( info.numOccurrences )  == 1 )  {     info.moduleToContainDecl = t.getModule (  ) ;     Node prev = n;     for  ( Node ancestor : n.getAncestors (  )  )  {         if  (  ( ancestor.getType (  )  )  ==  ( SCRIPT )  )  {             info.parentForNewVarDecl = ancestor;             info.siblingToInsertVarDeclBefore = prev;             break;         }         prev = ancestor;     } }else {     JSModule module = t.getModule (  ) ;     if  (  (  (  ( module != null )  &&  (  ( info.moduleToContainDecl )  != null )  )  &&  ( module !=  ( info.moduleToContainDecl )  )  )  &&  ( ! ( moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  )  )  {         module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;         Node varParent = moduleVarParentMap.get ( module ) ;         if  ( varParent == null )  {             varParent = compiler.getNodeForCodeInsertion ( module ) ;             moduleVarParentMap.put ( module, varParent ) ;         }         info.moduleToContainDecl = module;         info.parentForNewVarDecl = varParent;         info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;     } }^153^^^^^135^204^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( t.inGlobalScope (  )  && isInThrowExpression ( n )  )  {^160^^^^^135^204^[REPLACE] if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( numOccurrencesInfrequentlyExecuted  ) {^164^^^^^135^204^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^164^202^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != true )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^185^201^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^191^192^^^^185^201^[ADD] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^185^201^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^198^^^^^185^201^[ADD] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = ancestor  ;^199^^^^^185^201^[REPLACE] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^185^201^[REPLACE] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^185^201^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != null )  {^194^^^^^164^202^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^194^195^196^197^^164^202^[ADD] if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^164^202^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^164^202^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^198^199^^^^164^202^[ADD] info.moduleToContainDecl = module; info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = ancestor  ;^199^^^^^164^202^[REPLACE] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^200^201^^^^164^202^[ADD] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^JSModule module = t.inGlobalScope (  ) ;^184^^^^^164^202^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^193^^^^^164^202^[ADD] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (   Token.SCRIPT )  {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^174^^^^^135^204^[ADD] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  prev;^175^^^^^135^204^[REPLACE] info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^172^173^174^175^176^164^180^[ADD] for  ( Node ancestor : n.getAncestors (  )  )  { if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.newString (  )   !=  Token.SCRIPT )  {^173^^^^^164^180^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.parentForNewVarDecl = ancestor;info.siblingToInsertVarDeclBefore = prev;^173^174^175^176^177^164^180^[ADD] if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = varParent  ;^174^^^^^164^180^[REPLACE] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  prev;^175^^^^^164^180^[REPLACE] info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  null;^178^^^^^164^180^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = module  ;^166^^^^^164^180^[REPLACE] info.moduleToContainDecl = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  varParent;^178^^^^^164^180^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node ancestor  ;^171^^^^^164^180^[REPLACE] Node prev = n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node prev = n  ;^172^^^^^164^180^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.newString (  )   !=  Token.SCRIPT )  {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^173^174^175^176^177^135^204^[ADD] if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.siblingToInsertVarDeclBefore = prev;^174^175^^^^135^204^[ADD] info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == false && info.moduleToContainDecl != false && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^135^204^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (siblingToInsertVarDeclBefore != null )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^^^^^185^201^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^185^201^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  )  ;^198^^^^^185^201^[REPLACE] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^200^201^^^^185^201^[ADD] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (siblingToInsertVarDeclBefore != null )  {^194^^^^^135^204^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^194^195^196^197^^135^204^[ADD] if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^moduleVarParentMap.put ( module, varParent ) ;^195^196^^^^135^204^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( Node ancestor : n.getType (  )  )  {^172^^^^^164^180^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   ) {^173^^^^^164^180^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^174^175^^^^164^180^[ADD] info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^175^176^177^^^164^180^[ADD] info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  siblingToInsertVarDeclBefore;^178^^^^^164^180^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^164^180^[REPLACE] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^196^^^^164^180^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  )  ;^198^^^^^164^180^[REPLACE] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^199^^^^^164^180^[ADD] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^164^180^[REPLACE] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringOccurrence occurrence = new StringOccurrence ( n, varParent ) ;^154^^^^^164^180^[REPLACE] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = getOrCreateStringInfo ( blacklistRegex ) ;^155^^^^^164^180^[REPLACE] StringInfo info = getOrCreateStringInfo ( str ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node prev = siblingToInsertVarDeclBefore;^171^^^^^164^180^[REPLACE] Node prev = n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^184^^^^^164^180^[ADD] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^164^180^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( numOccurrencesInfrequentlyExecuted  ||  1 )  {^164^^^^^135^204^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == null ) {^185^186^187^188^^164^202^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^185^186^187^188^^164^202^[ADD] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent != null )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != null )  {^194^^^^^164^202^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^196^^^^164^202^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^198^^^^^164^202^[ADD] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^199^200^^^^164^202^[ADD] info.parentForNewVarDecl = varParent; info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^164^202^[REPLACE] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap .put ( module , parentForNewVarDecl )  ;^193^^^^^164^202^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.newString (  )   ) {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = varParent  ;^174^^^^^135^204^[REPLACE] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( Node siblingToInsertVarDeclBefore : n.getAncestors (  )  )  {^172^^^^^164^180^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent .getString (  )    &&  Token.SCRIPT )  {^173^^^^^164^180^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^174^^^^^164^180^[ADD] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^178^^^^^164^180^[ADD] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node prev = varParent;^171^^^^^164^180^[REPLACE] Node prev = n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   &&  Token.SCRIPT )  {^173^^^^^135^204^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == true && info.moduleToContainDecl != true && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^135^204^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^196^^^^185^201^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( prev != null )  {^194^^^^^135^204^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^135^204^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^191^192^^^^164^180^[ADD] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^164^180^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^199^200^^^^164^180^[ADD] info.parentForNewVarDecl = varParent; info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return;  ;^146^^^^^164^180^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return;  ;^150^^^^^164^180^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String str = varParent.getString (  ) ;^140^^^^^164^180^[REPLACE] String str = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringOccurrence occurrence = varParentew StringOccurrence ( n, parent ) ;^154^^^^^164^180^[REPLACE] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^JSModule module = t.inGlobalScope (  ) ;^184^^^^^164^180^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( "undefined".charAt ( blacklistRegex )  )  {^145^^^^^134^205^[REPLACE] if  ( "undefined".equals ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return;  ;^146^^^^^134^205^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( blacklist == null ) {^149^^^^^134^205^[REPLACE] if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return;  ;^150^^^^^134^205^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( aliasableStrings != null || aliasableStrings.contains ( str )  )  {^153^^^^^134^205^[REPLACE] if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( t.inGlobalScope (  )  && isInThrowExpression ( n )  )  {^160^^^^^134^205^[REPLACE] if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.numOccurrences  != numOccurrencesInfrequentlyExecuted )  {^164^^^^^134^205^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^164^202^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != null )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^varParent = compiler.getNodeForCodeInsertion ( module ) ;moduleVarParentMap.put ( module, varParent ) ;^194^195^196^197^^185^201^[ADD] if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap .put ( module , parentForNewVarDecl )  ;^193^^^^^185^201^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != false )  {^194^^^^^164^202^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^164^202^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^164^202^[REPLACE] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   &&  Token.SCRIPT )  {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.parentForNewVarDecl = ancestor;info.siblingToInsertVarDeclBefore = prev;^173^174^175^176^177^134^205^[ADD] if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = varParent  ;^174^^^^^134^205^[REPLACE] info.parentForNewVarDecl = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.siblingToInsertVarDeclBefore =  prev;^175^^^^^134^205^[REPLACE] info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( Node ancestor : varParent .getType (  )   )  {^172^^^^^164^180^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (   Token.SCRIPT )  {^173^^^^^164^180^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^166^^^^^164^180^[ADD] info.moduleToContainDecl = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (   Token.SCRIPT )  {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^134^205^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^185^186^187^188^^134^205^[ADD] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != this )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( siblingToInsertVarDeclBefore != false )  {^194^^^^^134^205^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^^^^^134^205^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^173^174^175^176^177^164^180^[ADD] if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^164^180^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl = ancestor  ;^199^^^^^164^180^[REPLACE] info.parentForNewVarDecl = varParent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^200^201^^^^164^180^[ADD] info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^154^^^^^164^180^[ADD] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^155^^^^^164^180^[ADD] StringInfo info = getOrCreateStringInfo ( str ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  isInThrowExpression ( varParent )  )  {^160^^^^^134^205^[REPLACE] if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (numOccurrencesInfrequentlyExecuted  ||  1 )  {^164^^^^^134^205^[REPLACE] if  ( info.numOccurrences == 1 )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == true && info.moduleToContainDecl != true && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^164^202^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (prev != null )  {^194^^^^^185^201^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^191^192^^^^164^202^[ADD] module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^195^^^^^164^202^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.moduleToContainDecl = t.getModule (  )  ;^198^^^^^164^202^[REPLACE] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor .getString (  )    ||  Token.SCRIPT )  {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^for  ( Node ancestor : varParent.getAncestors (  )  )  {^172^^^^^164^180^[REPLACE] for  ( Node ancestor : n.getAncestors (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.newString (  )   ) {^173^^^^^164^180^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   ) {^173^^^^^134^205^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^173^174^175^176^177^134^205^[ADD] if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.siblingToInsertVarDeclBefore = prev;^174^175^^^^134^205^[ADD] info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( module == this && info.moduleToContainDecl != this && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^134^205^[REPLACE] if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^199^200^^^^185^201^[ADD] info.parentForNewVarDecl = varParent; info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( varParent !=siblingToInsertVarDeclBefore )  {^194^^^^^134^205^[REPLACE] if  ( varParent == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^varParent =  compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^134^205^[REPLACE] varParent = compiler.getNodeForCodeInsertion ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( ancestor.getType (  )   ||  Token.SCRIPT )  {^173^^^^^164^180^[REPLACE] if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^prev =  root;^178^^^^^164^180^[REPLACE] prev = ancestor;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^moduleVarParentMap.put ( module, varParent ) ;^195^196^^^^164^180^[ADD] varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^198^^^^^164^180^[ADD] info.moduleToContainDecl = module;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringOccurrence occurrence = new StringOccurrence ( n, siblingToInsertVarDeclBefore ) ;^154^^^^^164^180^[REPLACE] StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^JSModule module = t .inGlobalScope (  )  ;^184^^^^^164^180^[REPLACE] JSModule module = t.getModule (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^193^^^^^164^180^[ADD] Node varParent = moduleVarParentMap.get ( module ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  NodeTraversal t  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  StringOccurrence occurrence  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^225^226^227^228^229^223^248^[ADD] for  ( Node ancestor : n.getAncestors (  )  )  { switch  ( ancestor.getType (  )  )  { case Token.THROW: return true; case Token.IF:^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return false;^228^^^^^223^248^[REPLACE] return true;^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return true;^244^^^^^223^248^[REPLACE] return false;^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return false;  ;^244^^^^^223^248^[REPLACE] return false;^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return true;^247^^^^^223^248^[REPLACE] return false;^[METHOD] isInThrowExpression [TYPE] boolean [PARAMETER] Node n [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  [TYPE]  String STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.isAliased )  {^273^^^^^270^290^[REPLACE] if  ( !info.isAliased )  {^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( value != null )  {^282^^^^^270^290^[REPLACE] if  ( info.siblingToInsertVarDeclBefore == null )  {^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl.addChildBefore ( varParent, info.siblingToInsertVarDeclBefore ) ;^285^286^^^^282^287^[REPLACE] info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl .addChildToBack ( prev )  ;^283^^^^^270^290^[REPLACE] info.parentForNewVarDecl.addChildToFront ( var ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.siblingToInsertVarDeclBefore != false )  {^282^^^^^270^290^[REPLACE] if  ( info.siblingToInsertVarDeclBefore == null )  {^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl .addChildToFront ( prev )  ;^285^286^^^^282^287^[REPLACE] info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^info.parentForNewVarDecl.addChildToFront ( varParent ) ;^283^^^^^270^290^[REPLACE] info.parentForNewVarDecl.addChildToFront ( var ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = getOrCreateStringInfo ( str )  ;^272^^^^^270^290^[REPLACE] StringInfo info = entry.getValue (  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^276^277^^^^270^290^[ADD] String alias = info.getVariableName ( entry.getKey (  )  ) ; Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^277^^^^^270^290^[ADD] Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^278^^^^^270^290^[ADD] Node name = Node.newString ( Token.NAME, alias ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node name = newString ( Token.NAME, alias )  ;^280^^^^^270^290^[REPLACE] Node var = new Node ( Token.VAR ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^long hash =  ( crc32.getValue (  )  )  &  ( unitTestHashReductionMask )  ;^271^^^^^270^290^[REPLACE] for  ( Entry<String, StringInfo> entry : stringInfoMap.entrySet (  )  )  {^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^StringInfo info = entry .getKey (  )  ;^272^^^^^270^290^[REPLACE] StringInfo info = entry.getValue (  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String alias = info.StringInfo ( this.getKey (  )  ) ;^276^^^^^270^290^[REPLACE] String alias = info.getVariableName ( entry.getKey (  )  ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node name = Node.newString ( Token.NAME, string ) ;^278^^^^^270^290^[REPLACE] Node name = Node.newString ( Token.NAME, alias ) ;^[METHOD] addAliasDeclarationNodes [TYPE] void [PARAMETER] [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( info.numOccurrences  ==  info.numOccurrencesInfrequentlyExecuted )  {^302^^^^^298^325^[REPLACE] if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^return true;^302^303^304^^^298^325^[ADD] if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  { return true; }^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return true;  ;^303^^^^^298^325^[REPLACE] return true;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return false;^303^^^^^298^325^[REPLACE] return true;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfLiteral = 2 + str.length (  )  - 2;^317^^^^^298^325^[REPLACE] int sizeOfLiteral = 2 + str.length (  ) ;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfStrings = info.numOccurrences  sizeOfLiteral;^318^^^^^298^325^[REPLACE] int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfVariable = 0 ;^319^^^^^298^325^[REPLACE] int sizeOfVariable = 3;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^int sizeOfAliases = 6  sizeOfVariable  sizeOfVariable  info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^[REPLACE] int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return sizeOfAliases  ;^324^^^^^298^325^[REPLACE] return sizeOfAliases < sizeOfStrings;^[METHOD] shouldReplaceWithAlias [TYPE] boolean [PARAMETER] String str StringInfo info [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  Matcher blacklist  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long unitTestHashReductionMask  [TYPE]  int id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  true  [TYPE]  StringInfo info  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^final int MAX_LIMIT = 7;^427^^^^^425^476^[REPLACE] final int MAX_LIMIT = 20;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^428^^^^^425^476^[ADD] final int length = s.length (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^final int limit = Math.min ( sizeOfVariable, MAX_LIMIT ) ;^429^^^^^425^476^[REPLACE] final int limit = Math.min ( length, MAX_LIMIT ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^long hash =  ( crc32.getValue (  )  )  &  ( unitTestHashReductionMask )  ;^431^^^^^425^476^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.StringBuilder ( prefix ) ;^432^^^^^425^476^[REPLACE] sb.append ( prefix ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^boolean protectHex = true;^433^^^^^425^476^[REPLACE] boolean protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if   (  blacklist != null && blacklist.reset  (  str  )  .find  (    )    )   {  ;^438^^^^^425^476^[REPLACE] if  ( protectHex )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^438^439^440^441^442^425^476^[ADD] if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ( ch >= '0' && ch <= '9' )  && (protectHex )  )  {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( str )  ;^441^^^^^439^442^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^protectHex = true;^443^^^^^425^476^[REPLACE] protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ch <= '9' )  && ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  (  ( ch >= '0' ) {^446^447^448^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^446^447^448^449^^425^476^[ADD] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  { sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^453^^^^^446^454^[ADD] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( str )  ;^449^^^^^446^454^[REPLACE] sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^443^^^^^425^476^[ADD] protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^453^^^^^425^476^[ADD] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^435^436^^438^439^425^476^[ADD] for  ( int i = 0; i < limit; i++ )  { char ch = s.charAt ( i ) ; if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  ||^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^char ch = stringLiteral.charAt ( i ) ;^436^^^^^425^476^[REPLACE] char ch = s.charAt ( i ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( length - 2 == limit )  {^457^^^^^425^476^[REPLACE] if  ( length == limit )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return sb.StringBuilder (  ) ;^458^^^^^425^476^[REPLACE] return sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^long hash =  ( crc32.getValue (  )  )  &  ( unitTestHashReductionMask )  ;^463^^^^^425^476^[REPLACE] CRC32 crc32 = new CRC32 (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^crc32.update ( stringLiteral.getBytes (  )  ) ;^464^^^^^425^476^[REPLACE] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^long hash = hash (  )  | hash;^465^^^^^425^476^[REPLACE] long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb .StringBuilder ( name )  ;^466^^^^^425^476^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^toHexString ( hash )  ;^467^^^^^425^476^[REPLACE] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^sb.append ( Long.toHexString ( unitTestHashReductionMask )  ) ;^467^^^^^425^476^[REPLACE] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^467^^^^^425^476^[ADD] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^String encoded = sb.StringBuilder (  ) ;^468^^^^^425^476^[REPLACE] String encoded = sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^if  ( usedHashedAliases.add ( stringLiteral )  )  {^469^^^^^425^476^[REPLACE] if  ( !usedHashedAliases.add ( encoded )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^469^470^^^473^425^476^[ADD] if  ( !usedHashedAliases.add ( encoded )  )  {  encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[ADD]^^473^^^^^425^476^[ADD] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^encoded =STRING_ALIAS_PREFIX  id;^473^^^^^425^476^[REPLACE] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^return stringLiteral;^475^^^^^425^476^[REPLACE] return encoded;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] AliasStrings StringOccurrence StringInfo   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node node;^363^^^^^^^[REPLACE] final Node node;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringOccurrence   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^Node parent;^364^^^^^^^[REPLACE] final Node parent;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringOccurrence   [TYPE]  Set aliasableStrings  strings  usedHashedAliases  [TYPE]  StringBuilder sb  [TYPE]  Matcher blacklist  [TYPE]  CRC32 crc32  [TYPE]  Node ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  [TYPE]  String STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  [TYPE]  Logger logger  [TYPE]  JSModuleGraph moduleGraph  [TYPE]  long hash  unitTestHashReductionMask  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isAliased  outputStringUsage  protectHex  true  [TYPE]  char ch  [TYPE]  JSModule module  moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  Map moduleVarParentMap  stringInfoMap 
[REPLACE]^final int MAX_LIMIT = 4;^427^^^^^425^476^[REPLACE] final int MAX_LIMIT = 20;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^final int length = stringLiteral.length (  ) ;^428^^^^^425^476^[REPLACE] final int length = s.length (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^429^^^^^425^476^[ADD] final int limit = Math.min ( length, MAX_LIMIT ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^String encoded = sb.toString (  )  ;^431^^^^^425^476^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^( crc32.getValue (  )  )  ;^432^^^^^425^476^[REPLACE] sb.append ( prefix ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REMOVE]^sb.append ( ch )  ;^432^^^^^425^476^[REMOVE] ^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^boolean protectHex = true;^433^^^^^425^476^[REPLACE] boolean protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if   (    (  ch >= '0' && ch <= '9'  )   ||  (  ch >= 'a' && ch <= 'f'  )    )   {  ;^438^^^^^425^476^[REPLACE] if  ( protectHex )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  (protectHex )  ) {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^439^440^441^442^^425^476^[ADD] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb.append ( ch )  ;^441^^^^^439^442^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^441^^^^^439^442^[ADD] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^protectHex = true;^443^^^^^425^476^[REPLACE] protectHex = false;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  (  ch <= '9' )  && ( ch >= 'A' && ch <= 'Z' )  && (protectHex )  )  {^446^447^448^^^425^476^[REPLACE] if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^protectHex = false  ;^453^^^^^446^454^[REPLACE] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb.append ( '$' )  ;^449^^^^^446^454^[REPLACE] sb.append ( ch ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^453^^^^^425^476^[ADD] protectHex = true;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^435^436^^438^439^425^476^[ADD] for  ( int i = 0; i < limit; i++ )  { char ch = s.charAt ( i ) ; if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  ||^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^char ch = stringLiteral.charAt ( i ) ;^436^^^^^425^476^[REPLACE] char ch = s.charAt ( i ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  ( length *  2 == limit )  {^457^^^^^425^476^[REPLACE] if  ( length == limit )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^return sb.StringBuilder (  ) ;^458^^^^^425^476^[REPLACE] return sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^String encoded = sb.toString (  )  ;^463^^^^^425^476^[REPLACE] CRC32 crc32 = new CRC32 (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^crc32.update ( stringLiteral.getBytes (  )  ) ;^464^^^^^425^476^[REPLACE] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^crc32.update ( s.length (  )  ) ;^464^^^^^425^476^[REPLACE] crc32.update ( s.getBytes (  )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^long hash = crc32.getValue (  )  |hash;^465^^^^^425^476^[REPLACE] long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^sb.append ( ch )  ;^466^^^^^425^476^[REPLACE] sb.append ( '_' ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^toHexString ( hash )  ;^467^^^^^425^476^[REPLACE] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[ADD]^^467^^^^^425^476^[ADD] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^toHexString ( ch )  ;^467^^^^^425^476^[REPLACE] sb.append ( Long.toHexString ( hash )  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^String encoded = sb.StringBuilder (  ) ;^468^^^^^425^476^[REPLACE] String encoded = sb.toString (  ) ;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^if  ( usedHashedAliases.add ( stringLiteral )  )  {^469^^^^^425^476^[REPLACE] if  ( !usedHashedAliases.add ( encoded )  )  {^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^encoded = "_"  id;^473^^^^^425^476^[REPLACE] encoded += "_" + id;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
[REPLACE]^return stringLiteral;^475^^^^^425^476^[REPLACE] return encoded;^[METHOD] encodeStringAsIdentifier [TYPE] String [PARAMETER] String prefix String s [CLASS] StringInfo   [TYPE]  boolean false  isAliased  protectHex  true  [TYPE]  StringBuilder sb  [TYPE]  CRC32 crc32  [TYPE]  Node parentForNewVarDecl  siblingToInsertVarDeclBefore  [TYPE]  char ch  [TYPE]  JSModule moduleToContainDecl  [TYPE]  List occurrences  [TYPE]  String aliasName  encoded  prefix  s  stringLiteral  [TYPE]  int MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  [TYPE]  long hash 
