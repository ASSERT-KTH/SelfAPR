[REPLACE]^private  AbstractCompiler compiler;^38^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^private final Set<Node> badFunctionNodes ;^39^^^^^^^[REPLACE] private final Set<Node> badFunctionNodes = Sets.newHashSet (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^private  Set<Node> goodFunctionNodes = Sets.newHashSet (  ) ;^40^^^^^^^[REPLACE] private final Set<Node> goodFunctionNodes = Sets.newHashSet (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^private final List<CallSite> callSites ;^41^^^^^^^[REPLACE] private final List<CallSite> callSites = Lists.newArrayList (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^private GatherFunctions gatherFunctions  = null ;^43^^^^^^^[REPLACE] private GatherFunctions gatherFunctions = new GatherFunctions (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^Node parent;^180^^^^^^^[REPLACE] final Node parent;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^Node callNode;^182^^^^^^^[REPLACE] final Node callNode;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^Node nextGetPropNode;^183^^^^^^^[REPLACE] final Node nextGetPropNode;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^if  ( !NodeUtil.isExpressionNode ( nextGetPropNode )  )  {^108^^^^^107^175^[REPLACE] if  ( !NodeUtil.isExpressionNode ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^return;^108^109^110^^^107^175^[ADD] if  ( !NodeUtil.isExpressionNode ( n )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^109^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node callNode = parent.getFirstChild (  ) ;^112^^^^^107^175^[REPLACE] Node callNode = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( callNode.removeChild (  )   ==  Token.CALL )  {^113^^^^^107^175^[REPLACE] if  ( callNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^114^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node getPropNode = parent.getFirstChild (  ) ;^117^^^^^107^175^[REPLACE] Node getPropNode = callNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( rValue.removeChild (  )   ==  Token.GETPROP )  {^118^^^^^107^175^[REPLACE] if  ( getPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^118^119^120^^^107^175^[ADD] if  ( getPropNode.getType (  )  != Token.GETPROP )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^119^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^122^^^^^107^175^[ADD] Node getPropFirstChildNode = getPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( nextGetPropFirstChildNode ) ;^124^125^^^^107^175^[REPLACE] Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( getPropNode ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( definitions != null )  {^126^^^^^107^175^[REPLACE] if  ( definitions == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^127^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( rValue != null )  {^131^^^^^107^175^[REPLACE] if  ( rValue == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^132^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( badFunctionNodes.contains ( nextGetPropNode )  )  {^134^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^135^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( !goodFunctionNodes.contains ( root )  )  {^137^^^^^107^175^[REPLACE] if  ( !goodFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( badFunctionNodes .add (  )   )  {^139^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^140^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if   (  !goodFunctionNodes.contains  (  rValue  )    )   {  ;^139^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( root != false )  {^131^^^^^107^175^[REPLACE] if  ( rValue == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^return;^131^132^133^^^107^175^[ADD] if  ( rValue == null )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( badFunctionNodes.contains ( nextNode )  )  {^134^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextNode = n.getNext (  )  ;^130^^^^^107^175^[REPLACE] Node rValue = definition.getRValue (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node callNode = n.getFirstChild (  )  ;^129^^^^^107^175^[REPLACE] for  ( Definition definition : definitions )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextGetPropFirstChildNodeextNode = n.getNext (  ) ;^145^^^^^107^175^[REPLACE] Node nextNode = n.getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( nextNode != false || nextNode.getType (  )  != Token.EXPR_RESULT )  {^146^147^^^^107^175^[REPLACE] if  ( nextNode == null || nextNode.getType (  )  != Token.EXPR_RESULT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^148^^^^^146^149^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^148^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextCallNode = nextGetPropNode.getFirstChild (  ) ;^151^^^^^107^175^[REPLACE] Node nextCallNode = nextNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( nextCallNode.getType (  )   ==  Token.CALL )  {^152^^^^^107^175^[REPLACE] if  ( nextCallNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^153^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node callNode = n.getFirstChild (  )  ;^156^^^^^107^175^[REPLACE] Node nextGetPropNode = nextCallNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( nextGetPropNode.getType (  )   ==  Token.GETPROP )  {^157^^^^^107^175^[REPLACE] if  ( nextGetPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^157^158^159^^^107^175^[ADD] if  ( nextGetPropNode.getType (  )  != Token.GETPROP )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^158^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextGetPropFirstChildNode = root.getFirstChild (  ) ;^161^^^^^107^175^[REPLACE] Node nextGetPropFirstChildNode = nextGetPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( !nextGetPropFirstChildNode.removeChild ( getPropFirstChildNode )  )  {^162^163^^^^107^175^[REPLACE] if  ( !nextGetPropFirstChildNode.checkTreeEqualsSilent ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^164^^^^^162^165^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^164^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( NodeUtil.mayEffectMutableState ( nextGetPropNode )  )  {^167^^^^^107^175^[REPLACE] if  ( NodeUtil.mayEffectMutableState ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return;  ;^168^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^callSites.add ( new CallSite ( parent, n, callNode, root, nextGetPropFirstChildNode )  ) ;^173^174^^^^107^175^[REPLACE] callSites.add ( new CallSite ( parent, n, callNode, nextGetPropNode, nextGetPropFirstChildNode )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( !NodeUtil.mayEffectMutableState ( n )  )  {^108^^^^^107^175^[REPLACE] if  ( !NodeUtil.isExpressionNode ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^return;^108^109^110^^^107^175^[ADD] if  ( !NodeUtil.isExpressionNode ( n )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^109^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^112^^^^^107^175^[ADD] Node callNode = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( callNode.getType (  )   ==  Token.CALL )  {^113^^^^^107^175^[REPLACE] if  ( callNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REMOVE]^if  (  ( getPropNode.getType (  )  )  !=  ( GETPROP )  )  {     return ; }^113^^^^^107^175^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^114^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node getPropNode = parent.getFirstChild (  ) ;^117^^^^^107^175^[REPLACE] Node getPropNode = callNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( getPropNode.getType (  )   ==  Token.GETPROP )  {^118^^^^^107^175^[REPLACE] if  ( getPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^119^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^122^^^^^107^175^[ADD] Node getPropFirstChildNode = getPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( rValue ) ;^124^125^^^^107^175^[REPLACE] Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( getPropNode ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( definitions != null )  {^126^^^^^107^175^[REPLACE] if  ( definitions == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^127^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( rValue != null )  {^131^^^^^107^175^[REPLACE] if  ( rValue == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^132^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( badFunctionNodes.contains ( nextNode )  )  {^134^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^135^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( !goodFunctionNodes.contains ( nextGetPropNode )  )  {^137^^^^^107^175^[REPLACE] if  ( !goodFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^137^138^139^140^141^107^175^[ADD] if  ( !goodFunctionNodes.contains ( rValue )  )  { NodeTraversal.traverse ( compiler, rValue, gatherFunctions ) ; if  ( badFunctionNodes.contains ( rValue )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( badFunctionNodes.contains ( nextNode )  )  {^139^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^139^140^141^^^107^175^[ADD] if  ( badFunctionNodes.contains ( rValue )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^140^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if   (  !goodFunctionNodes.contains  (  rValue  )    )   {  ;^139^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  (nextNode != true )  {^131^^^^^107^175^[REPLACE] if  ( rValue == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^return;^134^135^136^^^107^175^[ADD] if  ( badFunctionNodes.contains ( rValue )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( !goodFunctionNodes.contains ( nextNode )  )  {^137^^^^^107^175^[REPLACE] if  ( !goodFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^130^^^^^107^175^[ADD] Node rValue = definition.getRValue (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node callNode = n.getFirstChild (  )  ;^129^^^^^107^175^[REPLACE] for  ( Definition definition : definitions )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextNode = n.getNext (  )  ;^130^^^^^107^175^[REPLACE] Node rValue = definition.getRValue (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node callNode = n.getFirstChild (  )  ;^145^^^^^107^175^[REPLACE] Node nextNode = n.getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( nextNode != false || nextNode.getType (  )  != Token.EXPR_RESULT )  {^146^147^^^^107^175^[REPLACE] if  ( nextNode == null || nextNode.getType (  )  != Token.EXPR_RESULT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^146^147^148^149^^107^175^[ADD] if  ( nextNode == null || nextNode.getType (  )  != Token.EXPR_RESULT )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^148^^^^^146^149^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^148^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextCallNode = nextGetPropNode .getType (  )  ;^151^^^^^107^175^[REPLACE] Node nextCallNode = nextNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( nextCallNode.getType (  )   ==  Token.CALL )  {^152^^^^^107^175^[REPLACE] if  ( nextCallNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^153^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextGetPropNode = nextGetPropNode .getType (  )  ;^156^^^^^107^175^[REPLACE] Node nextGetPropNode = nextCallNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( rValue.checkTreeEqualsSilent (  )   ==  Token.GETPROP )  {^157^^^^^107^175^[REPLACE] if  ( nextGetPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^158^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextGetPropNode = nextCallNode.getFirstChild (  )  ;^161^^^^^107^175^[REPLACE] Node nextGetPropFirstChildNode = nextGetPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( nextGetPropFirstChildNode.checkTreeEqualsSilent ( getPropFirstChildNode )  )  {^162^163^^^^107^175^[REPLACE] if  ( !nextGetPropFirstChildNode.checkTreeEqualsSilent ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^162^163^164^165^^107^175^[ADD] if  ( !nextGetPropFirstChildNode.checkTreeEqualsSilent ( getPropFirstChildNode )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^164^^^^^162^165^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^164^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( NodeUtil.mayEffectMutableState ( rValue )  )  {^167^^^^^107^175^[REPLACE] if  ( NodeUtil.mayEffectMutableState ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^return;  ;^168^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^callSites.add ( parentew CallSite ( parent, n, callNode, nextGetPropNode, nextGetPropFirstChildNode )  ) ;^173^174^^^^107^175^[REPLACE] callSites.add ( new CallSite ( parent, n, callNode, nextGetPropNode, nextGetPropFirstChildNode )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node n;^181^^^^^^^[REPLACE] final Node n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CallSite   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node callNode;^182^^^^^^^[REPLACE] final Node callNode;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CallSite   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextGetPropFirstChildNode;^184^^^^^^^[REPLACE] final Node nextGetPropFirstChildNode;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CallSite   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
