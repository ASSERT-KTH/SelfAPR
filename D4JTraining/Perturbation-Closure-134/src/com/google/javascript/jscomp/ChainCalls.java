[REPLACE]^private final Set<Node> badFunctionNodes  = null ;^39^^^^^^^[REPLACE] private final Set<Node> badFunctionNodes = Sets.newHashSet (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^private final Set<Node> goodFunctionNodes ;^40^^^^^^^[REPLACE] private final Set<Node> goodFunctionNodes = Sets.newHashSet (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^private final List<CallSite> callSites  = null ;^41^^^^^^^[REPLACE] private final List<CallSite> callSites = Lists.newArrayList (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^private GatherFunctions gatherFunctions  = null ;^43^^^^^^^[REPLACE] private GatherFunctions gatherFunctions = new GatherFunctions (  ) ;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^Node parent;^180^^^^^^^[REPLACE] final Node parent;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^Node n;^181^^^^^^^[REPLACE] final Node n;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^Node nextGetPropFirstChildNode;^184^^^^^^^[REPLACE] final Node nextGetPropFirstChildNode;^ [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite  
[REPLACE]^this.compiler =  null;^46^^^^^45^47^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^this.parent =  nextGetPropNode;^188^^^^^186^193^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^this.n =  null;^189^^^^^186^193^[REPLACE] this.n = n;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^this.callNode =  parent;^190^^^^^186^193^[REPLACE] this.callNode = callNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^this.nextGetPropNode =  parent;^191^^^^^186^193^[REPLACE] this.nextGetPropNode = nextGetPropNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^this.nextGetPropFirstChildNode =  parent;^192^^^^^186^193^[REPLACE] this.nextGetPropFirstChildNode = nextGetPropFirstChildNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^defFinder  = null ;^51^^^^^50^63^[REPLACE] defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  List callSites  [TYPE]  CallSite callSite  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^defFinder.process ( externs, parent ) ;^52^^^^^50^63^[REPLACE] defFinder.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  List callSites  [TYPE]  CallSite callSite  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^NodeTraversal.traverse ( compiler, parent, new GatherCallSites (  )  ) ;^54^^^^^50^63^[REPLACE] NodeTraversal.traverse ( compiler, root, new GatherCallSites (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  List callSites  [TYPE]  CallSite callSite  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^for  ( CallSite callSite : callSites )  { callSite.parent.removeChild ( callSite.n ) ;^56^^^^^50^63^[REPLACE] for  ( CallSite callSite : callSites )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  Node callNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  List callSites  [TYPE]  CallSite callSite  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^ControlFlowGraph<Node> cfg = t .getScopeRoot (  )  ;^71^^^^^70^84^[REPLACE] ControlFlowGraph<Node> cfg = t.getControlFlowGraph (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^71^^^^^70^84^[ADD] ControlFlowGraph<Node> cfg = t.getControlFlowGraph (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( root.getType (  )  != Token.RETURN || exitNode.getFirstChild (  )  != null || exitNode.getFirstChild (  ) .getType (  )  != Token.THIS )  {^75^76^77^^^70^84^[REPLACE] if  ( exitNode.getType (  )  != Token.RETURN || exitNode.getFirstChild (  )  == null || exitNode.getFirstChild (  ) .getType (  )  != Token.THIS )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^75^76^77^78^79^70^84^[ADD] if  ( exitNode.getType (  )  != Token.RETURN || exitNode.getFirstChild (  )  == null || exitNode.getFirstChild (  ) .getType (  )  != Token.THIS )  { badFunctionNodes.add ( t.getScopeRoot (  )  ) ; return;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^79^^^^^70^84^[REPLACE] return;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^for  ( DiGraphEdge<Node, Branch> s : cfg.getImplicitReturn (  ) .getInEdges (  )  )  { Node exitNode = s.getSource (  ) .getValue (  ) ;^73^^^^^70^84^[REPLACE] for  ( DiGraphEdge<Node, Branch> s : cfg.getImplicitReturn (  ) .getInEdges (  )  )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node exitNode = s.getSource (  )  .getType (  )  ;^74^^^^^70^84^[REPLACE] Node exitNode = s.getSource (  ) .getValue (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^badFunctionNodes.add ( t.getScopeRoot (  )  ) ;^83^^^^^70^84^[REPLACE] goodFunctionNodes.add ( t.getScopeRoot (  )  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^83^^^^^70^84^[ADD] goodFunctionNodes.add ( t.getScopeRoot (  )  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^goodFunctionNodes.add ( t.getControlFlowGraph (  )  ) ;^83^^^^^70^84^[REPLACE] goodFunctionNodes.add ( t.getScopeRoot (  )  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  ControlFlowGraph cfg  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return false;^93^^^^^91^94^[REPLACE] return true;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node callNode  exitNode  externs  n  nextGetPropFirstChildNode  nextGetPropNode  parent  root  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( !NodeUtil .mayEffectMutableState ( root )   )  {^108^^^^^107^175^[REPLACE] if  ( !NodeUtil.isExpressionNode ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^109^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node callNode = parent.getType (  ) ;^112^^^^^107^175^[REPLACE] Node callNode = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( callNode.getType (  )   ==  Token.CALL )  {^113^^^^^107^175^[REPLACE] if  ( callNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^113^114^115^^^107^175^[ADD] if  ( callNode.getType (  )  != Token.CALL )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^114^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node getPropNode = parent.getFirstChild (  ) ;^117^^^^^107^175^[REPLACE] Node getPropNode = callNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^117^^^^^107^175^[ADD] Node getPropNode = callNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( getPropNode.getType (  )   ==  Token.GETPROP )  {^118^^^^^107^175^[REPLACE] if  ( getPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^119^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextGetPropFirstChildNode = nextGetPropNode.getFirstChild (  ) ;^122^^^^^107^175^[REPLACE] Node getPropFirstChildNode = getPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( nextGetPropFirstChildNode ) ;^124^125^^^^107^175^[REPLACE] Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( getPropNode ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^124^125^^^^107^175^[ADD] Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( getPropNode ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( definitions != null )  {^126^^^^^107^175^[REPLACE] if  ( definitions == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^return;^126^127^128^^^107^175^[ADD] if  ( definitions == null )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^127^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( rValue != true )  {^131^^^^^107^175^[REPLACE] if  ( rValue == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^132^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( badFunctionNodes .add (  )   )  {^134^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^return;^134^135^136^^^107^175^[ADD] if  ( badFunctionNodes.contains ( rValue )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^135^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( !goodFunctionNodes.contains ( root )  )  {^137^^^^^107^175^[REPLACE] if  ( !goodFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( badFunctionNodes.contains ( nextGetPropNode )  )  {^139^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^140^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( badFunctionNodes.contains ( root )  )  {^139^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^for  ( Definition definition : definitions )  { Node rValue = definition.getRValue (  ) ;^129^^^^^107^175^[REPLACE] for  ( Definition definition : definitions )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^129^130^131^132^133^107^175^[ADD] for  ( Definition definition : definitions )  { Node rValue = definition.getRValue (  ) ; if  ( rValue == null )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextNode = n.getNext (  ) ;^130^^^^^107^175^[REPLACE] Node rValue = definition.getRValue (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextNode = n .getType (  )  ;^145^^^^^107^175^[REPLACE] Node nextNode = n.getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( root != null ) {^146^147^^^^107^175^[REPLACE] if  ( nextNode == null || nextNode.getType (  )  != Token.EXPR_RESULT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^148^^^^^146^149^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^148^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextCallNode = nextGetPropNode.getFirstChild (  ) ;^151^^^^^107^175^[REPLACE] Node nextCallNode = nextNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( nextCallNode.removeChild (  )   ==  Token.CALL )  {^152^^^^^107^175^[REPLACE] if  ( nextCallNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^152^153^154^^^107^175^[ADD] if  ( nextCallNode.getType (  )  != Token.CALL )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^153^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextGetPropNode = nextCallNode .removeChild ( getPropNode )  ;^156^^^^^107^175^[REPLACE] Node nextGetPropNode = nextCallNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( nextGetPropNode .getNext (  )    ==  Token.GETPROP )  {^157^^^^^107^175^[REPLACE] if  ( nextGetPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^158^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^Node nextGetPropFirstChildNode = nextGetPropNode.getType (  ) ;^161^^^^^107^175^[REPLACE] Node nextGetPropFirstChildNode = nextGetPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^161^^^^^107^175^[ADD] Node nextGetPropFirstChildNode = nextGetPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( !nextGetPropFirstChildNode.checkTreeEqualsSilent ( root )  )  {^162^163^^^^107^175^[REPLACE] if  ( !nextGetPropFirstChildNode.checkTreeEqualsSilent ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^164^^^^^162^165^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^164^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^if  ( NodeUtil.mayEffectMutableState ( nextGetPropFirstChildNode )  )  {^167^^^^^107^175^[REPLACE] if  ( NodeUtil.mayEffectMutableState ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^return;^167^168^169^^^107^175^[ADD] if  ( NodeUtil.mayEffectMutableState ( getPropFirstChildNode )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^return true;^168^^^^^107^175^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^callSites.add ( parentew CallSite ( parent, n, callNode, nextGetPropNode, nextGetPropFirstChildNode )  ) ;^173^174^^^^107^175^[REPLACE] callSites.add ( new CallSite ( parent, n, callNode, nextGetPropNode, nextGetPropFirstChildNode )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[ADD]^^173^174^^^^107^175^[ADD] callSites.add ( new CallSite ( parent, n, callNode, nextGetPropNode, nextGetPropFirstChildNode )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] ChainCalls GatherFunctions GatherCallSites CallSite   [TYPE]  AbstractCompiler compiler  [TYPE]  Set badFunctionNodes  goodFunctionNodes  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  exitNode  externs  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  root  [TYPE]  Definition definition  [TYPE]  Collection definitions  [TYPE]  List callSites  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  GatherFunctions gatherFunctions 
[REPLACE]^ControlFlowGraph<Node> cfg = t.getScopeRoot (  ) ;^71^^^^^70^84^[REPLACE] ControlFlowGraph<Node> cfg = t.getControlFlowGraph (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] GatherFunctions   [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  ControlFlowGraph cfg  [TYPE]  Node exitNode 
[REPLACE]^if  ( exitNode.getType (  )  != Token.RETURN ) {^75^76^77^^^70^84^[REPLACE] if  ( exitNode.getType (  )  != Token.RETURN || exitNode.getFirstChild (  )  == null || exitNode.getFirstChild (  ) .getType (  )  != Token.THIS )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] GatherFunctions   [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  ControlFlowGraph cfg  [TYPE]  Node exitNode 
[REPLACE]^return true;^79^^^^^70^84^[REPLACE] return;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] GatherFunctions   [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  ControlFlowGraph cfg  [TYPE]  Node exitNode 
[REPLACE]^Node exitNode = s.getSource (  ) .getValue (  ) ;^73^^^^^70^84^[REPLACE] for  ( DiGraphEdge<Node, Branch> s : cfg.getImplicitReturn (  ) .getInEdges (  )  )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] GatherFunctions   [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  ControlFlowGraph cfg  [TYPE]  Node exitNode 
[REPLACE]^Node exitNode = true.getSource (  ) .getValue (  ) ;^74^^^^^70^84^[REPLACE] Node exitNode = s.getSource (  ) .getValue (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] GatherFunctions   [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  ControlFlowGraph cfg  [TYPE]  Node exitNode 
[REPLACE]^goodFunctionNodes.add ( t.getControlFlowGraph (  )  ) ;^83^^^^^70^84^[REPLACE] goodFunctionNodes.add ( t.getScopeRoot (  )  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] GatherFunctions   [TYPE]  DiGraphEdge s  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  ControlFlowGraph cfg  [TYPE]  Node exitNode 
[REPLACE]^return false;^93^^^^^91^94^[REPLACE] return true;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] GatherFunctions   [TYPE]  boolean false  true  [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node n  parent 
[REPLACE]^if  ( !NodeUtil.isExpressionNode ( parent )  )  {^108^^^^^107^175^[REPLACE] if  ( !NodeUtil.isExpressionNode ( n )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node callNode = nextNode.getFirstChild (  ) ;^112^^^^^107^175^[REPLACE] Node callNode = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( callNode .getNext (  )    ==  Token.CALL )  {^113^^^^^107^175^[REPLACE] if  ( callNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node getPropNode = rValue.getFirstChild (  ) ;^117^^^^^107^175^[REPLACE] Node getPropNode = callNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^^117^^^^^107^175^[ADD] Node getPropNode = callNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( rValue.checkTreeEqualsSilent (  )   ==  Token.GETPROP )  {^118^^^^^107^175^[REPLACE] if  ( getPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^return;^118^119^120^^^107^175^[ADD] if  ( getPropNode.getType (  )  != Token.GETPROP )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node getPropFirstChildNode = rValue.getFirstChild (  ) ;^122^^^^^107^175^[REPLACE] Node getPropFirstChildNode = getPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( nextGetPropNode ) ;^124^125^^^^107^175^[REPLACE] Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( getPropNode ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( null != this  )  {^126^^^^^107^175^[REPLACE] if  ( definitions == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( nextNode != null )  {^131^^^^^107^175^[REPLACE] if  ( rValue == null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( badFunctionNodes.contains ( nextNode )  )  {^134^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( !goodFunctionNodes.contains ( nextNode )  )  {^137^^^^^107^175^[REPLACE] if  ( !goodFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( badFunctionNodes.contains ( nextNode )  )  {^139^^^^^107^175^[REPLACE] if  ( badFunctionNodes.contains ( rValue )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^return;^139^140^141^^^107^175^[ADD] if  ( badFunctionNodes.contains ( rValue )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^for  ( Definition definition : definitions )  { Node rValue = definition.getRValue (  ) ;^129^^^^^107^175^[REPLACE] for  ( Definition definition : definitions )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^for  ( Definition definition : definitions )  { Node rValue = definition.getRValue (  ) ;^130^^^^^107^175^[REPLACE] Node rValue = definition.getRValue (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextGetPropNodeextNode = n.getNext (  ) ;^145^^^^^107^175^[REPLACE] Node nextNode = n.getNext (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  (  nextNode.getType (  )  != Token.EXPR_RESULT )  {^146^147^^^^107^175^[REPLACE] if  ( nextNode == null || nextNode.getType (  )  != Token.EXPR_RESULT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextCallNode = rValue.getFirstChild (  ) ;^151^^^^^107^175^[REPLACE] Node nextCallNode = nextNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( nextCallNode.checkTreeEqualsSilent (  )   ==  Token.CALL )  {^152^^^^^107^175^[REPLACE] if  ( nextCallNode.getType (  )  != Token.CALL )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextGetPropNode = parent.getType (  ) ;^156^^^^^107^175^[REPLACE] Node nextGetPropNode = nextCallNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( rValue.getType (  )   ==  Token.GETPROP )  {^157^^^^^107^175^[REPLACE] if  ( nextGetPropNode.getType (  )  != Token.GETPROP )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^return;^157^158^159^^^107^175^[ADD] if  ( nextGetPropNode.getType (  )  != Token.GETPROP )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextGetPropFirstChildNode = rValue.getFirstChild (  ) ;^161^^^^^107^175^[REPLACE] Node nextGetPropFirstChildNode = nextGetPropNode.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( !nextGetPropFirstChildNode .getFirstChild (  )   )  {^162^163^^^^107^175^[REPLACE] if  ( !nextGetPropFirstChildNode.checkTreeEqualsSilent ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^if  ( NodeUtil.mayEffectMutableState ( parent )  )  {^167^^^^^107^175^[REPLACE] if  ( NodeUtil.mayEffectMutableState ( getPropFirstChildNode )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[ADD]^return;^167^168^169^^^107^175^[ADD] if  ( NodeUtil.mayEffectMutableState ( getPropFirstChildNode )  )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^callSites.add ( new CallSite ( parent, n, callNode, nextNode, nextGetPropFirstChildNode )  ) ;^173^174^^^^107^175^[REPLACE] callSites.add ( new CallSite ( parent, n, callNode, nextGetPropNode, nextGetPropFirstChildNode )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GatherCallSites   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node parent;^180^^^^^^^[REPLACE] final Node parent;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CallSite   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node n;^181^^^^^^^[REPLACE] final Node n;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CallSite   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^Node nextGetPropNode;^183^^^^^^^[REPLACE] final Node nextGetPropNode;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CallSite   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode  getPropFirstChildNode  getPropNode  n  nextCallNode  nextGetPropFirstChildNode  nextGetPropNode  nextNode  parent  rValue  [TYPE]  Definition definition  [TYPE]  Collection definitions 
[REPLACE]^this.parent =  nextGetPropNode;^188^^^^^186^193^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
[ADD]^^188^189^^^^186^193^[ADD] this.parent = parent; this.n = n;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
[REPLACE]^this.n =  parent;^189^^^^^186^193^[REPLACE] this.n = n;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
[ADD]^^189^^^^^186^193^[ADD] this.n = n;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
[REPLACE]^this.callNode =  null;^190^^^^^186^193^[REPLACE] this.callNode = callNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
[ADD]^^190^^^^^186^193^[ADD] this.callNode = callNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
[REPLACE]^this.nextGetPropNode =  parent;^191^^^^^186^193^[REPLACE] this.nextGetPropNode = nextGetPropNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
[REPLACE]^this.nextGetPropFirstChildNode =  parent;^192^^^^^186^193^[REPLACE] this.nextGetPropFirstChildNode = nextGetPropFirstChildNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] Node parent Node n Node callNode Node nextGetPropNode Node nextGetPropFirstChildNode [CLASS] CallSite   [TYPE]  Node callNode  n  nextGetPropFirstChildNode  nextGetPropNode  parent  [TYPE]  boolean false  true 
