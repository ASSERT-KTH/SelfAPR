[REPLACE]^private  Map<Var, ReferenceCollection> referenceMap = Maps.newHashMap (  ) ;^52^53^^^^52^53^[REPLACE] private final Map<Var, ReferenceCollection> referenceMap = Maps.newHashMap (  ) ;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private final Deque<BasicBlock> blockStack =  new BasicBlock ( parent, n )  ;^58^^^^^^^[REPLACE] private final Deque<BasicBlock> blockStack = new ArrayDeque<BasicBlock> (  ) ;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private  Behavior behavior;^63^^^^^^^[REPLACE] private final Behavior behavior;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^Behavior DO_NOTHING_BEHAVIOR = new Behavior (  )  {^216^^^^^216^220^[REPLACE] static Behavior DO_NOTHING_BEHAVIOR = new Behavior (  )  {^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^List<Reference> references  = null ;^228^^^^^^^[REPLACE] List<Reference> references = Lists.newArrayList (  ) ;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private static final Set<Integer> DECLARATION_PARENTS  = null ;^368^369^^^^368^369^[REPLACE] private static final Set<Integer> DECLARATION_PARENTS = ImmutableSet.of ( Token.VAR, Token.FUNCTION, Token.CATCH ) ;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private  Node parent;^372^^^^^^^[REPLACE] private final Node parent;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private  Node grandparent;^373^^^^^^^[REPLACE] private final Node grandparent;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private  BasicBlock basicBlock;^374^^^^^^^[REPLACE] private final BasicBlock basicBlock;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private final  long  sourceName;^376^^^^^^^[REPLACE] private final String sourceName;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^private  BasicBlock parent;^488^^^^^^^[REPLACE] private final BasicBlock parent;^ [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock  
[REPLACE]^if  ( parent == null )  {^161^^^^^160^190^[REPLACE] if  ( parent != null )  {^[METHOD] isBlockBoundary [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return false;^177^^^^^160^190^[REPLACE] return true;^[METHOD] isBlockBoundary [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return n != parent.getFirstChild  (    )  ;  ;^184^^^^^160^190^[REPLACE] return n != parent.getFirstChild (  ) ;^[METHOD] isBlockBoundary [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return n  ;^184^^^^^160^190^[REPLACE] return n != parent.getFirstChild (  ) ;^[METHOD] isBlockBoundary [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return n.getType (  )   !=  Token.CASE;;^189^^^^^160^190^[REPLACE] return n.getType (  )  == Token.CASE;^[METHOD] isBlockBoundary [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^Reference ref = references.get ( i )  ;^244^^^^^243^266^[REPLACE] int size = references.size (  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^if (size  !=  0 ) {^245^^^^^243^266^[REPLACE] if  ( size == 0 )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[ADD]^return false;^245^246^247^^^243^266^[ADD] if  ( size == 0 )  { return false; }^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return true;^246^^^^^243^266^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^Reference ref = references.get ( i )  ;^251^^^^^243^266^[REPLACE] Reference init = getInitializingReference (  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^if  ( init != true )  {^252^^^^^243^266^[REPLACE] if  ( init == null )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return false;  ;^253^^^^^243^266^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return true;^253^^^^^243^266^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^Preconditions.checkState ( references.get ( 0L ) .isDeclaration (  )  ) ;^256^^^^^243^266^[REPLACE] Preconditions.checkState ( references.get ( 0 ) .isDeclaration (  )  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^Preconditions.checkState ( references.get ( 1 ) .isDeclaration (  )  ) ;^256^^^^^243^266^[REPLACE] Preconditions.checkState ( references.get ( 0 ) .isDeclaration (  )  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^Reference init = getInitializingReference (  )  ;^257^^^^^243^266^[REPLACE] BasicBlock initBlock = init.getBasicBlock (  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^if  ( !initBlock.provablyExecutesBefore ( references.get ( size ) .getBasicBlock (  )  )  )  {^259^260^^^^243^266^[REPLACE] if  ( !initBlock.provablyExecutesBefore ( references.get ( i ) .getBasicBlock (  )  )  )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return true;^261^^^^^259^262^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return false;  ;^261^^^^^243^266^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^258^^^^^243^266^[REPLACE] for  ( int i = 1; i < size; i++ )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^return false;^265^^^^^243^266^[REPLACE] return true;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollectingCallback 1 ReferenceCollection Reference BasicBlock   [TYPE]  Set DECLARATION_PARENTS  [TYPE]  Reference init  [TYPE]  Node externs  grandparent  n  nameNode  parent  root  [TYPE]  BasicBlock basicBlock  initBlock  parent  [TYPE]  String sourceName  [TYPE]  Deque blockStack  [TYPE]  int i  size  [TYPE]  Predicate varFilter  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  isHoisted  true  [TYPE]  Scope scope  [TYPE]  List references  [TYPE]  Behavior DO_NOTHING_BEHAVIOR  behavior  [TYPE]  Map referenceMap 
[REPLACE]^List<Reference> references  = null ;^228^^^^^^^[REPLACE] List<Reference> references = Lists.newArrayList (  ) ;^[METHOD] afterExitScope [TYPE] void [PARAMETER] NodeTraversal t ReferenceCollection> referenceMap [CLASS] ReferenceCollection   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Map referenceMap 
[REPLACE]^int i = 1  ;^244^^^^^243^266^[REPLACE] int size = references.size (  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^if (size  !=  0) {^245^^^^^243^266^[REPLACE] if  ( size == 0 )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^return false;  ;^246^^^^^243^266^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^BasicBlock initBlock = init.getBasicBlock (  )  ;^251^^^^^243^266^[REPLACE] Reference init = getInitializingReference (  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^if  ( init != null )  {^252^^^^^243^266^[REPLACE] if  ( init == null )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[ADD]^return false;^252^253^254^^^243^266^[ADD] if  ( init == null )  { return false; }^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^return true;^253^^^^^243^266^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^checkState (  ( ! ( maybeDecl.isInitializingDeclaration (  )  )  )  )  ;^256^^^^^243^266^[REPLACE] Preconditions.checkState ( references.get ( 0 ) .isDeclaration (  )  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REMOVE]^( initBlock.provablyExecutesBefore ( references.get ( i ) .getBasicBlock (  )  )  )  ;^256^^^^^243^266^[REMOVE] ^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^Preconditions.checkState ( references.get ( 0 + 2 ) .isDeclaration (  )  ) ;^256^^^^^243^266^[REPLACE] Preconditions.checkState ( references.get ( 0 ) .isDeclaration (  )  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^Preconditions.checkState ( references.get ( 1 ) .isDeclaration (  )  ) ;^256^^^^^243^266^[REPLACE] Preconditions.checkState ( references.get ( 0 ) .isDeclaration (  )  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[ADD]^^257^^^^^243^266^[ADD] BasicBlock initBlock = init.getBasicBlock (  ) ;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^if  ( initBlock.provablyExecutesBefore ( references.get ( i ) .getBasicBlock (  )  )  )  {^259^260^^^^243^266^[REPLACE] if  ( !initBlock.provablyExecutesBefore ( references.get ( i ) .getBasicBlock (  )  )  )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^return true;^261^^^^^259^262^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^return true;^261^^^^^243^266^[REPLACE] return false;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^258^^^^^243^266^[REPLACE] for  ( int i = 1; i < size; i++ )  {^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^return false;^265^^^^^243^266^[REPLACE] return true;^[METHOD] isWellDefined [TYPE] boolean [PARAMETER] [CLASS] ReferenceCollection   [TYPE]  BasicBlock initBlock  [TYPE]  List references  [TYPE]  boolean false  true  [TYPE]  int i  size  [TYPE]  Reference init 
[REPLACE]^private static final Set<Integer> DECLARATION_PARENTS  = null ;^368^369^^^^368^369^[REPLACE] private static final Set<Integer> DECLARATION_PARENTS = ImmutableSet.of ( Token.VAR, Token.FUNCTION, Token.CATCH ) ;^[METHOD] firstReferenceIsAssigningDeclaration [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  List references  [TYPE]  int size  [TYPE]  boolean false  true 
[REPLACE]^private  Node parent;^372^^^^^^^[REPLACE] private final Node parent;^[METHOD] firstReferenceIsAssigningDeclaration [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  List references  [TYPE]  int size  [TYPE]  boolean false  true 
[REPLACE]^private  BasicBlock basicBlock;^374^^^^^^^[REPLACE] private final BasicBlock basicBlock;^[METHOD] firstReferenceIsAssigningDeclaration [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  List references  [TYPE]  int size  [TYPE]  boolean false  true 
[REPLACE]^private  Scope scope;^375^^^^^^^[REPLACE] private final Scope scope;^[METHOD] firstReferenceIsAssigningDeclaration [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  List references  [TYPE]  int size  [TYPE]  boolean false  true 
[REPLACE]^private final  double  sourceName;^376^^^^^^^[REPLACE] private final String sourceName;^[METHOD] firstReferenceIsAssigningDeclaration [TYPE] boolean [PARAMETER] [CLASS] Reference   [TYPE]  List references  [TYPE]  int size  [TYPE]  boolean false  true 
[REPLACE]^private  BasicBlock parent;^488^^^^^^^[REPLACE] private final BasicBlock parent;^[METHOD] getSourceName [TYPE] String [PARAMETER] [CLASS] BasicBlock   [TYPE]  BasicBlock basicBlock  [TYPE]  Set DECLARATION_PARENTS  [TYPE]  String sourceName  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node func  grandparent  n  nameNode  parent 
[REPLACE]^private  boolean isHoisted;^494^^^^^^^[REPLACE] private final boolean isHoisted;^[METHOD] getSourceName [TYPE] String [PARAMETER] [CLASS] BasicBlock   [TYPE]  BasicBlock basicBlock  [TYPE]  Set DECLARATION_PARENTS  [TYPE]  String sourceName  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node func  grandparent  n  nameNode  parent 
