[REPLACE]^static  ConcreteType NONE = new ConcreteNoneType (  ) ;^51^^^^^^^[REPLACE] static final ConcreteType NONE = new ConcreteNoneType (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^final ConcreteType ALL = new ConcreteAll (  ) ;^54^^^^^^^[REPLACE] static final ConcreteType ALL = new ConcreteAll (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private  final List<ConcreteFunctionType> NO_FUNCTIONS = Lists.<ConcreteFunctionType>newArrayList (  ) ;^57^58^^^^57^58^[REPLACE] private static final List<ConcreteFunctionType> NO_FUNCTIONS = Lists.<ConcreteFunctionType>newArrayList (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private static final List<ConcreteInstanceType> NO_INSTANCES ;^61^62^^^^61^62^[REPLACE] private static final List<ConcreteInstanceType> NO_INSTANCES = Lists.<ConcreteInstanceType>newArrayList (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private static final List<StaticSlot<ConcreteType>> NO_SLOTS  = null ;^65^66^^^^65^66^[REPLACE] private static final List<StaticSlot<ConcreteType>> NO_SLOTS = Lists.<StaticSlot<ConcreteType>>newArrayList (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^List<C> emptyList;^164^^^^^^^[REPLACE] final List<C> emptyList;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^static final  long  CALL_SLOT_NAME = ":call";^289^^^^^^^[REPLACE] static final String CALL_SLOT_NAME = ":call";^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^final String THIS_SLOT_NAME = ":this";^292^^^^^^^[REPLACE] static final String THIS_SLOT_NAME = ":this";^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^static  String RETURN_SLOT_NAME = ":return";^295^^^^^^^[REPLACE] static final String RETURN_SLOT_NAME = ":return";^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private  Factory factory;^297^^^^^^^[REPLACE] private final Factory factory;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private  StaticScope<ConcreteType> parentScope;^299^^^^^^^[REPLACE] private final StaticScope<ConcreteType> parentScope;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^public  ObjectType instanceType;^456^^^^^^^[REPLACE] public final ObjectType instanceType;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private final  long  id;^657^^^^^^^[REPLACE] private final int id;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^C type = true;^139^^^^^138^155^[REPLACE] C type = null;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if   (    (  type = filter.filter  (  alt  )    )   != null  )   {  ;^140^^^^^138^155^[REPLACE] if  ( isUnion (  )  )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^}  else {^148^^^^^138^155^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return this.emptyList;^153^^^^^148^154^[REPLACE] return filter.emptyList;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return true;^151^^^^^138^155^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^String> names = newArrayList (  )  ;^149^^^^^138^155^[REPLACE] List<C> list = Lists.newArrayList (  ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^( type = filter.filter ( alt )  )  ;^148^^^^^138^155^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return 1;^151^^^^^138^155^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return this.emptyList;^153^^^^^138^155^[REPLACE] return filter.emptyList;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  (  ( type = filter.filter ( alt )  )  == null )  {^143^^^^^138^155^[REPLACE] if  (  ( type = filter.filter ( alt )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  )  ;^144^^^^^138^155^[REPLACE] list.add ( type ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^( type = filter.filter ( this )  )  ;^143^^^^^140^148^[REPLACE] if  (  ( type = filter.filter ( alt )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return true;^147^^^^^140^148^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^String> names = newArrayList (  )  ;^141^^^^^140^148^[REPLACE] List<C> list = Lists.newArrayList (  ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^ConcreteType type  ;^142^^^^^140^148^[REPLACE] for  ( ConcreteType alt : toUnion (  ) .getAlternatives (  )  )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^} else if   (    (  type = filter.filter  (  this  )    )   != null  )   {  ;^143^^^^^138^155^[REPLACE] if  (  ( type = filter.filter ( alt )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^}  if  (  ( type = filter.filter ( this )  )  == null )  {^148^^^^^138^155^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return filter.emptyList;  ;^153^^^^^148^154^[REPLACE] return filter.emptyList;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return null;^151^^^^^138^155^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^list.add ( type ) ;^143^144^145^^^140^148^[ADD] if  (  ( type = filter.filter ( alt )  )  != null )  { list.add ( type ) ; }^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^( type = filter.filter ( alt )  )  ;^148^^^^^140^148^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return this;^147^^^^^140^148^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return null;^151^^^^^140^148^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return filter.emptyList;  ;^153^^^^^140^148^[REPLACE] return filter.emptyList;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^String> names = newArrayList (  )  ;^149^^^^^140^148^[REPLACE] List<C> list = Lists.newArrayList (  ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^StringBuilder b = new StringBuilder ( 4 ) ;^411^^^^^410^439^[REPLACE] StringBuilder b = new StringBuilder ( 32 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  )  ;^412^^^^^410^439^[REPLACE] b.append ( "function  ( " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REMOVE]^toFunction (  )  ;^412^^^^^410^439^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .join (  ) ;^413^^^^^410^439^[REPLACE] boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( true )  {^414^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^414^415^416^417^^410^439^[ADD] if  ( hasKnownTypeOfThis )  { b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b .StringBuilder ( id )  ;^415^^^^^410^439^[REPLACE] b.append ( "this:" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^getReturnSlot (  ) .getType (  ) .toString (  )  ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^( getThisSlot (  ) .getType (  ) .isNone (  )  )  ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^getReturnSlot (  )  ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^C type = null  ;^419^^^^^410^439^[REPLACE] Node n = getFirstParameter (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( hasKnownTypeOfThis && n == false )  {^420^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis && n != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( "this:" )  ;^421^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( n.getNext (  )  == null )  {^428^^^^^410^439^[REPLACE] if  ( n.getNext (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^b.append ( ", " ) ;^428^429^430^^^410^439^[ADD] if  ( n.getNext (  )  != null )  { b.append ( ", " ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( "this:" )  ;^429^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^423^424^425^426^427^410^439^[ADD] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  { String paramName = n.getString (  ) ; StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ; b.append ( var.getType (  )  ) ; getParameterSlot ( i ) .getType (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^for  ( int i = 3; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^String paramName = declaration.getString (  ) ;^424^^^^^410^439^[REPLACE] String paramName = n.getString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( name ) ;^425^^^^^410^439^[REPLACE] StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( "this:" )  ;^433^^^^^410^439^[REPLACE] b.append ( " ) " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^433^^^^^410^439^[ADD] b.append ( " ) " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( getReturnSlot (  ) .getType (  )  == true )  {^434^^^^^410^439^[REPLACE] if  ( getReturnSlot (  ) .getType (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( "this:" )  ;^435^^^^^410^439^[REPLACE] b.append ( ": " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^435^436^^^^410^439^[ADD] b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^getReturnSlot (  ) .getType (  ) .toString (  )  ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^getThisSlot (  ) .getType (  ) .toString (  )  ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REMOVE]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  )  ;^436^^^^^410^439^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^getThisSlot (  )  ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return b.toString  (    )  ;  ;^438^^^^^410^439^[REPLACE] return b.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( getScope (  ) .getOwnSlot ( propName )  == false )  {^493^^^^^492^513^[REPLACE] if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^} else if  ( getImplicitPrototype (  )  == null )  {^508^^^^^492^513^[REPLACE] } else if  ( getImplicitPrototype (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return false;^511^^^^^508^512^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( name ) ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return this;^511^^^^^492^513^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( instanceType.getConstructor (  )  == this )  {^504^^^^^492^513^[REPLACE] if  ( instanceType.getConstructor (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getConstructorType (  ) .getParameterSlot (  ) ;^505^^^^^492^513^[REPLACE] return getConstructorType (  ) .getPrototypeType (  ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getConstructorType  (    )  .getPrototypeType  (    )  ;  ;^505^^^^^492^513^[REPLACE] return getConstructorType (  ) .getPrototypeType (  ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return this;  ;^507^^^^^492^513^[REPLACE] return this;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( instanceType.getConstructor (  )  == null )  {^504^^^^^492^513^[REPLACE] if  ( instanceType.getConstructor (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return true;^511^^^^^508^512^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( paramName ) ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return null;^507^^^^^492^513^[REPLACE] return this;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if   (  !other.isSingleton  (    )    )   {  ;^572^^^^^571^595^[REPLACE] if  ( other.isSingleton (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  else {^580^^^^^571^595^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return other.unionWith  (  this  )  ;  ;^593^^^^^580^594^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives.retainAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  else {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  new ConcreteUnionType ( this, other )  ;^589^^^^^584^590^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^587^^^^^584^590^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return otherUnion;  ;^585^^^^^571^595^[REPLACE] return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  new ConcreteUnionType ( this, other )  ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^587^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return null;^583^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteUnionType typeUnion = other.isUnion (  ) ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives .contains ( null )   )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^return this;return otherUnion;^582^583^584^585^^571^595^[ADD] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  { return this; } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^}   return otherUnion;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;alts.addAll ( otherUnion.alternatives ) ;^584^585^586^587^588^571^595^[ADD] else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return this;  ;^583^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return type.unionWith ( this ) ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^581^^^^^571^595^[ADD] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives.contains ( type )  )  {^573^^^^^571^595^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REMOVE]^if  ( other.isUnion (  )  )  {     ConcreteType> types = newHashSet ( alternatives ) ;     types.retainAll ( other.toUnion (  ) .alternatives ) ;     return createForTypes ( types ) ; }else {     checkArgument (  (  ( other.isNone (  )  )  ||  ( other.isAll (  )  )  )  ) ;     return other.intersectWith ( this ) ; }^573^^^^^571^595^[REMOVE] ^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  new ConcreteUnionType ( this, other )  ;^578^^^^^573^579^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^576^^^^^573^579^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return null;^574^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  new ConcreteUnionType ( this, other )  ;^578^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^576^^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if   (    (  type = filter.filter  (  alt  )    )   != null  )   {  ;^580^^^^^571^595^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return type.unionWith ( this ) ;^593^^^^^580^594^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives .contains ( false )   )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^587^^^^^584^590^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteUnionType typeUnion = other .isUnion (  )  ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return this;  ;^574^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^576^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteUnionType otherUnion = other.isUnion (  ) ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^List<C> emptyList;^164^^^^^^^[REPLACE] final List<C> emptyList;^[METHOD] getTypeRegistry [TYPE] JSTypeRegistry [PARAMETER] [CLASS] TypeFilter   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instance  instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parent  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^static final String CALL_SLOT_NAME  = null ;^289^^^^^^^[REPLACE] static final String CALL_SLOT_NAME = ":call";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^static final  char  THIS_SLOT_NAME = ":this";^292^^^^^^^[REPLACE] static final String THIS_SLOT_NAME = ":this";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^final String RETURN_SLOT_NAME = ":return";^295^^^^^^^[REPLACE] static final String RETURN_SLOT_NAME = ":return";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^private  Factory factory;^297^^^^^^^[REPLACE] private final Factory factory;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^private  StaticScope<ConcreteType> parentScope;^299^^^^^^^[REPLACE] private final StaticScope<ConcreteType> parentScope;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^StringBuilder b = new StringBuilder ( 32 - 2 ) ;^411^^^^^410^439^[REPLACE] StringBuilder b = new StringBuilder ( 32 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  )  ;^412^^^^^410^439^[REPLACE] b.append ( "function  ( " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^^413^^^^^410^439^[ADD] boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if   (  n.getNext  (    )   != null  )   {  ;^414^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( ", " )  ;^415^^^^^410^439^[REPLACE] b.append ( "this:" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^getThisSlot (  ) .getType (  ) .toString (  )  ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^getReturnSlot (  ) .getType (  ) .toString (  )  ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^^416^^^^^410^439^[ADD] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^getReturnSlot (  )  ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^int count = 0  ;^419^^^^^410^439^[REPLACE] Node n = getFirstParameter (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  (true ) {^420^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis && n != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( "this:" )  ;^421^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  ( n.getNext (  )  == null )  {^428^^^^^410^439^[REPLACE] if  ( n.getNext (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^b.append ( ", " ) ;^428^429^430^^^410^439^[ADD] if  ( n.getNext (  )  != null )  { b.append ( ", " ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( "this:" )  ;^429^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^for  ( int i =  0; declaration !^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^for  ( int i = 2; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^String paramName = n.getType (  ) ;^424^^^^^410^439^[REPLACE] String paramName = n.getString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^425^^^^^410^439^[REPLACE] StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b .StringBuilder ( i )  " ) ;^433^^^^^410^439^[REPLACE] b.append ( " ) " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REMOVE]^b.append ( ", " )  ;^433^^^^^410^439^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  ( getReturnSlot (  ) .getType (  )  == true )  {^434^^^^^410^439^[REPLACE] if  ( getReturnSlot (  ) .getType (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( ", " )  ;^435^^^^^410^439^[REPLACE] b.append ( ": " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^getThisSlot (  ) .getType (  ) .toString (  )  ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^( getReturnSlot (  ) .getType (  )  )  ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^^436^^^^^410^439^[ADD] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^getThisSlot (  )  ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^return b.toString  (    )  ;  ;^438^^^^^410^439^[REPLACE] return b.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  ( getScope (  ) .getOwnSlot ( propName )  == true )  {^493^^^^^492^513^[REPLACE] if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^}  else {^508^^^^^492^513^[REPLACE] } else if  ( getImplicitPrototype (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return true;^511^^^^^508^512^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return getImplicitPrototype  (    )  .getInstanceTypeWithProperty  (  propName  )  ;  ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return getImplicitPrototype (  ) .getPropertySlot ( propName ) ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return this;^511^^^^^492^513^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^if  ( instanceType.getConstructor (  )  == null )  {^504^^^^^492^513^[REPLACE] if  ( instanceType.getConstructor (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return getConstructorType  (    )  .getPrototypeType  (    )  ;  ;^505^^^^^492^513^[REPLACE] return getConstructorType (  ) .getPrototypeType (  ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return null;^507^^^^^492^513^[REPLACE] return this;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[ADD]^}   return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;return null;^508^509^510^511^512^492^513^[ADD] else if  ( getImplicitPrototype (  )  != null )  { return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ; } else { return null; }^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return null;  ;^511^^^^^508^512^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return getImplicitPrototype (  )  .getConstructorType (  )  ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return false;^511^^^^^492^513^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^} else if   (  other.isUnion  (    )    )   {  ;^572^^^^^571^595^[REPLACE] if  ( other.isSingleton (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REMOVE]^if  ( other.isUnion (  )  )  {     ConcreteUnionType otherUnion = other.toUnion (  ) ;     if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {         return this;     }else         if  ( containsAll ( alternatives )  )  {             return otherUnion;         }else {             ConcreteType> alts = newHashSet ( alternatives ) ;             alts.addAll ( otherUnion.alternatives ) ;             return new ConcreteUnionType ( alts ) ;         }      }else {     checkArgument (  (  ( other.isNone (  )  )  ||  ( other.isAll (  )  )  )  ) ;     return other.unionWith ( this ) ; }^572^^^^^571^595^[REMOVE] ^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  if  ( other.isUnion (  )  )  {^580^^^^^571^595^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return other .intersectWith ( other )  ;^593^^^^^580^594^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^if  ( alternatives.retainAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( this ) ;^589^^^^^584^590^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^587^^^^^584^590^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return otherUnion;  ;^585^^^^^571^595^[REPLACE] return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( 1 ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^587^^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return this;  ;^583^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  else {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( 0 ) ;^589^^^^^584^590^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return null;^583^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( this ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteUnionType otherUnion = other .isUnion (  )  ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^alts.addAll ( otherUnion.alternatives ) ;^587^588^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^return this;return otherUnion;^582^583^584^585^^571^595^[ADD] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  { return this; } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^} else if  ( otherUnion.alternatives.retainAll ( alternatives )  )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^}   return otherUnion;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;alts.addAll ( otherUnion.alternatives ) ;^584^585^586^587^588^571^595^[ADD] else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( null ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^587^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( true ) ;^589^^^^^584^590^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^587^^^^^584^590^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return other.intersectWith ( this ) ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteUnionType otherUnion = other.isUnion (  ) ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^} else if   (  other.isUnion  (    )    )   {  ;^573^^^^^571^595^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( null ) ;^578^^^^^573^579^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^576^^^^^573^579^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return null;^574^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( false ) ;^578^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteType> types = newHashSet ( alternatives )  ;^576^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^if  ( alternatives.equals ( other )  )  {^573^^^^^571^595^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^return this;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;alts.add ( other ) ;^573^574^575^576^577^571^595^[ADD] if  ( alternatives.contains ( other )  )  { return this; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.add ( other ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  else {^580^^^^^571^595^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return other.intersectWith ( this ) ;^593^^^^^580^594^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REMOVE]^if  ( other.isUnion (  )  )  {     ConcreteType> types = newHashSet ( alternatives ) ;     types.retainAll ( other.toUnion (  ) .alternatives ) ;     return createForTypes ( types ) ; }else {     checkArgument (  (  ( other.isNone (  )  )  ||  ( other.isAll (  )  )  )  ) ;     return other.intersectWith ( this ) ; }^584^^^^^571^595^[REMOVE] ^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( null ) ;^589^^^^^584^590^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( true ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^582^583^584^585^^571^595^[ADD] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  { return this; } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( false ) ;^589^^^^^584^590^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return this;  ;^574^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( null ) ;^578^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^private   long  id;^657^^^^^^^[REPLACE] private final int id;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUniqueType   [TYPE]  boolean false  true 
