[REPLACE]^static final ConcreteType NONE ;^51^^^^^^^[REPLACE] static final ConcreteType NONE = new ConcreteNoneType (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^static final ConcreteType ALL  = null ;^54^^^^^^^[REPLACE] static final ConcreteType ALL = new ConcreteAll (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private static  List<ConcreteFunctionType> NO_FUNCTIONS = Lists.<ConcreteFunctionType>newArrayList (  ) ;^57^58^^^^57^58^[REPLACE] private static final List<ConcreteFunctionType> NO_FUNCTIONS = Lists.<ConcreteFunctionType>newArrayList (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private static final List<ConcreteInstanceType> NO_INSTANCES ;^61^62^^^^61^62^[REPLACE] private static final List<ConcreteInstanceType> NO_INSTANCES = Lists.<ConcreteInstanceType>newArrayList (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private static final List<StaticSlot<ConcreteType>> NO_SLOTS ;^65^66^^^^65^66^[REPLACE] private static final List<StaticSlot<ConcreteType>> NO_SLOTS = Lists.<StaticSlot<ConcreteType>>newArrayList (  ) ;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^static final String CALL_SLOT_NAME ;^289^^^^^^^[REPLACE] static final String CALL_SLOT_NAME = ":call";^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^static final String THIS_SLOT_NAME  = null ;^292^^^^^^^[REPLACE] static final String THIS_SLOT_NAME = ":this";^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^static final  long  RETURN_SLOT_NAME = ":return";^295^^^^^^^[REPLACE] static final String RETURN_SLOT_NAME = ":return";^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private  Node declaration;^298^^^^^^^[REPLACE] private final Node declaration;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private  StaticScope<ConcreteType> parentScope;^299^^^^^^^[REPLACE] private final StaticScope<ConcreteType> parentScope;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^private final  short  id;^657^^^^^^^[REPLACE] private final int id;^ [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  
[REPLACE]^this.emptyList =  null;^167^^^^^166^168^[REPLACE] this.emptyList = emptyList;^[METHOD] <init> [TYPE] List) [PARAMETER] List<C> emptyList [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this.factory =  null;^307^^^^^304^314^[REPLACE] this.factory = factory;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this.declaration =  null;^308^^^^^304^314^[REPLACE] this.declaration = declaration;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this.parentScope =  null;^309^^^^^304^314^[REPLACE] this.parentScope = parentScope;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( declaration.getType (  )   &&  Token.FUNCTION ) ;^311^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^ret = ret.unionWith ( slot.getType (  )  ) ;^311^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( declaration.getJSType (  )  == null ) ;^312^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( declaration .getType (  )   != null ) ;^312^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( declaration.getJSType (  ) .join (  )  ) ;^313^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( declaration .getType (  )  .isFunctionType (  )  ) ;^313^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[ADD]^^313^^^^^304^314^[ADD] Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( declaration.getType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REMOVE]^ret = ret.unionWith ( slot.getType (  )  ) ;^313^^^^^304^314^[REMOVE] ^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this.factory =  null;^468^^^^^467^472^[REPLACE] this.factory = factory;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this.instanceType =  null;^469^^^^^467^472^[REPLACE] this.instanceType = instanceType;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( ! ! ( instanceType instanceof UnknownType )  ) ;^471^^^^^467^472^[REPLACE] Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this (   alternatives    ) ;^559^^^^^558^560^[REPLACE] this ( Sets.newHashSet ( alternatives )  ) ;^[METHOD] <init> [TYPE] ConcreteType[]) [PARAMETER]  alternatives [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  ConcreteType[] alternatives  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[ADD]^^559^^^^^558^560^[ADD] this ( Sets.newHashSet ( alternatives )  ) ;^[METHOD] <init> [TYPE] ConcreteType[]) [PARAMETER]  alternatives [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  ConcreteType[] alternatives  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^ret = ret.unionWith ( slot.getType (  )  ) ;^559^^^^^558^560^[REPLACE] this ( Sets.newHashSet ( alternatives )  ) ;^[METHOD] <init> [TYPE] ConcreteType[]) [PARAMETER]  alternatives [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  ConcreteType[] alternatives  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( alternatives.add (  )  %  0.5  > 1 ) ;^563^^^^^562^565^[REPLACE] Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkArgument ( alternatives .iterator (  )   > 1 ) ;^563^^^^^562^565^[REPLACE] Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this.alternatives =  this;^564^^^^^562^565^[REPLACE] this.alternatives = alternatives;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^this.id =  null;^660^^^^^659^663^[REPLACE] this.id = id;^[METHOD] <init> [TYPE] ConcreteType$ConcreteUniqueType(int) [PARAMETER] int id [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions .checkArgument (  )  ;^662^^^^^659^663^[REPLACE] Preconditions.checkArgument ( id >= 0 ) ;^[METHOD] <init> [TYPE] ConcreteType$ConcreteUniqueType(int) [PARAMETER] int id [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^if  ( types == null || types.size (  )  - 2 == 0 )  {^69^^^^^68^76^[REPLACE] if  ( types == null || types.size (  )  == 0 )  {^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^}  else {^71^^^^^68^76^[REPLACE] } else if  ( types.size (  )  == 1 )  {^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[ADD]^}   return types.iterator (  ) .next (  ) ;return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^71^72^73^74^75^68^76^[ADD] else if  ( types.size (  )  == 1 )  { return types.iterator (  ) .next (  ) ; } else { return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ; }^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return new ConcreteUnionType (   types    ) ;^74^^^^^68^76^[REPLACE] return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return null.iterator (  ) .next (  ) ;^72^^^^^68^76^[REPLACE] return types.iterator (  ) .next (  ) ;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return types.size (  ) .next (  ) ;^72^^^^^68^76^[REPLACE] return types.iterator (  ) .next (  ) ;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return new ConcreteUnionType ( Sets.newHashSet ( this )  ) ;^74^^^^^68^76^[REPLACE] return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return bodyScope;^70^^^^^68^76^[REPLACE] return NONE;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[ADD]^}   return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^71^72^73^74^75^68^76^[ADD] else if  ( types.size (  )  == 1 )  { return types.iterator (  ) .next (  ) ; } else { return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ; }^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return new ConcreteUnionType (   this    ) ;^74^^^^^68^76^[REPLACE] return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return this.iterator (  ) .next (  ) ;^72^^^^^68^76^[REPLACE] return types.iterator (  ) .next (  ) ;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^74^^^^^68^76^[REPLACE] return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^[METHOD] createForTypes [TYPE] ConcreteType [PARAMETER] ConcreteType> types [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  Collection types  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^boolean isNone (  )  { return true; }^79^^^^^^^[REPLACE] boolean isNone (  )  { return false; }^[METHOD] isNone [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^boolean isFunction (  )  { return true; }^82^^^^^^^[REPLACE] boolean isFunction (  )  { return false; }^[METHOD] isFunction [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^boolean isInstance (  )  { return true; }^88^^^^^^^[REPLACE] boolean isInstance (  )  { return false; }^[METHOD] isInstance [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^boolean isUnion (  )  { return true; }^91^^^^^^^[REPLACE] boolean isUnion (  )  { return false; }^[METHOD] isUnion [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^boolean isAll (  )  { return true; }^94^^^^^^^[REPLACE] boolean isAll (  )  { return false; }^[METHOD] isAll [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^boolean isSingleton (  )  { return !isNone (  )  || !isUnion (  )  || !isAll (  ) ; }^97^^^^^^^[REPLACE] boolean isSingleton (  )  { return !isNone (  )  && !isUnion (  )  && !isAll (  ) ; }^[METHOD] isSingleton [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^ConcreteFunctionType toFunction (  )  { return this; }^100^^^^^^^[REPLACE] ConcreteFunctionType toFunction (  )  { return null; }^[METHOD] toFunction [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^ConcreteInstanceType toInstance (  )  { return false; }^103^^^^^^^[REPLACE] ConcreteInstanceType toInstance (  )  { return null; }^[METHOD] toInstance [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^ConcreteUnionType toUnion (  )  { return true; }^106^^^^^^^[REPLACE] ConcreteUnionType toUnion (  )  { return null; }^[METHOD] toUnion [TYPE] ConcreteType$ConcreteUnionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^StaticScope<ConcreteType> getScope (  )  { return this; }^109^^^^^^^[REPLACE] StaticScope<ConcreteType> getScope (  )  { return null; }^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  [TYPE]  int id 
[REPLACE]^Preconditions.checkState ( this.isUnion (  )  ) ;^113^^^^^112^121^[REPLACE] Preconditions.checkState ( this.isSingleton (  )  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REMOVE]^ret = ret.unionWith ( slot.getType (  )  ) ;^113^^^^^112^121^[REMOVE] ^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^if  ( !other.getParameterSlots (  )  )  {^114^^^^^112^121^[REPLACE] if  ( !other.isSingleton (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[ADD]^^114^115^116^117^^112^121^[ADD] if  ( !other.isSingleton (  )  )  { return other.unionWith ( this ) ; } else if  ( equals ( other )  )  { return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^}  if  ( equals ( NONE )  )  {^116^^^^^112^121^[REPLACE] } else if  ( equals ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return  new ConcreteUnionType ( alts )  ;^119^^^^^112^121^[REPLACE] return new ConcreteUnionType ( this, other ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return null;^117^^^^^112^121^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return other.intersectWith ( this ) ;^115^^^^^112^121^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^}  else {^116^^^^^112^121^[REPLACE] } else if  ( equals ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return NONE.intersectWith ( this ) ;^115^^^^^112^121^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^if  ( other.isSingleton (  )  )  {^125^^^^^124^132^[REPLACE] if  ( !other.isSingleton (  )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^}  else {^127^^^^^124^132^[REPLACE] } else if  ( equals ( other )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[ADD]^}   return NONE;^127^128^129^130^131^124^132^[ADD] else if  ( equals ( other )  )  { return this; } else { return NONE; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return bodyScope;^130^^^^^124^132^[REPLACE] return NONE;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return null;^128^^^^^124^132^[REPLACE] return this;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return NONE .unionWith ( other )  ;^126^^^^^124^132^[REPLACE] return other.intersectWith ( this ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^} else if  ( equals ( NONE )  )  {^127^^^^^124^132^[REPLACE] } else if  ( equals ( other )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[ADD]^}   return this;return NONE;^127^128^129^130^131^124^132^[ADD] else if  ( equals ( other )  )  { return this; } else { return NONE; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^return NONE.unionWith ( this ) ;^126^^^^^124^132^[REPLACE] return other.intersectWith ( this ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  other  [TYPE]  int id 
[REPLACE]^C type = this;^139^^^^^138^155^[REPLACE] C type = null;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^139^^^^^138^155^[ADD] C type = null;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  (  ( type = filter.filter ( alt )  )  != null )  {^140^^^^^138^155^[REPLACE] if  ( isUnion (  )  )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^}  else {^148^^^^^138^155^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return true.emptyList;^153^^^^^138^155^[REPLACE] return filter.emptyList;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return this;^151^^^^^138^155^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^List<String> names = Lists.newArrayList (  ) ;^149^^^^^138^155^[REPLACE] List<C> list = Lists.newArrayList (  ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^} else if  (  ( type =  false.false ( this )  )  !^148^^^^^138^155^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return false;^151^^^^^138^155^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return null.emptyList;^153^^^^^138^155^[REPLACE] return filter.emptyList;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  (  ( type = filter.filter ( alt )  )  == null )  {^143^^^^^138^155^[REPLACE] if  (  ( type = filter.filter ( alt )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( "this:" ) ;^144^^^^^138^155^[REPLACE] list.add ( type ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  (  ( type = filter.filter ( alt )  )  != null )  { list.add ( type ) ; ;^143^^^^^138^155^[REPLACE] if  (  ( type = filter.filter ( alt )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return null;^147^^^^^138^155^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^List<String> names = Lists.newArrayList (  ) ;^141^^^^^138^155^[REPLACE] List<C> list = Lists.newArrayList (  ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^141^^^^^138^155^[ADD] List<C> list = Lists.newArrayList (  ) ;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^for  ( ConcreteType alt : toUnion (  ) .getAlternatives (  )  )  { if  (  ( type = filter.filter ( alt )  )  != null )  {^142^^^^^138^155^[REPLACE] for  ( ConcreteType alt : toUnion (  ) .getAlternatives (  )  )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^} else if  (  ( type = filter.filter ( this )  )  == null )  {^148^^^^^138^155^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return null;^151^^^^^138^155^[REPLACE] return list;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^} else if  (  ( type =  this.this ( this )  )  !^148^^^^^138^155^[REPLACE] } else if  (  ( type = filter.filter ( this )  )  != null )  {^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return 0.emptyList;^153^^^^^138^155^[REPLACE] return filter.emptyList;^[METHOD] getMatchingTypes [TYPE] <C> [PARAMETER] TypeFilter<C> filter [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  C type  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  TypeFilter filter  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  [TYPE]  int id  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^175^^^^^174^180^[REPLACE] return getMatchingTypes ( new TypeFilter<ConcreteFunctionType> ( NO_FUNCTIONS )  {^[METHOD] getFunctions [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return other.isFunction (  )  ? type.isFunction (  )  : null;^177^^^^^174^180^[REPLACE] return type.isFunction (  )  ? type.toFunction (  )  : null;^[METHOD] getFunctions [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.isFunction (  )  ? type.isFunction (  )  : null;^177^^^^^176^178^[REPLACE] return type.isFunction (  )  ? type.toFunction (  )  : null;^[METHOD] filter [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^184^^^^^183^189^[REPLACE] return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[METHOD] getInstances [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.isInstance (  )  ? type.isInstance (  )  : null;^186^^^^^183^189^[REPLACE] return type.isInstance (  )  ? type.toInstance (  )  : null;^[METHOD] getInstances [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.toInstance (  )  ? type.toInstance (  )  : null;^186^^^^^185^187^[REPLACE] return type.isInstance (  )  ? type.toInstance (  )  : null;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^if  ( other.isFunction (  )  )  {^195^^^^^192^201^[REPLACE] if  ( type.isFunction (  )  )  {^[METHOD] getFunctionInstanceTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[ADD]^return type.toFunction (  ) .getInstanceType (  ) ;^195^196^197^^^192^201^[ADD] if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[METHOD] getFunctionInstanceTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.toFunction (  ) .getParameterName (  ) ;^196^^^^^192^201^[REPLACE] return type.toFunction (  ) .getInstanceType (  ) ;^[METHOD] getFunctionInstanceTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^193^^^^^192^201^[REPLACE] return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[METHOD] getFunctionInstanceTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.toFunction (  )  .getPrototypeType (  )  ;^196^^^^^192^201^[REPLACE] return type.toFunction (  ) .getInstanceType (  ) ;^[METHOD] getFunctionInstanceTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return true;^198^^^^^192^201^[REPLACE] return null;^[METHOD] getFunctionInstanceTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^if  ( other.isFunction (  )  )  {^195^^^^^194^199^[REPLACE] if  ( type.isFunction (  )  )  {^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[ADD]^^195^196^197^^^194^199^[ADD] if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.isFunction (  ) .getInstanceType (  ) ;^196^^^^^194^199^[REPLACE] return type.toFunction (  ) .getInstanceType (  ) ;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return true;^198^^^^^194^199^[REPLACE] return null;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^if  (  type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^[REPLACE] if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[METHOD] getPrototypeTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type .isInstance (  )  ;^209^^^^^204^214^[REPLACE] return type.toInstance (  ) ;^[METHOD] getPrototypeTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return getMatchingTypes ( new TypeFilter;^205^^^^^204^214^[REPLACE] return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[METHOD] getPrototypeTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.isInstance (  ) ;^209^^^^^204^214^[REPLACE] return type.toInstance (  ) ;^[METHOD] getPrototypeTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return false;^211^^^^^204^214^[REPLACE] return null;^[METHOD] getPrototypeTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^if  (true (  ) || type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^[REPLACE] if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[ADD]^^207^208^209^210^^206^212^[ADD] if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.isInstance (  ) ;^209^^^^^206^212^[REPLACE] return type.toInstance (  ) ;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type .isInstance (  )  ;^209^^^^^206^212^[REPLACE] return type.toInstance (  ) ;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return this;^211^^^^^206^212^[REPLACE] return null;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return true ;^218^^^^^217^225^[REPLACE] return getMatchingTypes ( new TypeFilter<ConcreteFunctionType> ( NO_FUNCTIONS )  {^[METHOD] getSuperclassTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return other.isFunction (  ) && type .isFunction (  )  .getSuperclassType (  )  != null ? type^220^221^222^^^217^225^[REPLACE] return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[METHOD] getSuperclassTypes [TYPE] List [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return type.isFunction (  ) && type.isFunction (  ) .getSuperclassType (  )  ! =  false;^220^221^222^^^219^223^[REPLACE] return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[METHOD] filter [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id 
[REPLACE]^return getMatchingTypes ( new TypeFilter;^229^^^^^228^236^[REPLACE] return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  {^[METHOD] getParameterSlots [TYPE] List [PARAMETER] final int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  ! =  toFunction (  ) .getParameterSlot ( index )  ;^231^232^233^^^228^236^[REPLACE] return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[METHOD] getParameterSlots [TYPE] List [PARAMETER] final int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^returntrue (  ) && toFunction (  ) .getParameterSlot ( index )   =  toFunction (  ) .getParameterSlot ( index )  ;^231^232^233^^^230^234^[REPLACE] return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^if  ( other.isInstance (  )  )  {^246^^^^^242^252^[REPLACE] if  ( type.isInstance (  )  )  {^[METHOD] getPropertySlots [TYPE] List [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^slot =  other.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^242^252^[REPLACE] slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[METHOD] getPropertySlots [TYPE] List [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^return getMatchingTypes (  new ConcreteType>> ( NO_SLOTS )  {     Override     public ConcreteType> filter ( ConcreteType type )  {         return  ( type.isFunction (  )  )  &&  (  ( toFunction (  ) .getParameterSlot ( index )  )  != null )  ? toFunction (  ) .getParameterSlot ( index )  : null;     } }   {^243^^^^^242^252^[REPLACE] return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  {^[METHOD] getPropertySlots [TYPE] List [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^return null;^249^^^^^242^252^[REPLACE] return slot;^[METHOD] getPropertySlots [TYPE] List [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^StaticSlot<ConcreteType> slot = this;^245^^^^^242^252^[REPLACE] StaticSlot<ConcreteType> slot = null;^[METHOD] getPropertySlots [TYPE] List [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[ADD]^^245^^^^^242^252^[ADD] StaticSlot<ConcreteType> slot = null;^[METHOD] getPropertySlots [TYPE] List [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^StaticSlot<ConcreteType> slot = false;^245^^^^^244^250^[REPLACE] StaticSlot<ConcreteType> slot = null;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[ADD]^^245^^^^^244^250^[ADD] StaticSlot<ConcreteType> slot = null;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^if  ( type.toInstance (  )  )  {^246^^^^^244^250^[REPLACE] if  ( type.isInstance (  )  )  {^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[ADD]^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^246^247^248^^^244^250^[ADD] if  ( type.isInstance (  )  )  { slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^slot =  other.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^[REPLACE] slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^return null;^249^^^^^244^250^[REPLACE] return slot;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  type  [TYPE]  int id  index 
[REPLACE]^StaticSlot<ConcreteType> slot = null;^260^^^^^259^265^[REPLACE] ConcreteType ret = NONE;^[METHOD] getPropertyType [TYPE] ConcreteType [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[ADD]^^260^^^^^259^265^[ADD] ConcreteType ret = NONE;^[METHOD] getPropertyType [TYPE] ConcreteType [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^ret =  other.unionWith ( slot.getType (  )  ) ;^262^^^^^259^265^[REPLACE] ret = ret.unionWith ( slot.getType (  )  ) ;^[METHOD] getPropertyType [TYPE] ConcreteType [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^StaticSlot<ConcreteType> slot = null;^261^^^^^259^265^[REPLACE] for  ( StaticSlot<ConcreteType> slot : getPropertySlots ( name )  )  {^[METHOD] getPropertyType [TYPE] ConcreteType [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^return other;^264^^^^^259^265^[REPLACE] return ret;^[METHOD] getPropertyType [TYPE] ConcreteType [PARAMETER] String name [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot slot  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^@Override boolean isAll (  )  { return true; }^269^^^^^^^[REPLACE] @Override boolean isNone (  )  { return true; }^[METHOD] isNone [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^@Override ConcreteType unionWith ( ConcreteType type )  { return other; }^271^^^^^^^[REPLACE] @Override ConcreteType unionWith ( ConcreteType other )  { return other; }^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^@Override ConcreteType unionWith ( ConcreteType other )  { return other; }^273^^^^^^^[REPLACE] @Override ConcreteType intersectWith ( ConcreteType other )  { return NONE; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^@Override public String toString (  )  { return " (  ) "; } }^275^^^^^^^[REPLACE] @Override public String toString (  )  { return " (  ) "; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^@Override boolean isFunction (  )  { return false; }^316^^^^^^^[REPLACE] @Override boolean isFunction (  )  { return true; }^[METHOD] isFunction [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^@Override ConcreteFunctionType toFunction (  )  { return null; }^318^^^^^^^[REPLACE] @Override ConcreteFunctionType toFunction (  )  { return this; }^[METHOD] toFunction [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^327^^^^^326^328^[REPLACE] return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[METHOD] getCallSlot [TYPE] StaticSlot [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^return getScope (  ) .getSlot ( THIS_SLOT_NAME ) ;^332^^^^^331^333^[REPLACE] return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[METHOD] getThisSlot [TYPE] StaticSlot [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^337^^^^^336^338^[REPLACE] return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[METHOD] getReturnSlot [TYPE] StaticSlot [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^return getScope (  )  .getSlot ( name )  ;^342^^^^^341^343^[REPLACE] return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[METHOD] getParameterSlot [TYPE] StaticSlot [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int id  index 
[REPLACE]^int count = 0L;^347^^^^^346^354^[REPLACE] int count = 0;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^if  (count++  ||  index )  {^349^^^^^346^354^[REPLACE] if  ( count++ == index )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return n.getType (  ) ;^350^^^^^346^354^[REPLACE] return n.getString (  ) ;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^for  ( Nodedeclaration = getFirstParameter (  ) ; n == null; n = n.getNext (  )  )  {^348^^^^^346^354^[REPLACE] for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^if  ( count++  &&  id )  {^349^^^^^346^354^[REPLACE] if  ( count++ == index )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return n .getFirstChild (  )  ;^350^^^^^346^354^[REPLACE] return n.getString (  ) ;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  { if  ( count++ == index )  { ;^348^^^^^346^354^[REPLACE] for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  { if  ( count++ == index )  {^348^^^^^346^354^[REPLACE] for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return this;^353^^^^^346^354^[REPLACE] return null;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return declaration.getString (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^[REPLACE] return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[METHOD] getFirstParameter [TYPE] Node [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return  ( FunctionType )  declaration.getType (  ) ;^363^^^^^362^364^[REPLACE] return  ( FunctionType )  declaration.getJSType (  ) ;^[METHOD] getJSType [TYPE] FunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^if  ( instanceType != null )  {^371^^^^^370^378^[REPLACE] if  ( instanceType == null )  {^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^if  (  ( type = filter.filter ( alt )  )  != null )  {^372^^^^^370^378^[REPLACE] if  ( getJSType (  ) .isConstructor (  )  )  {^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[ADD]^^372^373^374^375^^370^378^[ADD] if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^instanceType  =  instanceType ;^373^374^^^^370^378^[REPLACE] instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^instanceType ;^373^374^^^^370^378^[REPLACE] instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^instanceType  = null ;^373^374^^^^370^378^[REPLACE] instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return bodyScope;^377^^^^^370^378^[REPLACE] return instanceType;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^if  (prototype != null )  {^382^^^^^381^387^[REPLACE] if  ( prototypeType == null )  {^[METHOD] getPrototypeType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^prototypeType  = null ;^383^384^^^^381^387^[REPLACE] prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[METHOD] getPrototypeType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^prototypeType  =  prototypeType ;^383^384^^^^381^387^[REPLACE] prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[METHOD] getPrototypeType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return prototype;^386^^^^^381^387^[REPLACE] return prototypeType;^[METHOD] getPrototypeType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^FunctionType constructor = instanceType.getConstructor (  ) ;^391^^^^^390^394^[REPLACE] FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[METHOD] getSuperclassType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType superConstructor  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[ADD]^^391^^^^^390^394^[ADD] FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[METHOD] getSuperclassType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType superConstructor  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return  ( superConstructor != null ) ? factory.createConcreteInstance ( superConstructor )  : null;^392^393^^^^390^394^[REPLACE] return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[METHOD] getSuperclassType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType superConstructor  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^if  ( bodyScope != this )  {^398^^^^^397^402^[REPLACE] if  ( bodyScope == null )  {^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^bodyScope ;^399^^^^^397^402^[REPLACE] bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[ADD]^^399^^^^^397^402^[ADD] bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^bodyScope  =  bodyScope ;^399^^^^^397^402^[REPLACE] bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^return otherUnion;^401^^^^^397^402^[REPLACE] return bodyScope;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  id  index 
[REPLACE]^StringBuilder b = new StringBuilder ( 32 / 2 ) ;^411^^^^^410^439^[REPLACE] StringBuilder b = new StringBuilder ( 32 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( "this:" ) ;^412^^^^^410^439^[REPLACE] b.append ( "function  ( " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .join (  ) ;^413^^^^^410^439^[REPLACE] boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  (  ( type = filter.filter ( alt )  )  != null )  {^414^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^list.add ( type ) ;^415^^^^^410^439^[REPLACE] b.append ( "this:" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REMOVE]^ret = ret.unionWith ( slot.getType (  )  ) ;^416^^^^^410^439^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( getThisSlot (  ) .getType (  ) .join (  )  ) ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^StringBuilder b = new StringBuilder ( 32 ) ;^419^^^^^410^439^[REPLACE] Node n = getFirstParameter (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  (true && n == null )  {^420^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis && n != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b .append ( paramName )  ;^421^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( n.getNext (  )  == true )  {^428^^^^^410^439^[REPLACE] if  ( n.getNext (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( ": " ) ;^429^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^for  ( ideclarationt i = 0; n == null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( n.getNext (  )  == false )  {^428^^^^^410^439^[REPLACE] if  ( n.getNext (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^String paramName = declaration.getString (  ) ;^424^^^^^410^439^[REPLACE] String paramName = n.getString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^424^425^^^^410^439^[ADD] String paramName = n.getString (  ) ; StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( name ) ;^425^^^^^410^439^[REPLACE] StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^425^^^^^410^439^[ADD] StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^for  ( int i =  0; declaration !^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^for  ( int i = 0 - 3; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^423^424^425^426^427^410^439^[ADD] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  { String paramName = n.getString (  ) ; StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ; b.append ( var.getType (  )  ) ; getParameterSlot ( i ) .getType (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^String paramName = n .getFirstChild (  )  ;^424^^^^^410^439^[REPLACE] String paramName = n.getString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^424^^^^^410^439^[ADD] String paramName = n.getString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( ": " ) ;^433^^^^^410^439^[REPLACE] b.append ( " ) " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( getReturnSlot (  ) .getType (  )  == null )  {^434^^^^^410^439^[REPLACE] if  ( getReturnSlot (  ) .getType (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( ", " ) ;^435^^^^^410^439^[REPLACE] b.append ( ": " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REMOVE]^ret = ret.unionWith ( slot.getType (  )  ) ;^436^^^^^410^439^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return n.getString (  ) ;^438^^^^^410^439^[REPLACE] return b.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^@Override boolean isInstance (  )  { return false; }^474^^^^^^^[REPLACE] @Override boolean isInstance (  )  { return true; }^[METHOD] isInstance [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override ConcreteInstanceType toInstance (  )  { return null; }^476^^^^^^^[REPLACE] @Override ConcreteInstanceType toInstance (  )  { return this; }^[METHOD] toInstance [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return instanceType.getImplicitPrototype (  ) ;^480^^^^^479^481^[REPLACE] return instanceType.isFunctionPrototypeType (  ) ;^[METHOD] isFunctionPrototype [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getScope (  ) .getOwnSlot ( propName ) ;^485^^^^^484^486^[REPLACE] return getScope (  ) .getSlot ( propName ) ;^[METHOD] getPropertySlot [TYPE] StaticSlot [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( getScope (  ) .getOwnSlot ( propName )  == this )  {^493^^^^^492^513^[REPLACE] if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  if  ( getImplicitPrototype (  )  ==prototypeType )  {^508^^^^^492^513^[REPLACE] } else if  ( getImplicitPrototype (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return false;^511^^^^^492^513^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( name ) ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( paramName ) ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( instanceType.getConstructor (  )  == null )  {^504^^^^^492^513^[REPLACE] if  ( instanceType.getConstructor (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getConstructorType (  )  .getInstanceType (  )  ;^505^^^^^492^513^[REPLACE] return getConstructorType (  ) .getPrototypeType (  ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return null;^507^^^^^492^513^[REPLACE] return this;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  else {^508^^^^^492^513^[REPLACE] } else if  ( getImplicitPrototype (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^}   return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;return null;^508^509^510^511^512^492^513^[ADD] else if  ( getImplicitPrototype (  )  != null )  { return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ; } else { return null; }^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return true;^511^^^^^492^513^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^505^^^^^492^513^[REPLACE] return getConstructorType (  ) .getPrototypeType (  ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return getImplicitPrototype (  ) .getPropertySlot ( paramName ) ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  (   ( instanceType.isFunctionPrototypeType (  )  != this )  )  {^517^518^^^^516^525^[REPLACE] if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( !  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^[REPLACE] if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^prototype =  factory.createConcreteInstance ( instanceType ) ;^521^^^^^516^525^[REPLACE] prototype = factory.createConcreteInstance ( proto ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^521^^^^^516^525^[ADD] prototype = factory.createConcreteInstance ( proto ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ObjectType proto = instanceType.isFunctionPrototypeType (  ) ;^519^^^^^516^525^[REPLACE] ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( !  ( proto != instanceType )  ) {^520^^^^^516^525^[REPLACE] if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^prototype =  factory.createConcreteInstance ( null ) ;^521^^^^^516^525^[REPLACE] prototype = factory.createConcreteInstance ( proto ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return prototypeType;^524^^^^^516^525^[REPLACE] return prototype;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  (  ( type = filter.filter ( alt )  )  != null )  {^529^^^^^528^537^[REPLACE] if  ( instanceType.isFunctionPrototypeType (  )  )  {^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^529^530^531^532^533^528^537^[ADD] if  ( instanceType.isFunctionPrototypeType (  )  )  { FunctionPrototypeType protoType =  ( FunctionPrototypeType )  instanceType; return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ; } else { FunctionType constructor = instanceType.getConstructor (  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^534^535^^^^528^537^[REPLACE] return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^FunctionType constructor = instanceType .toString (  )  ;^533^^^^^528^537^[REPLACE] FunctionType constructor = instanceType.getConstructor (  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return factory.createConcreteInstance ( protoType.getOwnerFunction (  )  ) ;^531^^^^^528^537^[REPLACE] return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^int count = 0;^530^^^^^528^537^[REPLACE] FunctionPrototypeType protoType =  ( FunctionPrototypeType )  instanceType;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^530^531^^^^528^537^[ADD] FunctionPrototypeType protoType =  ( FunctionPrototypeType )  instanceType; return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^return  ( constructor != null ) ? factory.createConcreteInstance ( constructor )  : null;^534^535^^^^528^537^[REPLACE] return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[ADD]^^530^531^^^^528^537^[ADD] FunctionPrototypeType protoType =  ( FunctionPrototypeType )  instanceType; return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^FunctionType constructor = instanceType.toString (  ) ;^533^^^^^528^537^[REPLACE] FunctionType constructor = instanceType.getConstructor (  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  Set alternatives  [TYPE]  FunctionPrototypeType protoType  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index  [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  boolean false  true  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list 
[REPLACE]^if  ( scope != null )  {^541^^^^^540^545^[REPLACE] if  ( scope == null )  {^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^scope  = null ;^542^^^^^540^545^[REPLACE] scope = factory.createInstanceScope ( instanceType ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^scope  =  scope ;^542^^^^^540^545^[REPLACE] scope = factory.createInstanceScope ( instanceType ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^542^^^^^540^545^[ADD] scope = factory.createInstanceScope ( instanceType ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return bodyScope;^544^^^^^540^545^[REPLACE] return scope;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override public String toString (  )  { return instanceType.toString (  ) ; } }^547^^^^^^^[REPLACE] @Override public String toString (  )  { return instanceType.toString (  ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override boolean isUnion (  )  { return false; }^567^^^^^^^[REPLACE] @Override boolean isUnion (  )  { return true; }^[METHOD] isUnion [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override ConcreteUnionType toUnion (  )  { return null; }^569^^^^^^^[REPLACE] @Override ConcreteUnionType toUnion (  )  { return this; }^[METHOD] toUnion [TYPE] ConcreteType$ConcreteUnionType [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( !other.isSingleton (  )  )  {^572^^^^^571^595^[REPLACE] if  ( other.isSingleton (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^572^573^574^575^576^571^595^[ADD] if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return this; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  if  ( other.isUnion (  )  )  {^580^^^^^571^595^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return type.intersectWith ( this ) ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives .contains ( false )   )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^return this;return otherUnion;^582^583^584^585^^571^595^[ADD] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  { return this; } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  if  ( otherUnion.alternatives.retainAll ( alternatives )  )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  new ConcreteUnionType ( this, other )  ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^587^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return bodyScope;^585^^^^^571^595^[REPLACE] return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^Set<ConcreteType> alts =   alternatives   ;^587^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return null;^583^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  else {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^}   return otherUnion;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;alts.addAll ( otherUnion.alternatives ) ;^584^585^586^587^588^571^595^[ADD] else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteUnionType otherUnion = other.isUnion (  ) ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives.retainAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^}   Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;alts.addAll ( otherUnion.alternatives ) ;^584^585^586^587^588^571^595^[ADD] else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return type .intersectWith ( NONE )  ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteUnionType typeUnion = other.toUnion (  ) ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^581^^^^^571^595^[ADD] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^587^^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives.equals ( type )  )  {^573^^^^^571^595^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  new ConcreteUnionType ( this, other )  ;^578^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^576^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^576^^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return null;^574^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^576^577^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.add ( other ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives.equals ( other )  )  {^573^^^^^571^595^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REMOVE]^if  ( other.isUnion (  )  )  {     ConcreteType> types = newHashSet ( alternatives ) ;     types.retainAll ( other.toUnion (  ) .alternatives ) ;     return createForTypes ( types ) ; }else {     checkArgument (  (  ( other.isNone (  )  )  ||  ( other.isAll (  )  )  )  ) ;     return other.intersectWith ( this ) ; }^573^^^^^571^595^[REMOVE] ^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^Set<ConcreteType> alts =   alternatives   ;^576^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return other.intersectWith ( this ) ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  if  ( otherUnion.alternatives .contains ( null )   )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives .contains ( null )   )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  if  ( otherUnion.alternatives .contains ( true )   )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return other .intersectWith ( NONE )  ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteUnionType typeUnion = other .isUnion (  )  ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  ConcreteUnionType otherUnion  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( !other.isSingleton (  )  )  {^598^^^^^597^612^[REPLACE] if  ( other.isSingleton (  )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^598^599^600^601^602^597^612^[ADD] if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return other; } else { return NONE;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^}  else {^604^^^^^597^612^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return other .unionWith ( other )  ;^610^^^^^597^612^[REPLACE] return other.intersectWith ( this ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return createForTypes ( false ) ;^607^^^^^597^612^[REPLACE] return createForTypes ( types ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^605^^^^^597^612^[REPLACE] Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return createForTypes ( this ) ;^607^^^^^597^612^[REPLACE] return createForTypes ( types ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return other .unionWith ( ALL )  ;^610^^^^^597^612^[REPLACE] return other.intersectWith ( this ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^Set<ConcreteType> types =   alternatives   ;^605^^^^^597^612^[REPLACE] Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^types.retainAll ( other.toUnion (  ) .alternatives ) ;^605^606^^^^597^612^[ADD] Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ; types.retainAll ( other.toUnion (  ) .alternatives ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^if  ( alternatives.contains ( type )  )  {^599^^^^^597^612^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return bodyScope;^602^^^^^597^612^[REPLACE] return NONE;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return type;^600^^^^^597^612^[REPLACE] return other;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^599^600^601^602^603^597^612^[ADD] if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return other.unionWith ( this ) ;^610^^^^^597^612^[REPLACE] return other.intersectWith ( this ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return createForTypes ( null ) ;^607^^^^^597^612^[REPLACE] return createForTypes ( types ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return type.toFunction (  ) .getInstanceType (  ) ;^615^^^^^^^[REPLACE] Set<ConcreteType> getAlternatives (  )  { return alternatives; }^[METHOD] getAlternatives [TYPE] Set [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  ( obj instanceof ConcreteUnionType ) || alternatives.contains (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^[REPLACE] return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  Object obj  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return alternatives.add (  )  ^ 0x5f6e7d8c;^623^^^^^622^624^[REPLACE] return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^String paramName = n.getString (  ) ;^627^^^^^626^634^[REPLACE] List<String> names = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[ADD]^^627^^^^^626^634^[ADD] List<String> names = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^ConcreteType ret = NONE;^628^^^^^626^634^[REPLACE] for  ( ConcreteType type : alternatives )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^Collections.sort ( this ) ;^631^^^^^626^634^[REPLACE] Collections.sort ( names ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return " ( "  !=  Joiner.on ( "," ) .join ( names )   !=  " ) ";;^633^^^^^626^634^[REPLACE] return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override boolean isAll (  )  { return false; }^639^^^^^^^[REPLACE] @Override boolean isAll (  )  { return true; }^[METHOD] isAll [TYPE] boolean [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override ConcreteType unionWith ( ConcreteType other )  { return null; }^641^^^^^^^[REPLACE] @Override ConcreteType unionWith ( ConcreteType other )  { return this; }^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override ConcreteType intersectWith ( ConcreteType type )  { return other; }^643^^^^^^^[REPLACE] @Override ConcreteType intersectWith ( ConcreteType other )  { return other; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override public String toString (  )  { return " (  ) "; } }^645^^^^^^^[REPLACE] @Override public String toString (  )  { return "*"; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return  ( o instanceof ConcreteUniqueType ) ;^666^667^^^^665^668^[REPLACE] return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  Object o  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^return ConcreteUniqueType.class.equals (  )   ||  id;^671^^^^^670^672^[REPLACE] return ConcreteUniqueType.class.hashCode (  )  ^ id;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^@Override public String toString (  )  { return " (  ) "; } }^674^^^^^^^[REPLACE] @Override public String toString (  )  { return "Unique$" + id; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [TYPE]  ConcreteInstanceType instanceType  prototype  prototypeType  [TYPE]  ObjectType instanceType  proto  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  scope  [TYPE]  Factory factory  [TYPE]  List $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  [TYPE]  ConcreteType ALL  NONE  alt  other  ret  type  [TYPE]  int count  i  id  index 
[REPLACE]^this.emptyList =  this;^167^^^^^166^168^[REPLACE] this.emptyList = emptyList;^[METHOD] <init> [TYPE] List) [PARAMETER] List<C> emptyList [CLASS] TypeFilter   [TYPE]  List emptyList  [TYPE]  boolean false  true 
[REPLACE]^return type.toFunction (  )  ? type.toFunction (  )  : null;^177^^^^^176^178^[REPLACE] return type.isFunction (  )  ? type.toFunction (  )  : null;^[METHOD] filter [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] ConcreteType type [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return type.isInstance (  )  ? type .isInstance (  )   : null;^186^^^^^185^187^[REPLACE] return type.isInstance (  )  ? type.toInstance (  )  : null;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 2   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return type .isFunction (  )  .getInstanceType (  ) ;^196^^^^^194^199^[REPLACE] return type.toFunction (  ) .getInstanceType (  ) ;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 3   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return false;^198^^^^^194^199^[REPLACE] return null;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 3   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^if  (true (  ) ) {^207^208^^^^206^212^[REPLACE] if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 4   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[ADD]^^207^208^209^210^^206^212^[ADD] if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 4   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return type .isInstance (  )  ;^209^^^^^206^212^[REPLACE] return type.toInstance (  ) ;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 4   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return null;^209^^^^^206^212^[REPLACE] return type.toInstance (  ) ;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 4   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return true;^211^^^^^206^212^[REPLACE] return null;^[METHOD] filter [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] ConcreteType type [CLASS] 4   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  ! =  null;^220^221^222^^^219^223^[REPLACE] return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[METHOD] filter [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] ConcreteType type [CLASS] 5   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return true (  ) && toFunction (  ) .getParameterSlot ( index )   =  toFunction (  ) .getParameterSlot ( index )  ;^231^232^233^^^230^234^[REPLACE] return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] 6   [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^StaticSlot<ConcreteType> slot = true;^245^^^^^244^250^[REPLACE] StaticSlot<ConcreteType> slot = null;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] 7   [TYPE]  StaticSlot slot  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^if  ( type .toInstance (  )   )  {^246^^^^^244^250^[REPLACE] if  ( type.isInstance (  )  )  {^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] 7   [TYPE]  StaticSlot slot  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^slot =  null.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^[REPLACE] slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] 7   [TYPE]  StaticSlot slot  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[ADD]^^247^^^^^244^250^[ADD] slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] 7   [TYPE]  StaticSlot slot  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return null;^249^^^^^244^250^[REPLACE] return slot;^[METHOD] filter [TYPE] StaticSlot [PARAMETER] ConcreteType type [CLASS] 7   [TYPE]  StaticSlot slot  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^@Override boolean isNone (  )  { return false; }^269^^^^^^^[REPLACE] @Override boolean isNone (  )  { return true; }^[METHOD] isNone [TYPE] boolean [PARAMETER] [CLASS] ConcreteNoneType   [TYPE]  boolean false  true 
[REPLACE]^@Override ConcreteType intersectWith ( ConcreteType other )  { return NONE; }^271^^^^^^^[REPLACE] @Override ConcreteType unionWith ( ConcreteType other )  { return other; }^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteNoneType   [TYPE]  boolean false  true  [TYPE]  ConcreteType other 
[REPLACE]^@Override ConcreteType unionWith ( ConcreteType other )  { return other; }^273^^^^^^^[REPLACE] @Override ConcreteType intersectWith ( ConcreteType other )  { return NONE; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteNoneType   [TYPE]  boolean false  true  [TYPE]  ConcreteType other 
[REPLACE]^@Override public String toString (  )  { return " (  ) "; } }^275^^^^^^^[REPLACE] @Override public String toString (  )  { return " (  ) "; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteNoneType   [TYPE]  boolean false  true 
[REPLACE]^static final  double  CALL_SLOT_NAME = ":call";^289^^^^^^^[REPLACE] static final String CALL_SLOT_NAME = ":call";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^static final String THIS_SLOT_NAME ;^292^^^^^^^[REPLACE] static final String THIS_SLOT_NAME = ":this";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^final  short  RETURN_SLOT_NAME = ":return";^295^^^^^^^[REPLACE] static final String RETURN_SLOT_NAME = ":return";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^private  StaticScope<ConcreteType> parentScope;^299^^^^^^^[REPLACE] private final StaticScope<ConcreteType> parentScope;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  boolean false  true 
[REPLACE]^this.factory =  null;^307^^^^^304^314^[REPLACE] this.factory = factory;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^this.declaration =  null;^308^^^^^304^314^[REPLACE] this.declaration = declaration;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[ADD]^^308^^^^^304^314^[ADD] this.declaration = declaration;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^this.parentScope =  false;^309^^^^^304^314^[REPLACE] this.parentScope = parentScope;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^Preconditions.checkArgument ( declaration.getType (  )   !=  Token.FUNCTION ) ;^311^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^Preconditions.checkArgument ( declaration .getJSType (  )   == Token.FUNCTION ) ;^311^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^Preconditions.checkArgument ( declaration.getJSType (  )  == this  ) ;^312^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^Preconditions.checkArgument ( declaration .getType (  )   != null ) ;^312^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^Preconditions.checkArgument ( declaration .getType (  )  .isFunctionType (  )  ) ;^313^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REMOVE]^b.append ( var.getType (  )  ) ;^313^^^^^304^314^[REMOVE] ^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^Preconditions.checkArgument ( declaration.getType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^[REPLACE] Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[METHOD] <init> [TYPE] StaticScope) [PARAMETER] Factory factory Node declaration ConcreteType> parentScope [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^@Override boolean isFunction (  )  { return false; }^316^^^^^^^[REPLACE] @Override boolean isFunction (  )  { return true; }^[METHOD] isFunction [TYPE] boolean [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^@Override ConcreteFunctionType toFunction (  )  { return null; }^318^^^^^^^[REPLACE] @Override ConcreteFunctionType toFunction (  )  { return this; }^[METHOD] toFunction [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^327^^^^^326^328^[REPLACE] return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[METHOD] getCallSlot [TYPE] StaticSlot [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^332^^^^^331^333^[REPLACE] return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[METHOD] getThisSlot [TYPE] StaticSlot [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^337^^^^^336^338^[REPLACE] return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[METHOD] getReturnSlot [TYPE] StaticSlot [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^342^^^^^341^343^[REPLACE] return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[METHOD] getParameterSlot [TYPE] StaticSlot [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int index 
[REPLACE]^int count = 4;^347^^^^^346^354^[REPLACE] int count = 0;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^if  ( count++  ||  index )  {^349^^^^^346^354^[REPLACE] if  ( count++ == index )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[ADD]^^349^350^351^^^346^354^[ADD] if  ( count++ == index )  { return n.getString (  ) ; }^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^return n.getType (  ) ;^350^^^^^346^354^[REPLACE] return n.getString (  ) ;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^for  ( Node n = getFirstParameter (  ) ; n ==declaration; n = n .getType (  )   )  {^348^^^^^346^354^[REPLACE] for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^if  (count++  !=  index )  {^349^^^^^346^354^[REPLACE] if  ( count++ == index )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[ADD]^return n.getString (  ) ;^349^350^351^^^346^354^[ADD] if  ( count++ == index )  { return n.getString (  ) ; }^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^return n .getFirstChild (  )  ;^350^^^^^346^354^[REPLACE] return n.getString (  ) ;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  { if  ( count++ == index )  { ;^348^^^^^346^354^[REPLACE] for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  { if  ( count++ == index )  {^348^^^^^346^354^[REPLACE] for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^return this;^353^^^^^346^354^[REPLACE] return null;^[METHOD] getParameterName [TYPE] String [PARAMETER] int index [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  int count  index 
[REPLACE]^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^358^^^^^357^359^[REPLACE] return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[METHOD] getFirstParameter [TYPE] Node [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return  ( FunctionType )  declaration .getType (  )  ;^363^^^^^362^364^[REPLACE] return  ( FunctionType )  declaration.getJSType (  ) ;^[METHOD] getJSType [TYPE] FunctionType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^if  ( prototypeType != this )  {^371^^^^^370^378^[REPLACE] if  ( instanceType == null )  {^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^if  ( n.getNext (  )  != null )  {^372^^^^^370^378^[REPLACE] if  ( getJSType (  ) .isConstructor (  )  )  {^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^instanceType  =  instanceType ;^373^374^^^^370^378^[REPLACE] instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[ADD]^^373^374^^^^370^378^[ADD] instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^instanceType  = null ;^373^374^^^^370^378^[REPLACE] instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return bodyScope;^377^^^^^370^378^[REPLACE] return instanceType;^[METHOD] getInstanceType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^if  ( prototypeType != null )  {^382^^^^^381^387^[REPLACE] if  ( prototypeType == null )  {^[METHOD] getPrototypeType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^prototypeType ;^383^384^^^^381^387^[REPLACE] prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[METHOD] getPrototypeType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return bodyScope;^386^^^^^381^387^[REPLACE] return prototypeType;^[METHOD] getPrototypeType [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^391^^^^^390^394^[REPLACE] FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[METHOD] getSuperclassType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  FunctionType superConstructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME 
[REPLACE]^return  ( superConstructor != false ) ? factory.createConcreteInstance ( superConstructor )  : false;^392^393^^^^390^394^[REPLACE] return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[METHOD] getSuperclassType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  FunctionType superConstructor  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME 
[REPLACE]^if  ( bodyScope != null )  {^398^^^^^397^402^[REPLACE] if  ( bodyScope == null )  {^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^bodyScope  =  bodyScope ;^399^^^^^397^402^[REPLACE] bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[ADD]^^399^^^^^397^402^[ADD] bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^return instanceType;^401^^^^^397^402^[REPLACE] return bodyScope;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  [TYPE]  boolean false  true  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope 
[REPLACE]^StringBuilder b = new StringBuilder ( 0 ) ;^411^^^^^410^439^[REPLACE] StringBuilder b = new StringBuilder ( 32 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^b.append ( "function  ( " ) ;^411^412^^^^410^439^[ADD] StringBuilder b = new StringBuilder ( 32 ) ; b.append ( "function  ( " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b .StringBuilder ( i )  ;^412^^^^^410^439^[REPLACE] b.append ( "function  ( " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^413^^^^^410^439^[REPLACE] boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  ( n.getNext (  )  != null )  {^414^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^b.append ( "this:" ) ;b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^414^415^416^417^^410^439^[ADD] if  ( hasKnownTypeOfThis )  { b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b .StringBuilder ( i )  ;^415^^^^^410^439^[REPLACE] b.append ( "this:" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^[REPLACE] b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^StringBuilder b = new StringBuilder ( 32 ) ;^419^^^^^410^439^[REPLACE] Node n = getFirstParameter (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^^419^^^^^410^439^[ADD] Node n = getFirstParameter (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  ( hasKnownTypeOfThis ) {^420^^^^^410^439^[REPLACE] if  ( hasKnownTypeOfThis && n != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( " ) " ) ;^421^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  ( n.getNext (  )  == null )  {^428^^^^^410^439^[REPLACE] if  ( n.getNext (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( " ) " ) ;^429^^^^^410^439^[REPLACE] b.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REMOVE]^if  ( n.getNext (  )  != null )  { b.append ( ", " ) ;^429^^^^^410^439^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; n == null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^String paramName = declaration .getFirstChild (  )  ;^424^^^^^410^439^[REPLACE] String paramName = n.getString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^425^^^^^410^439^[REPLACE] StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^b.append ( var.getType (  )  ) ;^425^426^^^^410^439^[ADD] StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ; b.append ( var.getType (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^for  ( int i =  0; null !^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^for  ( int i = 4; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^[REPLACE] for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^String paramName = declaration.getString (  ) ;^424^^^^^410^439^[REPLACE] String paramName = n.getString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( ", " ) ;^433^^^^^410^439^[REPLACE] b.append ( " ) " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REMOVE]^if  ( n.getNext (  )  != null )  { b.append ( ", " ) ;^433^^^^^410^439^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^if  ( getReturnSlot (  ) .getType (  )  == null )  {^434^^^^^410^439^[REPLACE] if  ( getReturnSlot (  ) .getType (  )  != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b .StringBuilder ( i )  ;^435^^^^^410^439^[REPLACE] b.append ( ": " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^435^436^^^^410^439^[ADD] b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^436^^^^^410^439^[REPLACE] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[ADD]^^436^^^^^410^439^[ADD] b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^return n.getString (  ) ;^438^^^^^410^439^[REPLACE] return b.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteFunctionType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^public  ObjectType instanceType;^456^^^^^^^[REPLACE] public final ObjectType instanceType;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ConcreteInstanceType instanceType  prototypeType  [TYPE]  StaticSlot var  [TYPE]  boolean false  hasKnownTypeOfThis  true  [TYPE]  StringBuilder b  [TYPE]  Node declaration  n  [TYPE]  StaticScope bodyScope  parentScope  [TYPE]  Factory factory  [TYPE]  String CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  [TYPE]  int i 
[REPLACE]^this.factory =  null;^468^^^^^467^472^[REPLACE] this.factory = factory;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^this.instanceType =  null;^469^^^^^467^472^[REPLACE] this.instanceType = instanceType;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[ADD]^^469^^^^^467^472^[ADD] this.instanceType = instanceType;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^Preconditions.checkArgument ( ! ! ( instanceType instanceof UnknownType )  ) ;^471^^^^^467^472^[REPLACE] Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[ADD]^^471^^^^^467^472^[ADD] Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] Factory factory ObjectType instanceType [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^@Override boolean isInstance (  )  { return false; }^474^^^^^^^[REPLACE] @Override boolean isInstance (  )  { return true; }^[METHOD] isInstance [TYPE] boolean [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^@Override ConcreteInstanceType toInstance (  )  { return null; }^476^^^^^^^[REPLACE] @Override ConcreteInstanceType toInstance (  )  { return this; }^[METHOD] toInstance [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return instanceType.getImplicitPrototype (  ) ;^480^^^^^479^481^[REPLACE] return instanceType.isFunctionPrototypeType (  ) ;^[METHOD] isFunctionPrototype [TYPE] boolean [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return getScope (  ) .getOwnSlot ( propName ) ;^485^^^^^484^486^[REPLACE] return getScope (  ) .getSlot ( propName ) ;^[METHOD] getPropertySlot [TYPE] StaticSlot [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^if  ( getScope (  ) .getOwnSlot ( propName )  == false )  {^493^^^^^492^513^[REPLACE] if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^}  else {^508^^^^^492^513^[REPLACE] } else if  ( getImplicitPrototype (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return true;^511^^^^^492^513^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return getImplicitPrototype (  ) .getPropertySlot ( propName ) ;^509^^^^^492^513^[REPLACE] return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^if  ( instanceType.getConstructor (  )  == null )  {^504^^^^^492^513^[REPLACE] if  ( instanceType.getConstructor (  )  != null )  {^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[ADD]^return getConstructorType (  ) .getPrototypeType (  ) ;^504^505^506^^^492^513^[ADD] if  ( instanceType.getConstructor (  )  != null )  { return getConstructorType (  ) .getPrototypeType (  ) ; }^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^505^^^^^492^513^[REPLACE] return getConstructorType (  ) .getPrototypeType (  ) ;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return null;^507^^^^^492^513^[REPLACE] return this;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return this;^511^^^^^492^513^[REPLACE] return null;^[METHOD] getInstanceTypeWithProperty [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] String propName [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  String propName  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^if  (  ( prototype != null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^[REPLACE] if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^if  (  ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^[REPLACE] if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^prototype =  factory.createConcreteInstance ( instanceType ) ;^521^^^^^516^525^[REPLACE] prototype = factory.createConcreteInstance ( proto ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^ObjectType proto = instanceType .getConstructorType (  )  ;^519^^^^^516^525^[REPLACE] ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[ADD]^^521^^^^^516^525^[ADD] prototype = factory.createConcreteInstance ( proto ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^prototype =  factory.createConcreteInstance ( null ) ;^521^^^^^516^525^[REPLACE] prototype = factory.createConcreteInstance ( proto ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^ObjectType proto = instanceType.isFunctionPrototypeType (  ) ;^519^^^^^516^525^[REPLACE] ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return this;^524^^^^^516^525^[REPLACE] return prototype;^[METHOD] getImplicitPrototype [TYPE] ConcreteType$ConcreteInstanceType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^529^^^^^528^537^[REPLACE] if  ( instanceType.isFunctionPrototypeType (  )  )  {^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[REPLACE]^return  ( constructor != null ) ? factory.createConcreteInstance ( constructor )  : null;^534^535^^^^528^537^[REPLACE] return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[REPLACE]^FunctionType constructor = instanceType .toString (  )  ;^533^^^^^528^537^[REPLACE] FunctionType constructor = instanceType.getConstructor (  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[REPLACE]^return instanceType.isFunctionPrototypeType (  ) ;^531^^^^^528^537^[REPLACE] return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[REPLACE]^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^530^^^^^528^537^[REPLACE] FunctionPrototypeType protoType =  ( FunctionPrototypeType )  instanceType;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[REPLACE]^return factory.createConcreteInstance ( protoType.getOwnerFunction (  )  ) ;^531^^^^^528^537^[REPLACE] return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[REPLACE]^return  ( constructor  =  factory.createConcreteInstance ( constructor )  ;^534^535^^^^528^537^[REPLACE] return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[ADD]^^530^531^^^^528^537^[ADD] FunctionPrototypeType protoType =  ( FunctionPrototypeType )  instanceType; return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[ADD]^^533^^^^^528^537^[ADD] FunctionType constructor = instanceType.getConstructor (  ) ;^[METHOD] getConstructorType [TYPE] ConcreteType$ConcreteFunctionType [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  boolean false  true  [TYPE]  FunctionPrototypeType protoType  [TYPE]  StaticScope scope  [TYPE]  FunctionType constructor  [TYPE]  Factory factory 
[REPLACE]^if  ( scope != null )  {^541^^^^^540^545^[REPLACE] if  ( scope == null )  {^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^scope  =  scope ;^542^^^^^540^545^[REPLACE] scope = factory.createInstanceScope ( instanceType ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[ADD]^^542^^^^^540^545^[ADD] scope = factory.createInstanceScope ( instanceType ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^scope ;^542^^^^^540^545^[REPLACE] scope = factory.createInstanceScope ( instanceType ) ;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^return this;^544^^^^^540^545^[REPLACE] return scope;^[METHOD] getScope [TYPE] StaticScope [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^@Override public String.getConstructor (  )  { return instanceType.toString (  ) ; }^547^^^^^^^[REPLACE] @Override public String toString (  )  { return instanceType.toString (  ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteInstanceType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^private  Set<ConcreteType> alternatives;^556^^^^^^^[REPLACE] private final Set<ConcreteType> alternatives;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  ObjectType instanceType  proto  [TYPE]  ConcreteInstanceType prototype  [TYPE]  Factory factory  [TYPE]  boolean false  true  [TYPE]  StaticScope scope 
[REPLACE]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^559^^^^^558^560^[REPLACE] this ( Sets.newHashSet ( alternatives )  ) ;^[METHOD] <init> [TYPE] ConcreteType[]) [PARAMETER]  alternatives [CLASS] ConcreteUnionType   [TYPE]  ConcreteType[] alternatives  [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[REPLACE]^this (   alternatives    ) ;^559^^^^^558^560^[REPLACE] this ( Sets.newHashSet ( alternatives )  ) ;^[METHOD] <init> [TYPE] ConcreteType[]) [PARAMETER]  alternatives [CLASS] ConcreteUnionType   [TYPE]  ConcreteType[] alternatives  [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[ADD]^^559^^^^^558^560^[ADD] this ( Sets.newHashSet ( alternatives )  ) ;^[METHOD] <init> [TYPE] ConcreteType[]) [PARAMETER]  alternatives [CLASS] ConcreteUnionType   [TYPE]  ConcreteType[] alternatives  [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkArgument ( alternatives.size (  )  - 2 > 0  ) ;^563^^^^^562^565^[REPLACE] Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[ADD]^^563^^^^^562^565^[ADD] Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkArgument ( null.size (  )  > 1 ) ;^563^^^^^562^565^[REPLACE] Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[REPLACE]^this.alternatives =  0;^564^^^^^562^565^[REPLACE] this.alternatives = alternatives;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[ADD]^^564^^^^^562^565^[ADD] this.alternatives = alternatives;^[METHOD] <init> [TYPE] Set) [PARAMETER] ConcreteType> alternatives [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[REPLACE]^@Override boolean isUnion (  )  { return false; }^567^^^^^^^[REPLACE] @Override boolean isUnion (  )  { return true; }^[METHOD] isUnion [TYPE] boolean [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[REPLACE]^@Override ConcreteUnionType toUnion (  )  { return null; }^569^^^^^^^[REPLACE] @Override ConcreteUnionType toUnion (  )  { return this; }^[METHOD] toUnion [TYPE] ConcreteType$ConcreteUnionType [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( other.isUnion (  )  )  {^572^^^^^571^595^[REPLACE] if  ( other.isSingleton (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^572^573^574^575^576^571^595^[ADD] if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return this; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  if  ( other.isUnion (  )  )  {^580^^^^^571^595^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return other.intersectWith ( this ) ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^if  ( alternatives.retainAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^582^583^584^585^^571^595^[ADD] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  { return this; } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  else {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^}   Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;alts.addAll ( otherUnion.alternatives ) ;^584^585^586^587^588^571^595^[ADD] else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  { return otherUnion; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( true ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^587^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^587^^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return other.intersectWith ( this ) ;^585^^^^^571^595^[REPLACE] return otherUnion;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( false ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return null;^583^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^} else if  ( otherUnion.alternatives.retainAll ( alternatives )  )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^Set<ConcreteType> alts =   alternatives   ;^587^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( 1 ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteUnionType otherUnion = other.isUnion (  ) ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( this ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( null ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^ConcreteUnionType otherUnion = other .isUnion (  )  ;^581^^^^^571^595^[REPLACE] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^if  ( alternatives.equals ( other )  )  {^573^^^^^571^595^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( null ) ;^578^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^576^^^^^571^595^[REPLACE] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return null;^574^^^^^571^595^[REPLACE] return this;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^} else if  ( other.isUnion (  )  )  {^573^^^^^571^595^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^573^574^575^576^577^571^595^[ADD] if  ( alternatives.contains ( other )  )  { return this; } else { Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.add ( other ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  else {^580^^^^^571^595^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^} else if  ( other.isUnion (  )  )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return new ConcreteUnionType ( 0 ) ;^589^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^587^588^^^^571^595^[ADD] Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[ADD]^^581^^^^^571^595^[ADD] ConcreteUnionType otherUnion = other.toUnion (  ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^if  ( alternatives .contains ( false )   )  {^582^^^^^571^595^[REPLACE] if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^}  if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^584^^^^^571^595^[REPLACE] } else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^578^^^^^571^595^[REPLACE] return new ConcreteUnionType ( alts ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^return other .intersectWith ( other )  ;^593^^^^^571^595^[REPLACE] return other.unionWith ( this ) ;^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  [TYPE]  boolean false  true  [TYPE]  ConcreteType other  [TYPE]  ConcreteUnionType otherUnion 
[REPLACE]^} else if  ( other.isUnion (  )  )  {^598^^^^^597^612^[REPLACE] if  ( other.isSingleton (  )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[ADD]^^598^599^600^601^602^597^612^[ADD] if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return other; } else { return NONE;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^if  ( alternatives.contains ( other )  )  {^604^^^^^597^612^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return other .unionWith ( other )  ;^610^^^^^597^612^[REPLACE] return other.intersectWith ( this ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return createForTypes ( this ) ;^607^^^^^597^612^[REPLACE] return createForTypes ( types ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^605^^^^^597^612^[REPLACE] Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return createForTypes ( null ) ;^607^^^^^597^612^[REPLACE] return createForTypes ( types ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^Set<ConcreteType> types =   alternatives   ;^605^^^^^597^612^[REPLACE] Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[ADD]^^605^^^^^597^612^[ADD] Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^if  ( alternatives.equals ( other )  )  {^599^^^^^597^612^[REPLACE] if  ( alternatives.contains ( other )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return otherUnion;^602^^^^^597^612^[REPLACE] return NONE;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return other.intersectWith ( this ) ;^600^^^^^597^612^[REPLACE] return other;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[ADD]^return other;return NONE;^599^600^601^602^603^597^612^[ADD] if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( other.isUnion (  )  )  {^604^^^^^597^612^[REPLACE] } else if  ( other.isUnion (  )  )  {^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return other.unionWith ( this ) ;^610^^^^^597^612^[REPLACE] return other.intersectWith ( this ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return createForTypes ( false ) ;^607^^^^^597^612^[REPLACE] return createForTypes ( types ) ;^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteUnionType   [TYPE]  ConcreteType other  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^615^^^^^^^[REPLACE] Set<ConcreteType> getAlternatives (  )  { return alternatives; }^[METHOD] getAlternatives [TYPE] Set [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return  ( ! obj instanceof ConcreteUnionType ) ;^618^619^^^^617^620^[REPLACE] return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ConcreteUnionType   [TYPE]  Object obj  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^return alternatives.add (  )   ;^623^^^^^622^624^[REPLACE] return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true 
[REPLACE]^ConcreteUnionType otherUnion = other.toUnion (  ) ;^627^^^^^626^634^[REPLACE] List<String> names = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  List names  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[ADD]^^627^^^^^626^634^[ADD] List<String> names = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  List names  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^for  ( ConcreteType type : alternatives )  { names.add ( type.toString (  )  ) ;^628^^^^^626^634^[REPLACE] for  ( ConcreteType type : alternatives )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  List names  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^names   ;^631^^^^^626^634^[REPLACE] Collections.sort ( names ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  List names  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[ADD]^^631^^^^^626^634^[ADD] Collections.sort ( names ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  List names  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^return false ;^633^^^^^626^634^[REPLACE] return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUnionType   [TYPE]  List names  [TYPE]  Set alternatives  alts  types  [TYPE]  boolean false  true  [TYPE]  ConcreteType type 
[REPLACE]^@Override boolean isAll (  )  { return false; }^639^^^^^^^[REPLACE] @Override boolean isAll (  )  { return true; }^[METHOD] isAll [TYPE] boolean [PARAMETER] [CLASS] ConcreteAll   [TYPE]  boolean false  true 
[REPLACE]^@Override ConcreteType unionWith ( ConcreteType other )  { return null; }^641^^^^^^^[REPLACE] @Override ConcreteType unionWith ( ConcreteType other )  { return this; }^[METHOD] unionWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteAll   [TYPE]  boolean false  true  [TYPE]  ConcreteType other 
[REPLACE]^@Override ConcreteType unionWith ( ConcreteType other )  { return this; }^643^^^^^^^[REPLACE] @Override ConcreteType intersectWith ( ConcreteType other )  { return other; }^[METHOD] intersectWith [TYPE] ConcreteType [PARAMETER] ConcreteType other [CLASS] ConcreteAll   [TYPE]  boolean false  true  [TYPE]  ConcreteType other 
[REPLACE]^@Override public String toString (  )  { return "*"; } }^645^^^^^^^[REPLACE] @Override public String toString (  )  { return "*"; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteAll   [TYPE]  boolean false  true 
[REPLACE]^this.id =  null;^660^^^^^659^663^[REPLACE] this.id = id;^[METHOD] <init> [TYPE] ConcreteType$ConcreteUniqueType(int) [PARAMETER] int id [CLASS] ConcreteUniqueType   [TYPE]  int id  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkArgument ( id  ==  0 >>> 0 ) ;^662^^^^^659^663^[REPLACE] Preconditions.checkArgument ( id >= 0 ) ;^[METHOD] <init> [TYPE] ConcreteType$ConcreteUniqueType(int) [PARAMETER] int id [CLASS] ConcreteUniqueType   [TYPE]  int id  [TYPE]  boolean false  true 
[ADD]^^662^^^^^659^663^[ADD] Preconditions.checkArgument ( id >= 0 ) ;^[METHOD] <init> [TYPE] ConcreteType$ConcreteUniqueType(int) [PARAMETER] int id [CLASS] ConcreteUniqueType   [TYPE]  int id  [TYPE]  boolean false  true 
[REPLACE]^return true ;^666^667^^^^665^668^[REPLACE] return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] ConcreteUniqueType   [TYPE]  int id  [TYPE]  Object o  [TYPE]  boolean false  true 
[REPLACE]^return ConcreteUniqueType.class.hashCode (  )   ||  id;^671^^^^^670^672^[REPLACE] return ConcreteUniqueType.class.hashCode (  )  ^ id;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] ConcreteUniqueType   [TYPE]  int id  [TYPE]  boolean false  true 
[REPLACE]^@Override public String toString (  )  { return "Unique$" +false; }^674^^^^^^^[REPLACE] @Override public String toString (  )  { return "Unique$" + id; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ConcreteUniqueType   [TYPE]  int id  [TYPE]  boolean false  true 
