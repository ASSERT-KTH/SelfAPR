[REPLACE]^private final  Map<String, DiagnosticGroup> groupsByName = Maps.newHashMap (  ) ;^33^34^^^^33^34^[REPLACE] private final static Map<String, DiagnosticGroup> groupsByName = Maps.newHashMap (  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^static final String DIAGNOSTIC_GROUP_NAMES ;^50^51^52^53^^50^53^[REPLACE] static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^ [CLASS] DiagnosticGroups  
[REPLACE]^public static DiagnosticGroup DEPRECATED ;^55^56^57^58^^55^63^[REPLACE] public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^ [CLASS] DiagnosticGroups  
[REPLACE]^public static DiagnosticGroup VISIBILITY ;^65^66^67^68^^65^72^[REPLACE] public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^ [CLASS] DiagnosticGroups  
[REPLACE]^public  DiagnosticGroup NON_STANDARD_JSDOC = DiagnosticGroups.registerGroup ( "nonStandardJsDocs", new DiagnosticGroup ( RhinoErrorReporter.BAD_JSDOC_ANNOTATION )  ) ;^74^75^76^^^74^76^[REPLACE] public static DiagnosticGroup NON_STANDARD_JSDOC = DiagnosticGroups.registerGroup ( "nonStandardJsDocs", new DiagnosticGroup ( RhinoErrorReporter.BAD_JSDOC_ANNOTATION )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^public static DiagnosticGroup ACCESS_CONTROLS  = null ;^78^79^80^^^78^80^[REPLACE] public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^private static DiagnosticGroup INVALID_CASTS = DiagnosticGroups .registerGroup ( "invalidCasts", new DiagnosticGroup ( TypeValidator.INVALID_CAST )  ) ;^82^83^84^^^82^84^[REPLACE] public static DiagnosticGroup INVALID_CASTS = DiagnosticGroups .registerGroup ( "invalidCasts", new DiagnosticGroup ( TypeValidator.INVALID_CAST )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^public  DiagnosticGroup FILEOVERVIEW_JSDOC = DiagnosticGroups.registerGroup ( "fileoverviewTags", new DiagnosticGroup ( RhinoErrorReporter.EXTRA_FILEOVERVIEW )  ) ;^86^87^88^^^86^88^[REPLACE] public static DiagnosticGroup FILEOVERVIEW_JSDOC = DiagnosticGroups.registerGroup ( "fileoverviewTags", new DiagnosticGroup ( RhinoErrorReporter.EXTRA_FILEOVERVIEW )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK  = null ;^90^91^92^93^^90^93^[REPLACE] public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^public static DiagnosticGroup UNKNOWN_DEFINES ;^95^96^97^^^95^97^[REPLACE] public static DiagnosticGroup UNKNOWN_DEFINES = DiagnosticGroups.registerGroup ( "unknownDefines", new DiagnosticGroup ( ProcessDefines.UNKNOWN_DEFINE_WARNING )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^public static DiagnosticGroup MISSING_PROPERTIES  = null ;^99^100^101^^^99^101^[REPLACE] public static DiagnosticGroup MISSING_PROPERTIES = DiagnosticGroups.registerGroup ( "missingProperties", new DiagnosticGroup ( TypeCheck.INEXISTENT_PROPERTY )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^public static DiagnosticGroup UNDEFINED_VARIABLES  = null ;^103^104^105^^^103^105^[REPLACE] public static DiagnosticGroup UNDEFINED_VARIABLES = DiagnosticGroups.registerGroup ( "undefinedVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR )  ) ;^ [CLASS] DiagnosticGroups  
[REPLACE]^public  DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^107^108^109^110^^107^111^[REPLACE] public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^ [CLASS] DiagnosticGroups  
[REPLACE]^public  DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^113^114^115^116^^113^117^[REPLACE] public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^ [CLASS] DiagnosticGroups  
[REPLACE]^groupsByName .get ( name )  ;^38^^^^^36^40^[REPLACE] groupsByName.put ( name, group ) ;^[METHOD] registerGroup [TYPE] DiagnosticGroup [PARAMETER] String name DiagnosticGroup group [CLASS] DiagnosticGroups   [TYPE]  String DIAGNOSTIC_GROUP_NAMES  name  [TYPE]  boolean false  true  [TYPE]  Map groupsByName  [TYPE]  DiagnosticGroup ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group 
[REPLACE]^return NON_STANDARD_JSDOC;^39^^^^^36^40^[REPLACE] return group;^[METHOD] registerGroup [TYPE] DiagnosticGroup [PARAMETER] String name DiagnosticGroup group [CLASS] DiagnosticGroups   [TYPE]  String DIAGNOSTIC_GROUP_NAMES  name  [TYPE]  boolean false  true  [TYPE]  Map groupsByName  [TYPE]  DiagnosticGroup ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group 
[REPLACE]^return groupsByName.get ( DIAGNOSTIC_GROUP_NAMES ) ;^44^^^^^43^45^[REPLACE] return groupsByName.get ( name ) ;^[METHOD] forName [TYPE] DiagnosticGroup [PARAMETER] String name [CLASS] DiagnosticGroups   [TYPE]  String DIAGNOSTIC_GROUP_NAMES  name  [TYPE]  boolean false  true  [TYPE]  Map groupsByName  [TYPE]  DiagnosticGroup ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group 
[REPLACE]^for  ( String name : diagnosticGroups )  { DiagnosticGroup group = forName ( name ) ;^124^^^^^122^129^[REPLACE] for  ( String name : diagnosticGroups )  {^[METHOD] setWarningLevels [TYPE] void [PARAMETER] CompilerOptions options String> diagnosticGroups CheckLevel level [CLASS] DiagnosticGroups   [TYPE]  boolean false  true  [TYPE]  DiagnosticGroup ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  [TYPE]  CheckLevel level  [TYPE]  CompilerOptions options  [TYPE]  List diagnosticGroups  [TYPE]  String DIAGNOSTIC_GROUP_NAMES  name  [TYPE]  Map groupsByName 
[REPLACE]^DiagnosticGroup group = forName ( DIAGNOSTIC_GROUP_NAMES ) ;^125^^^^^122^129^[REPLACE] DiagnosticGroup group = forName ( name ) ;^[METHOD] setWarningLevels [TYPE] void [PARAMETER] CompilerOptions options String> diagnosticGroups CheckLevel level [CLASS] DiagnosticGroups   [TYPE]  boolean false  true  [TYPE]  DiagnosticGroup ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  [TYPE]  CheckLevel level  [TYPE]  CompilerOptions options  [TYPE]  List diagnosticGroups  [TYPE]  String DIAGNOSTIC_GROUP_NAMES  name  [TYPE]  Map groupsByName 
