[REPLACE]^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS ;^49^50^51^52^^49^56^[REPLACE] private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS = new HashSet<String> ( Arrays.asList ( "Array", "Date",^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^public static final String CONSTANT_MARKER ;^58^^^^^^^[REPLACE] public static final String CONSTANT_MARKER = "$$constant";^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^final Map<String, Node> vars ;^1633^^^^^^^[REPLACE] final Map<String, Node> vars = Maps.newLinkedHashMap (  ) ;^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^String name;^1731^^^^^^^[REPLACE] final String name;^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^int type;^1747^^^^^^^[REPLACE] final int type;^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^if  ( "undefined".equals ( CONSTANT_MARKER ) && "NaN".equals ( name )  )  {^84^85^^^^69^101^[REPLACE] if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^} else if  ( "Infinity".equals ( CONSTANT_MARKER )  )  {^89^^^^^69^101^[REPLACE] } else if  ( "Infinity".equals ( name )  )  {^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^90^^^^^69^101^[REPLACE] return true;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^88^^^^^84^91^[REPLACE] return false;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^}  if  ( "Infinity".equals ( CONSTANT_MARKER )  )  {^89^^^^^69^101^[REPLACE] } else if  ( "Infinity".equals ( name )  )  {^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getString (  ) .size (  )  > 0;^72^^^^^69^101^[REPLACE] return n.getString (  ) .length (  )  > 0;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true ;^75^^^^^69^101^[REPLACE] return n.getDouble (  )  != 0;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^80^^^^^69^101^[REPLACE] return false;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;  ;^88^^^^^69^101^[REPLACE] return false;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^98^^^^^69^101^[REPLACE] return true;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^String name = n.getFirstChild (  ) .getString (  )  ;^83^^^^^69^101^[REPLACE] String name = n.getString (  ) ;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[ADD]^^100^^^^^69^101^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^if  ( longValue  ||  value )  {^121^^^^^109^136^[REPLACE] if  ( longValue == value )  {^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return Double.toString ( n.getType (  )  ) ;^124^^^^^121^125^[REPLACE] return Double.toString ( n.getDouble (  )  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^case Token.BITXOR: return 6;  ;^122^^^^^109^136^[REPLACE] return Long.toString ( longValue ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return n.newString (  ) ;^114^^^^^109^136^[REPLACE] return n.getString (  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return Double.toString ( n.getType (  )  ) ;^124^^^^^109^136^[REPLACE] return Double.toString ( n.getDouble (  )  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return Node.tokenToName ( n .getString (  )   ) ;^130^^^^^109^136^[REPLACE] return Node.tokenToName ( n.getType (  )  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return "undefined";  ;^133^^^^^109^136^[REPLACE] return "undefined";^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^double value = n.getType (  ) ;^117^^^^^109^136^[REPLACE] double value = n.getDouble (  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^Node child = n.getFirstChild (  )  ;^118^^^^^109^136^[REPLACE] long longValue =  ( long )  value;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return null;  ;^135^^^^^109^136^[REPLACE] return null;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^String parentame = n.getFirstChild (  ) .getString (  ) ;^155^^^^^154^171^[REPLACE] String name = n.getFirstChild (  ) .getString (  ) ;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.getString (  ) ;^160^^^^^154^171^[REPLACE] return parent.getString (  ) ;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.getFirstChild (  ) .getQualifiedName (  ) ;^165^^^^^154^171^[REPLACE] return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return name != true && name.size (  )  != 0 ? name : true;^169^^^^^154^171^[REPLACE] return name != null && name.length (  )  != 0 ? name : null;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return true;  ;^184^^^^^176^197^[REPLACE] return true;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^186^^^^^176^197^[REPLACE] return isImmutableValue ( n.getFirstChild (  )  ) ;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return "undefined".equals ( name ) ;^191^192^193^^^176^197^[REPLACE] return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^String name = n.getFirstChild (  ) .getString (  )  ;^188^^^^^176^197^[REPLACE] String name = n.getString (  ) ;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^196^^^^^176^197^[REPLACE] return false;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^if  ( isLiteralValue ( child )  )  {^214^^^^^205^223^[REPLACE] if  ( !isLiteralValue ( child )  )  {^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^return true;^215^^^^^205^223^[REPLACE] return false;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^child =  null.getNext (  )  )  {^213^^^^^205^223^[REPLACE] child = child.getNext (  )  )  {^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^return false;^218^^^^^205^223^[REPLACE] return true;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^case Token.BITXOR: return 6;  ;^221^^^^^205^223^[REPLACE] return isImmutableValue ( n ) ;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^for  ( Node child = n .getLastChild (  )  ; child != null;^212^^^^^205^223^[REPLACE] for  ( Node child = n.getFirstChild (  ) ; child != null;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^if  ( val.getQualifiedName (  )  )  {^251^^^^^231^256^[REPLACE] if  ( val.isQualifiedName (  )  )  {^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return defines.contains  (  val.getQualifiedName  (    )    )  ;  ;^252^^^^^231^256^[REPLACE] return defines.contains ( val.getQualifiedName (  )  ) ;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return false;^237^^^^^231^256^[REPLACE] return true;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return isValidDefineValue ( val.getLastChild (  ) , null ) ;^246^^^^^231^256^[REPLACE] return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return null.contains ( val.getQualifiedName (  )  ) ;^252^^^^^231^256^[REPLACE] return defines.contains ( val.getQualifiedName (  )  ) ;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return true;^255^^^^^231^256^[REPLACE] return false;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return false;^312^^^^^281^317^[REPLACE] return true;^[METHOD] isSimpleOperatorType [TYPE] boolean [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return true;^315^^^^^281^317^[REPLACE] return false;^[METHOD] isSimpleOperatorType [TYPE] boolean [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^if  ( true )  {^384^^^^^353^478^[REPLACE] if  ( checkForNewObjects )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^385^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( current.getFirstChild (  )  == null ) return true;^391^392^^^^353^478^[REPLACE] if  ( n.getFirstChild (  )  != null ) return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^return true;break;^391^392^^394^^353^478^[ADD] if  ( n.getFirstChild (  )  != null ) return true; break;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^392^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( true )  {^406^^^^^353^478^[REPLACE] if  ( checkForNewObjects )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^407^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if   (  callNode.isNoSideEffectsCall  (    )    )   {  ;^412^^^^^353^478^[REPLACE] if  ( n.isNoSideEffectsCall (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( Token.NAME  ) {^418^^^^^353^478^[REPLACE] if  ( Token.NAME == constructor.getType (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( name )  )  {^420^^^^^353^478^[REPLACE] if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^420^421^^423^424^353^478^[ADD] if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {  break; }^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^String className = n.getString (  ) ;^419^^^^^353^478^[REPLACE] String className = constructor.getString (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( current.isQualifiedName (  )  )  {^435^^^^^353^478^[REPLACE] if  ( n.isNoSideEffectsCall (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( isSimpleOperatorType ( current.getType (  )  )  ) break;^443^444^^^^353^478^[REPLACE] if  ( isSimpleOperatorType ( n.getType (  )  )  ) break;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^break;^443^444^^446^^353^478^[ADD] if  ( isSimpleOperatorType ( n.getType (  )  )  ) break; if  ( isAssignmentOp ( n )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if   (  NodeUtil.isAssignmentOp  (  n  )    )   {  ;^446^^^^^353^478^[REPLACE] if  ( isAssignmentOp ( n )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^446^447^^^^353^478^[ADD] if  ( isAssignmentOp ( n )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  && checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^353^478^[REPLACE] if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^451^452^453^454^455^353^478^[ADD] if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  { return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^455^^^^^451^456^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^current = current.getNext (  )  ;^462^^^^^353^478^[REPLACE] current = current.getFirstChild (  )  )  { }^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^455^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return  ( isLiteralValue ( current )  && current.getType (  )  ;^464^465^^^^353^478^[REPLACE] return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^Node child = n.getFirstChild (  )  ;^458^^^^^353^478^[REPLACE] Node current = n.getFirstChild (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , true )  ) {^451^452^453^454^^353^478^[REPLACE] if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^462^463^464^^^353^478^[ADD] current = current.getFirstChild (  )  )  { }  return ! ( isLiteralValue ( current )  ||^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^379^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return !isFunctionAnonymous ( current ) ;^402^^^^^353^478^[REPLACE] return !isFunctionAnonymous ( n ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^430^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^440^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return  ( isLiteralValue ( n )  && current.getType (  )  ;^464^465^^^^353^478^[REPLACE] return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^468^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^Node constructor = current.getFirstChild (  ) ;^417^^^^^353^478^[REPLACE] Node constructor = n.getFirstChild (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^419^^^^^353^478^[ADD] String className = constructor.getString (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^458^^^^^353^478^[ADD] Node current = n.getFirstChild (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( currentheckForStateChangeHelper ( c, checkForNewObjects )  )  {^472^^^^^353^478^[REPLACE] if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REMOVE]^if  ( isFunctionObjectCall ( callNode )  )  {     if  (  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  )  ==  ( NAME )  )  {         return true;     } }^472^^^^^353^478^[REMOVE] ^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^473^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^n = n.getNext (  )  ;^471^^^^^353^478^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^for  ( Node c = n.getLastChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^353^478^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return true;^477^^^^^353^478^[REPLACE] return false;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^Preconditions.checkArgument ( nameNode.getType (  )   ||  Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^[REPLACE] Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^callNode .getString (  )   == Token.NEW, "Expected NEW node, got " + Token.name ( callNode^487^488^^^^485^501^[REPLACE] callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^"Expected NEW node, got " + Token.name ( nameNode.getType (  )  )  ) ;^488^^^^^485^501^[REPLACE] "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REMOVE]^getCount ( c, pred )  ;^488^^^^^485^501^[REMOVE] ^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( nameNode.isNoSideEffectsCall (  )  )  {^490^^^^^485^501^[REPLACE] if  ( callNode.isNoSideEffectsCall (  )  )  {^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;  ;^491^^^^^485^501^[REPLACE] return false;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^491^^^^^485^501^[REPLACE] return false;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^Node nameNode = nameNode.getFirstChild (  ) ;^494^^^^^485^501^[REPLACE] Node nameNode = callNode.getFirstChild (  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  (  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^[REPLACE] if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^495^496^497^498^^485^501^[ADD] if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  { return false; }^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^497^^^^^495^498^[REPLACE] return false;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^497^^^^^485^501^[REPLACE] return false;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;^500^^^^^485^501^[REPLACE] return true;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^Preconditions.checkState ( callNode.getType (  )   ||  Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^[REPLACE] Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^509^510^511^^^508^537^[ADD] Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( nameNode.getType (  )  )  ) ;^510^511^^^^508^537^[REPLACE] callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^"Expected CALL node, got " + Token.name ( nameNode.getType (  )  )  ) ;^511^^^^^508^537^[REPLACE] "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( nameNode.isQualifiedName (  )  )  {^513^^^^^508^537^[REPLACE] if  ( callNode.isNoSideEffectsCall (  )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^514^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^Node child = n.getFirstChild (  )  ;^517^^^^^508^537^[REPLACE] Node nameNode = callNode.getFirstChild (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( nameNode.getType (  )   !=  Token.NAME )  {^520^^^^^508^537^[REPLACE] if  ( nameNode.getType (  )  == Token.NAME )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( namespaceName.equals ( "String" )  )  {^522^^^^^508^537^[REPLACE] if  ( name.equals ( "String" )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^522^523^524^^^508^537^[ADD] if  ( name.equals ( "String" )  )  { return false; }^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;  ;^523^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^523^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String name = callNode.getString (  ) ;^521^^^^^508^537^[REPLACE] String name = nameNode.getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String name = nameNode.newString (  ) ;^521^^^^^508^537^[REPLACE] String name = nameNode.getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( nameNode.newNumber (  )  == Token.GETPROP || nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^[REPLACE] if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^528^529^530^531^532^508^537^[ADD] if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ; if  ( namespaceName.equals ( "Math" )  )  { return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( name.equals ( "Math" )  )  {^531^^^^^528^534^[REPLACE] if  ( namespaceName.equals ( "Math" )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^return false;^531^532^533^^^528^534^[ADD] if  ( namespaceName.equals ( "Math" )  )  { return false; }^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;  ;^532^^^^^528^534^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String name = n.getFirstChild (  ) .getString (  )  ;^530^^^^^528^534^[REPLACE] String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( name.equals ( "Math" )  )  {^531^^^^^508^537^[REPLACE] if  ( namespaceName.equals ( "Math" )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REMOVE]^if  (  ( block.getType (  )  )  !=  ( BLOCK )  )  {     return false; }^531^^^^^508^537^[REMOVE] ^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^532^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;  ;^532^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String name = n.getFirstChild (  ) .getString (  )  ;^530^^^^^508^537^[REPLACE] String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;^536^^^^^508^537^[REPLACE] return true;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( NodeUtil .getOpFromAssignmentOp ( n )   )  {^547^^^^^546^565^[REPLACE] if  ( NodeUtil.isAssignmentOp ( n )  )  {^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^548^^^^^546^565^[REPLACE] return true;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^558^^^^^546^565^[REPLACE] return true;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.detachChildren (  ) ;^561^^^^^546^565^[REPLACE] return n.hasChildren (  ) ;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^563^^^^^546^565^[REPLACE] return false;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;  ;^589^^^^^582^608^[REPLACE] return true;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return NodeUtil.isConstantName ( n ) || !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^[REPLACE] return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return false;^598^^^^^582^608^[REPLACE] return true;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^602^^^^^582^608^[REPLACE] if  ( canBeSideEffected ( c, knownConstants )  )  {^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[ADD]^^602^603^604^^^582^608^[ADD] if  ( canBeSideEffected ( c, knownConstants )  )  { return true; }^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return true;  ;^603^^^^^582^608^[REPLACE] return true;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^n = n.getNext (  )  ;^601^^^^^582^608^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return false;^603^^^^^582^608^[REPLACE] return true;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c = n.getLastChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return true;^607^^^^^582^608^[REPLACE] return false;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^case Token.COMMA:  return 1;^629^^^^^627^702^[REPLACE] case Token.COMMA:  return 0;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.ASSIGN: return 1 + 4;^641^^^^^627^702^[REPLACE] case Token.ASSIGN: return 1;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return;  ;^642^^^^^627^702^[REPLACE] case Token.HOOK:   return 2;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.OR:     return 3 * 3;^643^^^^^627^702^[REPLACE] case Token.OR:     return 3;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.AND:    return 1;^644^^^^^627^702^[REPLACE] case Token.AND:    return 4;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return 15;  ;^645^^^^^627^702^[REPLACE] case Token.BITOR:  return 5;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.BITXOR: return 2;^646^^^^^627^702^[REPLACE] case Token.BITXOR: return 6;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.BITAND: return 7 + 2;^647^^^^^627^702^[REPLACE] case Token.BITAND: return 7;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.SHNE:   return 1;^651^^^^^627^702^[REPLACE] case Token.SHNE:   return 8;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.IN:     return 2;^657^^^^^627^702^[REPLACE] case Token.IN:     return 9;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.URSH:   return 2;^660^^^^^627^702^[REPLACE] case Token.URSH:   return 10;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return 15;  ;^662^^^^^627^702^[REPLACE] case Token.ADD:    return 11;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.DIV:    return 12 >>> 3;^665^^^^^627^702^[REPLACE] case Token.DIV:    return 12;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.NEG:    return 14;^675^^^^^627^702^[REPLACE] case Token.NEG:    return 13;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return 15;  ;^696^^^^^627^702^[REPLACE] return 15;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[ADD]^^698^699^700^701^^627^702^[ADD] default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ; }^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return true;  ;^737^^^^^723^740^[REPLACE] return true;^[METHOD] isAssignmentOp [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^739^^^^^723^740^[REPLACE] return false;^[METHOD] isAssignmentOp [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^745^^^^^742^768^[REPLACE] return Token.BITOR;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^747^^^^^742^768^[REPLACE] return Token.BITXOR;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^749^^^^^742^768^[REPLACE] return Token.BITAND;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^751^^^^^742^768^[REPLACE] return Token.LSH;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^753^^^^^742^768^[REPLACE] return Token.RSH;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^755^^^^^742^768^[REPLACE] return Token.URSH;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^757^^^^^742^768^[REPLACE] return Token.ADD;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^759^^^^^742^768^[REPLACE] return Token.SUB;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^761^^^^^742^768^[REPLACE] return Token.MUL;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^763^^^^^742^768^[REPLACE] return Token.DIV;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^case Token.BITXOR: return 6;  ;^765^^^^^742^768^[REPLACE] return Token.MOD;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return ;^767^^^^^742^768^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^945^^^^^932^949^[REPLACE] return true;^[METHOD] isControlStructure [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^947^^^^^932^949^[REPLACE] return false;^[METHOD] isControlStructure [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return parent.getLastChild (  )   &&  n;^961^^^^^955^979^[REPLACE] return parent.getLastChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return false ;^963^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.getLastChild  (    )   == n;  ;^965^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  != n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.getFirstChild  (    )   == n || parent.getLastChild  (    )   == n;  ;^967^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.getLastChild (  )   &&  n;^969^^^^^955^979^[REPLACE] return parent.getLastChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.getFirstChild (  )   ;^972^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  != n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return false;^974^^^^^955^979^[REPLACE] return true;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return true;^977^^^^^955^979^[REPLACE] return false;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.getLastChild (  ) ;^990^^^^^986^1005^[REPLACE] return n.getFirstChild (  ) ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getFirstChild (  ) ;^992^^^^^986^1005^[REPLACE] return n.getLastChild (  ) ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return this;^996^^^^^986^1005^[REPLACE] return null;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n .getLastChild (  )  .getNext (  ) ;^998^^^^^986^1005^[REPLACE] return n.getFirstChild (  ) .getNext (  ) ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^1002^^^^^986^1005^[REPLACE] return null;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^throw new IllegalArgumentException ( "Not an assiment op" )  ;^1000^^^^^986^1005^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[ADD]^^1004^^^^^986^1005^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^if  ( isStatementBlock ( parent ) && isSwitchCase ( node ) && isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1062^1098^[REPLACE] if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  else {^1069^^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.VAR )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}   parent.removeChild ( node ) ;^1069^1070^1071^1072^^1062^1098^[ADD] else if  ( parent.getType (  )  == Token.VAR )  { if  ( parent.hasMoreThanOneChild (  )  )  { parent.removeChild ( node ) ; } else {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( node.getType (  )   &&  Token.BLOCK )  {^1078^^^^^1062^1098^[REPLACE] } else if  ( node.getType (  )  == Token.BLOCK )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  (  node == parent.getLastChild (  )  )  {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1095^1096^^^^1088^1097^[ADD] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^( parent.toString (  )  )  ;^1096^^^^^1088^1097^[REPLACE] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^node.toString (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1088^1097^[REPLACE] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1096^^^^^1088^1097^[ADD] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .replaceChild ( node )  ;^1093^^^^^1088^1097^[REPLACE] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^return ;^1095^1096^^^^1062^1098^[REPLACE] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1085^^^^^1082^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^isControlStructure ( parent )  ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( node.getParent (  ) , parent ) ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  else {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}^1088^1089^^^^1062^1098^[ADD] else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^return ;^1095^1096^^^^1088^1097^[REPLACE] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.addChildAfter ( node, new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^[REPLACE] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^node.hasChildren (  ) ;^1081^^^^^1062^1098^[REPLACE] node.detachChildren (  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if   (  parent.getType  (    )   == Token.LABEL && block.hasOneChild  (    )    )   {  ;^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}   parent.removeChild ( node ) ;^1082^1083^^1085^^1062^1098^[ADD] else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  { parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^( node.toString (  )  )  ;^1096^^^^^1088^1097^[REPLACE] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 3 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^getCount ( c, pred )  ;^1093^^^^^1088^1097^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^if  ( parent .hasOneChild (  )   )  {^1070^^^^^1062^1098^[REPLACE] if  ( parent.hasMoreThanOneChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1074^^^^^1070^1077^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1074^^^^^1070^1077^[ADD] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( node.getParent (  ) , parent ) ;^1076^^^^^1070^1077^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^block.getParent (  )  ;^1076^^^^^1070^1077^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1076^^^^^1070^1077^[ADD] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.removeChild ( block )  ;^1071^^^^^1062^1098^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^1070^^^^^1062^1098^[REPLACE] if  ( parent.hasMoreThanOneChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .removeChild ( parent , node )  ;^1074^^^^^1070^1077^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^nodeName.addChildrenToBack ( value )  ;^1074^^^^^1070^1077^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1071^^^^^1062^1098^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  (   Token.BLOCK )  {^1078^^^^^1062^1098^[REPLACE] } else if  ( node.getType (  )  == Token.BLOCK )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}   node.detachChildren (  ) ;^1078^1079^^1081^1082^1062^1098^[ADD] else if  ( node.getType (  )  == Token.BLOCK )  {  node.detachChildren (  ) ; } else if  ( parent.getType (  )  == Token.LABEL^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^node.tokenToName (  )  + " of "+ parent.toString (  )  ) ;^1096^^^^^1088^1097^[REPLACE] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( parent.getString (  ) , parent ) ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  (  parent .addChildToFront ( node )   == 4 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( parent.getType (  )  == Token.LABEL || node == parent.getLastChild (  )  )  {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.removeChild ( block )  ;^1085^^^^^1082^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1085^^^^^1082^1097^[ADD] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( node.getString (  ) , parent ) ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1068^^^^^1064^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( parent.getType (  )   &&  Token.VAR )  {^1069^^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.VAR )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^if   (  block.getType  (    )   != Token.BLOCK  )   {  ;^1078^^^^^1062^1098^[REPLACE] } else if  ( node.getType (  )  == Token.BLOCK )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.LABEL || node == parent.getLastChild (  )  )  {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .replaceChild ( parent )  ;^1093^^^^^1088^1097^[REPLACE] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .removeChild ( parent , node )  ;^1085^^^^^1082^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^( parent.getFirstChild (  )  )  ;^1096^^^^^1088^1097^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( parent.getType (  )  == Token.LABEL ) {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^block.getParent (  )  ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.FOR ) {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1093^^^^^1088^1097^[ADD] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1095^1096^^^^1062^1098^[ADD] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.removeChild ( block )  ;^1074^^^^^1070^1077^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^isControlStructure ( parent )  ;^1076^^^^^1070^1077^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^( parent.getFirstChild (  )  )  ;^1076^^^^^1070^1077^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1071^^^^^1062^1098^[ADD] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( node.getType (  )   !=  Token.BLOCK )  {^1078^^^^^1062^1098^[REPLACE] } else if  ( node.getType (  )  == Token.BLOCK )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1087^^^^^1082^1097^[ADD] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^nodeName.addChildrenToBack ( value )  ;^1081^^^^^1062^1098^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^checkArgument (  (  ( n.getType (  )  )  ==  ( TRY )  )  )  ;^1105^^^^^1104^1124^[REPLACE] Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Preconditions.checkState ( previous.getType (  )  == Token.BLOCK ) ;^1105^^^^^1104^1124^[REPLACE] Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node child = n.getFirstChild (  )  ;^1106^^^^^1104^1124^[REPLACE] Node parent = block.getParent (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^if   (  n.getType  (    )   == Token.NAME  )   {  ;^1109^^^^^1104^1124^[REPLACE] if  ( NodeUtil.isStatementBlock ( parent )  )  {^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^}  if  ( parent.getType (  )  == Token.LABEL || block.hasOneChild (  )  )  {^1118^^^^^1104^1124^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^}   parent.replaceChild ( block, block.removeFirstChild (  )  ) ;return true;return false;^1118^1119^1120^1121^1122^1104^1124^[ADD] else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  { parent.replaceChild ( block, block.removeFirstChild (  )  ) ; return true; } else { return false;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return true;^1122^^^^^1118^1123^[REPLACE] return false;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return false;^1120^^^^^1104^1124^[REPLACE] return true;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return true;^1122^^^^^1104^1124^[REPLACE] return false;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^previous =  null;^1114^^^^^1104^1124^[REPLACE] previous = child;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return false;^1117^^^^^1104^1124^[REPLACE] return true;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node previous = previous;^1110^^^^^1104^1124^[REPLACE] Node previous = block;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node child = previous.removeFirstChild (  ) ;^1112^^^^^1104^1124^[REPLACE] Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^}  else {^1118^^^^^1104^1124^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return false;  ;^1122^^^^^1118^1123^[REPLACE] return false;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return true;  ;^1117^^^^^1104^1124^[REPLACE] return true;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^^1112^^^^^1104^1124^[ADD] Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^case Token.BITXOR: return 6;  ;^1331^^^^^1329^1374^[REPLACE] case Token.BITOR: return "|";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1332^^^^^1329^1374^[REPLACE] case Token.OR: return "||";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1333^^^^^1329^1374^[REPLACE] case Token.BITXOR: return "^";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1334^^^^^1329^1374^[REPLACE] case Token.AND: return "&&";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1335^^^^^1329^1374^[REPLACE] case Token.BITAND: return "&";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1336^^^^^1329^1374^[REPLACE] case Token.SHEQ: return "===";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1337^^^^^1329^1374^[REPLACE] case Token.EQ: return "==";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1338^^^^^1329^1374^[REPLACE] case Token.NOT: return "!";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1339^^^^^1329^1374^[REPLACE] case Token.NE: return "!=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1340^^^^^1329^1374^[REPLACE] case Token.SHNE: return "!==";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1341^^^^^1329^1374^[REPLACE] case Token.LSH: return "<<";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1342^^^^^1329^1374^[REPLACE] case Token.IN: return "in";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1343^^^^^1329^1374^[REPLACE] case Token.LE: return "<=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1344^^^^^1329^1374^[REPLACE] case Token.LT: return "<";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1345^^^^^1329^1374^[REPLACE] case Token.URSH: return ">>>";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1346^^^^^1329^1374^[REPLACE] case Token.RSH: return ">>";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1347^^^^^1329^1374^[REPLACE] case Token.GE: return ">=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1348^^^^^1329^1374^[REPLACE] case Token.GT: return ">";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1349^^^^^1329^1374^[REPLACE] case Token.MUL: return "*";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1350^^^^^1329^1374^[REPLACE] case Token.DIV: return "/";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1351^^^^^1329^1374^[REPLACE] case Token.MOD: return "%";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1352^^^^^1329^1374^[REPLACE] case Token.BITNOT: return "~";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1353^^^^^1329^1374^[REPLACE] case Token.ADD: return "+";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1354^^^^^1329^1374^[REPLACE] case Token.SUB: return "-";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1355^^^^^1329^1374^[REPLACE] case Token.POS: return "+";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1356^^^^^1329^1374^[REPLACE] case Token.NEG: return "-";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1357^^^^^1329^1374^[REPLACE] case Token.ASSIGN: return "=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1358^^^^^1329^1374^[REPLACE] case Token.ASSIGN_BITOR: return "|=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1359^^^^^1329^1374^[REPLACE] case Token.ASSIGN_BITXOR: return "^=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1360^^^^^1329^1374^[REPLACE] case Token.ASSIGN_BITAND: return "&=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1361^^^^^1329^1374^[REPLACE] case Token.ASSIGN_LSH: return "<<=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1362^^^^^1329^1374^[REPLACE] case Token.ASSIGN_RSH: return ">>=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1363^^^^^1329^1374^[REPLACE] case Token.ASSIGN_URSH: return ">>>=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1364^^^^^1329^1374^[REPLACE] case Token.ASSIGN_ADD: return "+=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1365^^^^^1329^1374^[REPLACE] case Token.ASSIGN_SUB: return "-=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1366^^^^^1329^1374^[REPLACE] case Token.ASSIGN_MUL: return "*=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1367^^^^^1329^1374^[REPLACE] case Token.ASSIGN_DIV: return "/=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1368^^^^^1329^1374^[REPLACE] case Token.ASSIGN_MOD: return "%=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1369^^^^^1329^1374^[REPLACE] case Token.VOID: return "void";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1370^^^^^1329^1374^[REPLACE] case Token.TYPEOF: return "typeof";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;  ;^1371^^^^^1329^1374^[REPLACE] case Token.INSTANCEOF: return "instanceof";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^default: return false;^1372^^^^^1329^1374^[REPLACE] default: return null;^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^Node addingRoot = true;^1455^^^^^1454^1474^[REPLACE] Node addingRoot = null;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Node ancestor = ancestor;^1456^^^^^1454^1474^[REPLACE] Node ancestor = n;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^if  ( type  ) {^1459^^^^^1454^1474^[REPLACE] if  ( type == Token.SCRIPT )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^}  else {^1462^^^^^1454^1474^[REPLACE] } else if  ( type == Token.FUNCTION )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^}   addingRoot = ancestor.getLastChild (  ) ;break;^1462^1463^1464^1465^^1454^1474^[ADD] else if  ( type == Token.FUNCTION )  { addingRoot = ancestor.getLastChild (  ) ; break; }^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot =  n.getLastChild (  ) ;^1463^^^^^1454^1474^[REPLACE] addingRoot = ancestor.getLastChild (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^^1460^^^^^1454^1474^[ADD] addingRoot = ancestor;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^}  if  ( operator  ) {^1462^^^^^1454^1474^[REPLACE] } else if  ( type == Token.FUNCTION )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^while  ( null !=   ( n^1457^^^^^1454^1474^[REPLACE] while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot =  n;^1460^^^^^1454^1474^[REPLACE] addingRoot = ancestor;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^int type = n.getType (  ) ;^1458^^^^^1454^1474^[REPLACE] int type = ancestor.getType (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( n.newNumber (  )  == Token.BLOCK ;^1469^1470^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( n.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot.newNumber (  )  == Token.SCRIPT ) ;^1470^^^^^1454^1474^[REPLACE] addingRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REMOVE]^callNode.getType (  )  ;^1470^^^^^1454^1474^[REMOVE] ^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null && addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( n.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot.getFirstChild (  )  .getString (  )   != Token.SCRIPT ) ;^1472^^^^^1454^1474^[REPLACE] addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^( parent.getFirstChild (  )  )  ;^1472^^^^^1454^1474^[REPLACE] addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^return n;^1473^^^^^1454^1474^[REPLACE] return addingRoot;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^int endPos = propName.indexOf ( '.' ) ;^1500^^^^^1499^1519^[REPLACE] int endPos = name.indexOf ( '.' ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^if  (   -1 + 0 )  {^1501^^^^^1499^1519^[REPLACE] if  ( endPos == -1 )  {^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^return Node.newString ( Token.NAME, name, type, charno ) ;^1502^^^^^1499^1519^[REPLACE] return Node.newString ( Token.NAME, name, lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^Node node = Node.replaceChild ( Token.NAME, name.substring ( 4, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^[REPLACE] Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^^1506^^^^^1499^1519^[ADD] int startPos;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^^1508^^^^^1499^1519^[ADD] startPos = endPos + 1;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^^1509^^^^^1499^1519^[ADD] endPos = name.indexOf ( '.', startPos ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^^1513^1514^1515^^^1499^1519^[ADD] node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^^1510^1511^1512^^^1499^1519^[ADD] String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^return node;  ;^1518^^^^^1499^1519^[REPLACE] return node;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^if   (  pred.apply  (  n  )    )   {  ;^1809^^^^^1808^1824^[REPLACE] if  ( pred.apply ( node )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return true;  ;^1810^^^^^1808^1824^[REPLACE] return true;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^if  ( traverseChildrenPred.apply ( node )  )  {^1813^^^^^1808^1824^[REPLACE] if  ( !traverseChildrenPred.apply ( node )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return true;^1814^^^^^1808^1824^[REPLACE] return false;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return false;  ;^1814^^^^^1808^1824^[REPLACE] return false;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^if  ( has ( c, this, traverseChildrenPred )  )  {^1818^^^^^1808^1824^[REPLACE] if  ( has ( c, pred, traverseChildrenPred )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return false;^1819^^^^^1808^1824^[REPLACE] return true;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^n = n.getNext (  )  ;^1817^^^^^1808^1824^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^for  ( Node c = node .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^1817^^^^^1808^1824^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return true;^1823^^^^^1808^1824^[REPLACE] return false;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^final Map<String, Node> vars  = null ;^1633^^^^^^^[REPLACE] final Map<String, Node> vars = Maps.newLinkedHashMap (  ) ;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^String name;^1731^^^^^^^[REPLACE] final String name;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] MatchNameNode   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^final  long  type;^1747^^^^^^^[REPLACE] final int type;^[METHOD] apply [TYPE] boolean [PARAMETER] Node n [CLASS] MatchNodeType   [TYPE]  String name  [TYPE]  Node n  [TYPE]  boolean false  true 
