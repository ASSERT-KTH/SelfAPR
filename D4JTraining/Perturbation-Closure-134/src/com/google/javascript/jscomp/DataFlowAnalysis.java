[REPLACE]^private  ControlFlowGraph<N> cfg;^147^^^^^^^[REPLACE] private final ControlFlowGraph<N> cfg;^ [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1  
[REPLACE]^JoinOp<L> joinOp;^148^^^^^^^[REPLACE] final JoinOp<L> joinOp;^ [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1  
[REPLACE]^protected  Set<DiGraphNode<N, Branch>> orderedWorkSet;^149^^^^^^^[REPLACE] protected final Set<DiGraphNode<N, Branch>> orderedWorkSet;^ [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1  
[REPLACE]^public static final int MAX_STEPS ;^157^^^^^^^[REPLACE] public static final int MAX_STEPS = 100000;^ [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1  
[REPLACE]^private static final long serialVersionUID = 1;^443^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1  
[REPLACE]^this.cfg =  1;^181^^^^^180^190^[REPLACE] this.cfg = targetCfg;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^this.joinOp =  null;^182^^^^^180^190^[REPLACE] this.joinOp = joinOp;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^Comparator<DiGraphNode<N, Branch>> nodeComparator = cfg.getDirectedSuccNodes ( isForward (  )  ) ;^183^184^^^^180^190^[REPLACE] Comparator<DiGraphNode<N, Branch>> nodeComparator = cfg.getOptionalNodeComparator ( isForward (  )  ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^if  ( nodeComparator == null )  {^185^^^^^180^190^[REPLACE] if  ( nodeComparator != null )  {^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[ADD]^this.orderedWorkSet = Sets.newTreeSet ( nodeComparator ) ;this.orderedWorkSet = Sets.newLinkedHashSet (  ) ;^185^186^187^188^189^180^190^[ADD] if  ( nodeComparator != null )  { this.orderedWorkSet = Sets.newTreeSet ( nodeComparator ) ; } else { this.orderedWorkSet = Sets.newLinkedHashSet (  ) ; }^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^this.orderedWorkSet ;^188^^^^^180^190^[REPLACE] this.orderedWorkSet = Sets.newLinkedHashSet (  ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^this.orderedWorkSet =  Sets.newTreeSet ( null ) ;^186^^^^^180^190^[REPLACE] this.orderedWorkSet = Sets.newTreeSet ( nodeComparator ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^this.orderedWorkSet =  Sets.newTreeSet ( false ) ;^186^^^^^180^190^[REPLACE] this.orderedWorkSet = Sets.newTreeSet ( nodeComparator ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^this.orderedWorkSet  = null ;^188^^^^^180^190^[REPLACE] this.orderedWorkSet = Sets.newLinkedHashSet (  ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  out  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp  [TYPE]  Comparator nodeComparator 
[REPLACE]^Preconditions.checkNotNull ( outState ) ;^402^^^^^401^406^[REPLACE] Preconditions.checkNotNull ( inState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkNotNull ( out ) ;^403^^^^^401^406^[REPLACE] Preconditions.checkNotNull ( outState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.in = in; ;^404^^^^^401^406^[REPLACE] this.in = inState;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.out = out; ;^405^^^^^401^406^[REPLACE] this.out = outState;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^405^^^^^401^406^[ADD] this.out = outState;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^analyze ( MAX_STEPS ) ;^445^^^^^444^446^[REPLACE] super ( msg ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String msg [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  String msg  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^super ( null, joinOp ) ;^473^^^^^471^474^[REPLACE] super ( targetCfg, joinOp ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^orderedWorkSet.add ( node ) ;^473^^^^^471^474^[REMOVE] ^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkNotNull ( outState ) ;^559^^^^^558^563^[REPLACE] Preconditions.checkNotNull ( inState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkNotNull ( false ) ;^560^^^^^558^563^[REPLACE] Preconditions.checkNotNull ( outState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.in = in; ;^561^^^^^558^563^[REPLACE] this.in = inState;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.out = out; ;^562^^^^^558^563^[REPLACE] this.out = outState;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkArgument ( !values.get (  )  ) ;^108^^^^^107^120^[REPLACE] Preconditions.checkArgument ( !values.isEmpty (  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^108^^^^^107^120^[ADD] Preconditions.checkArgument ( !values.isEmpty (  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkArgument ( !values .get ( size )   ) ;^108^^^^^107^120^[REPLACE] Preconditions.checkArgument ( !values.isEmpty (  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^int size = null.size (  ) ;^109^^^^^107^120^[REPLACE] int size = values.size (  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if (size  != mid) {^110^^^^^107^120^[REPLACE] if  ( size == 1 )  {^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  else {^112^^^^^107^120^[REPLACE] } else if  ( size == 2 )  {^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^}   return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;int mid = computeMidPoint ( size ) ;^112^113^114^115^116^107^120^[ADD] else if  ( size == 2 )  { return apply ( values.get ( 0 ) , values.get ( 1 )  ) ; } else { int mid = computeMidPoint ( size ) ; return apply (^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return apply ( apply ( values.subList ( 0 , mid )  ) , apply ( values.subList ( mid, size )  )  ) ;^116^117^118^^^107^120^[REPLACE] return apply ( apply ( values.subList ( 0, mid )  ) , apply ( values.subList ( mid, size )  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^int mid = computeMidPoint ( mid ) ;^115^^^^^107^120^[REPLACE] int mid = computeMidPoint ( size ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return apply ( values.add ( 0 ) , values.get ( 1 )  ) ;^113^^^^^107^120^[REPLACE] return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return apply ( values.get ( 4 ) , values.get ( 1 )  ) ;^113^^^^^107^120^[REPLACE] return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Var var = i.next (  ) ;^115^^^^^107^120^[REPLACE] int mid = computeMidPoint ( size ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return values.add ( 0 ) ;^111^^^^^107^120^[REPLACE] return values.get ( 0 ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^} else if (size  !=  2) {^112^^^^^107^120^[REPLACE] } else if  ( size == 2 )  {^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^115^^^^^107^120^[ADD] int mid = computeMidPoint ( size ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return apply ( this .isEmpty (  )  , values^113^^^^^107^120^[REPLACE] return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return apply ( 0 .isEmpty (  )  , values^113^^^^^107^120^[REPLACE] return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return apply ( apply ( values .size (  )   ) , apply ( values^116^117^118^^^107^120^[REPLACE] return apply ( apply ( values.subList ( 0, mid )  ) , apply ( values.subList ( mid, size )  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  out  outState  [TYPE]  int MAX_STEPS  mid  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^int midpoint = size  ==  1;^137^^^^^136^144^[REPLACE] int midpoint = size >>> 1;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if (size  !=  4) {^138^^^^^136^144^[REPLACE] if  ( size > 4 )  {^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^midpoint &= -2L;^141^^^^^136^144^[REPLACE] midpoint &= -2;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^midpoint &= -2 - 1;^141^^^^^136^144^[REPLACE] midpoint &= -2;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^141^^^^^136^144^[ADD] midpoint &= -2;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return size;^143^^^^^136^144^[REPLACE] return midpoint;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return state.getIn (  ) ;^199^^^^^198^200^[REPLACE] return cfg;^[METHOD] getCfg [TYPE] ControlFlowGraph [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^206^^^^^205^209^[REPLACE] DiGraphNode<N, Branch> node = getCfg (  ) .getImplicitReturn (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> state = this.getAnnotation (  ) ;^207^^^^^205^209^[REPLACE] FlowState<L> state = node.getAnnotation (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return state.getOut (  ) ;^208^^^^^205^209^[REPLACE] return state.getIn (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return joinOp .apply ( out , outState )  ;^213^^^^^212^214^[REPLACE] return joinOp.apply ( Lists.<L>newArrayList ( latticeA, latticeB )  ) ;^[METHOD] join [TYPE] L [PARAMETER] L latticeA L latticeB [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^initialize (  ) ;^240^^^^^239^241^[REPLACE] analyze ( MAX_STEPS ) ;^[METHOD] analyze [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^240^^^^^239^241^[ADD] analyze ( MAX_STEPS ) ;^[METHOD] analyze [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  mid  midpoint  size  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^analyze ( MAX_STEPS ) ;^262^^^^^261^289^[REPLACE] initialize (  ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^262^263^^^^261^289^[ADD] initialize (  ) ; int step = 0;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^int step = 3;^263^^^^^261^289^[REPLACE] int step = 0;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^while  ( orderedWorkSet.isEmpty (  )  )  {^264^^^^^261^289^[REPLACE] while  ( !orderedWorkSet.isEmpty (  )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( step  >=  maxSteps )  {^265^^^^^261^289^[REPLACE] if  ( step > maxSteps )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return ;^266^267^^^^261^289^[REPLACE] throw new MaxIterationsExceededException ( "Analysis did not terminate after " + maxSteps + " iterations" ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^266^267^^^^261^289^[ADD] throw new MaxIterationsExceededException ( "Analysis did not terminate after " + maxSteps + " iterations" ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( flow ( null )  )  {^272^^^^^261^289^[REPLACE] if  ( flow ( curNode )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( null  ==  cfg.getImplicitReturn (  )  )  {^279^^^^^261^289^[REPLACE] if  ( nextNode != cfg.getImplicitReturn (  )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.remove ( nextNode ) ;^280^^^^^261^289^[REPLACE] orderedWorkSet.add ( nextNode ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> nextNodes = isForward (  )  ? cfg.getDirectedSuccNodes ( this )  : cfg.getDirectedPredNodes ( curNode ) ;^275^276^277^^^261^289^[REPLACE] List<DiGraphNode<N, Branch>> nextNodes = isForward (  )  ? cfg.getDirectedSuccNodes ( curNode )  : cfg.getDirectedPredNodes ( curNode ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^278^^^^^261^289^[REPLACE] for  ( DiGraphNode<N, Branch> nextNode : nextNodes )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( nextNode  == null (  )  )  {^279^^^^^261^289^[REPLACE] if  ( nextNode != cfg.getImplicitReturn (  )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.add ( null ) ;^280^^^^^261^289^[REPLACE] orderedWorkSet.add ( nextNode ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^DiGraphNode<N, Branch> curNode = orderedWorkSet.isEmpty (  ) .next (  ) ;^269^^^^^261^289^[REPLACE] DiGraphNode<N, Branch> curNode = orderedWorkSet.iterator (  ) .next (  ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^269^^^^^261^289^[ADD] DiGraphNode<N, Branch> curNode = orderedWorkSet.iterator (  ) .next (  ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> nextNodes = isForward (  )  ? cfg.getDirectedSuccNodes ( false )  : cfg.getDirectedPredNodes ( curNode ) ;^275^276^277^^^261^289^[REPLACE] List<DiGraphNode<N, Branch>> nextNodes = isForward (  )  ? cfg.getDirectedSuccNodes ( curNode )  : cfg.getDirectedPredNodes ( curNode ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  (size  <=  maxSteps )  {^265^^^^^261^289^[REPLACE] if  ( step > maxSteps )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( nodeComparator != null )  {^272^^^^^261^289^[REPLACE] if  ( flow ( curNode )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  (true  ==  cfg.getImplicitReturn (  )  )  {^279^^^^^261^289^[REPLACE] if  ( nextNode != cfg.getImplicitReturn (  )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^275^276^277^^^261^289^[ADD] List<DiGraphNode<N, Branch>> nextNodes = isForward (  )  ? cfg.getDirectedSuccNodes ( curNode )  : cfg.getDirectedPredNodes ( curNode ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^278^279^280^281^^261^289^[ADD] for  ( DiGraphNode<N, Branch> nextNode : nextNodes )  { if  ( nextNode != cfg.getImplicitReturn (  )  )  { orderedWorkSet.add ( nextNode ) ; }^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( nextNode  ==  cfg.getImplicitReturn (  )  )  {^279^^^^^261^289^[REPLACE] if  ( nextNode != cfg.getImplicitReturn (  )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.add ( true ) ;^280^^^^^261^289^[REPLACE] orderedWorkSet.add ( nextNode ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^DiGraphNode<N, Branch> curNode = orderedWorkSet.iterator (  ) .getVar (  ) ;^269^^^^^261^289^[REPLACE] DiGraphNode<N, Branch> curNode = orderedWorkSet.iterator (  ) .next (  ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> nextNodes = isForward (  )  ? cfg.getDirectedSuccNodes ( true )  : cfg.getDirectedPredNodes ( curNode ) ;^275^276^277^^^261^289^[REPLACE] List<DiGraphNode<N, Branch>> nextNodes = isForward (  )  ? cfg.getDirectedSuccNodes ( curNode )  : cfg.getDirectedPredNodes ( curNode ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( nodeComparator != null )  {^286^^^^^261^289^[REPLACE] if  ( isForward (  )  )  {^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^joinInputs ( getCfg (  ) .getImplicitReturn (  )  ) ;^286^287^288^^^261^289^[ADD] if  ( isForward (  )  )  { joinInputs ( getCfg (  ) .getImplicitReturn (  )  ) ; }^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( isForward (  )  )  { joinInputs ( getCfg (  ) .getImplicitReturn (  )  ) ;^287^^^^^261^289^[REPLACE] joinInputs ( getCfg (  ) .getImplicitReturn (  )  ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^287^^^^^261^289^[ADD] joinInputs ( getCfg (  ) .getImplicitReturn (  )  ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^joinInputs ( getCfg (  ) .getOptionalNodeComparator (  )  ) ;^287^^^^^261^289^[REPLACE] joinInputs ( getCfg (  ) .getImplicitReturn (  )  ) ;^[METHOD] analyze [TYPE] void [PARAMETER] int maxSteps [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode curNode  nextNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.iterator (  ) ;^312^^^^^308^320^[REPLACE] orderedWorkSet.clear (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( node  ==  cfg .getOptionalNodeComparator ( false )   )  {^316^^^^^308^320^[REPLACE] if  ( node != cfg.getImplicitReturn (  )  )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^orderedWorkSet.add ( node ) ;^316^317^318^^^308^320^[ADD] if  ( node != cfg.getImplicitReturn (  )  )  { orderedWorkSet.add ( node ) ; }^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.add ( 1 ) ;^317^^^^^308^320^[REPLACE] orderedWorkSet.add ( node ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^313^^^^^308^320^[REPLACE] for  ( DiGraphNode<N, Branch> node : cfg.getDirectedGraphNodes (  )  )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^313^314^315^316^317^308^320^[ADD] for  ( DiGraphNode<N, Branch> node : cfg.getDirectedGraphNodes (  )  )  { node.setAnnotation ( new FlowState<L> ( createInitialEstimateLattice (  ) , createInitialEstimateLattice (  )  )  ) ; if  ( node != cfg.getImplicitReturn (  )  )  { orderedWorkSet.add ( node ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inState  input  latticeA  latticeB  out  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> state = null.getValue (  ) ;^328^^^^^327^338^[REPLACE] FlowState<L> state = node.getAnnotation (  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^328^^^^^327^338^[ADD] FlowState<L> state = node.getAnnotation (  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( nodeComparator != null )  {^329^^^^^327^338^[REPLACE] if  ( isForward (  )  )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^L outBefore = state.out;^329^330^331^332^^327^338^[ADD] if  ( isForward (  )  )  { L outBefore = state.out; state.out = flowThrough ( node.getValue (  ) , state.in ) ; return !outBefore.equals ( state.out ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.out = flowThrough ( node.getValue (  ) , state.in ) ; ;^335^^^^^327^338^[REPLACE] state.in = flowThrough ( node.getValue (  ) , state.out ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return !outBefore.equals ( state.out ) ;^336^^^^^327^338^[REPLACE] return !inBefore.equals ( state.in ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^L inBefore = this.in;^334^^^^^327^338^[REPLACE] L inBefore = state.in;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.in = flowThrough ( node.getValue (  ) , state.out ) ; ;^331^^^^^327^338^[REPLACE] state.out = flowThrough ( node.getValue (  ) , state.in ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^return !outBefore.equals ( state.out ) ;^331^332^^^^327^338^[ADD] state.out = flowThrough ( node.getValue (  ) , state.in ) ; return !outBefore.equals ( state.out ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return !outBefore.equals ( 1.out ) ;^332^^^^^327^338^[REPLACE] return !outBefore.equals ( state.out ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^L outBefore = null.out;^330^^^^^327^338^[REPLACE] L outBefore = state.out;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return !outBefore.equals ( null.out ) ;^332^^^^^327^338^[REPLACE] return !outBefore.equals ( state.out ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^L outBefore = this.out;^330^^^^^327^338^[REPLACE] L outBefore = state.out;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^330^331^332^333^334^327^338^[ADD] L outBefore = state.out; state.out = flowThrough ( node.getValue (  ) , state.in ) ; return !outBefore.equals ( state.out ) ; } else { L inBefore = state.in;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^L inBefore = null.in;^334^^^^^327^338^[REPLACE] L inBefore = state.in;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^334^335^336^337^^327^338^[ADD] L inBefore = state.in; state.in = flowThrough ( node.getValue (  ) , state.out ) ; return !inBefore.equals ( state.in ) ; }^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  FlowState state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> state = this.getAnnotation (  ) ;^347^^^^^346^384^[REPLACE] FlowState<L> state = node.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( nodeComparator != null )  {^348^^^^^346^384^[REPLACE] if  ( isForward (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNodes.size (  )  + 4 == 0  )  {^367^^^^^348^383^[REPLACE] if  ( inNodes.size (  )  == 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  else {^375^^^^^348^383^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^}   List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^375^376^377^378^379^348^383^[ADD] else if  ( inNodes.size (  )  > 1 )  { List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ; for  ( DiGraphNode<N, Branch> currentNode : inNodes )  { FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getIn (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( 0 .subList ( maxSteps , maxSteps )   ) ;^376^^^^^348^383^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^377^^^^^348^383^[REPLACE] for  ( DiGraphNode<N, Branch> currentNode : inNodes )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> currentNodeState = currentNode.getValue (  ) ;^378^^^^^348^383^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.size (  )  ) ;^376^^^^^348^383^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> currentNodeState = currentNode .setAnnotation ( null )  ;^378^^^^^348^383^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNode  &&  cfg.getImplicitReturn (  )  )  {^369^^^^^348^383^[REPLACE] if  ( inNode == cfg.getImplicitReturn (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNode.getValue (  ) ;^372^^^^^369^374^[REPLACE] FlowState<L> inNodeState = inNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state .getOut (  )  ;^370^^^^^348^383^[REPLACE] state.setOut ( createEntryLattice (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^370^^^^^348^383^[REMOVE] ^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.setIn ( createEntryLattice (  )  ) ;^370^^^^^348^383^[REPLACE] state.setOut ( createEntryLattice (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^DiGraphNode<N, Branch> inNode = inNodes.get ( 0L ) ;^368^^^^^348^383^[REPLACE] DiGraphNode<N, Branch> inNode = inNodes.get ( 0 ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNode.getValue (  ) ;^372^^^^^348^383^[REPLACE] FlowState<L> inNodeState = inNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^372^^^^^348^383^[ADD] FlowState<L> inNodeState = inNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( false  !=  cfg.getImplicitReturn (  )  )  {^369^^^^^348^383^[REPLACE] if  ( inNode == cfg.getImplicitReturn (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^state.setOut ( createEntryLattice (  )  ) ;FlowState<L> inNodeState = inNode.getAnnotation (  ) ;state.setOut ( inNodeState.getIn (  )  ) ;^369^370^371^372^373^348^383^[ADD] if  ( inNode == cfg.getImplicitReturn (  )  )  { state.setOut ( createEntryLattice (  )  ) ; } else { FlowState<L> inNodeState = inNode.getAnnotation (  ) ; state.setOut ( inNodeState.getIn (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> thisState = inNode.getValue (  ) ;^372^^^^^369^374^[REPLACE] FlowState<L> inNodeState = inNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^} else if  ( inNodes.size (  )  %  0.5  > 1 )  {^375^^^^^348^383^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^if  (  ( cfg.getEntry (  )  )  == node )  {     state.setIn ( createEntryLattice (  )  ) ; }else {     DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;     if  (  ( inNodes.size (  )  )  == 1 )  {         FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;         state.setIn ( inNodeState.getOut (  )  ) ;     }else         if  (  ( inNodes.size (  )  )  > 1 )  {             List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;             for  ( DiGraphNode<N, Branch> currentNode : inNodes )  {                 FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;                 values.add ( currentNodeState.getOut (  )  ) ;             }             state.setIn ( joinOp.apply ( values )  ) ;         }      }^375^^^^^348^383^[REMOVE] ^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( true.size (  )  ) ;^376^^^^^348^383^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> thisState = currentNode.getAnnotation (  ) ;^378^^^^^348^383^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedSuccNodes ( false ) ;^366^^^^^348^383^[REPLACE] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedSuccNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^DiGraphNode<N, Branch> inNode = inNodes.add ( 1 ) ;^368^^^^^348^383^[REPLACE] DiGraphNode<N, Branch> inNode = inNodes.get ( 0 ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.isEmpty (  )  ) ;^376^^^^^348^383^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^376^^^^^348^383^[ADD] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^377^378^379^380^^348^383^[ADD] for  ( DiGraphNode<N, Branch> currentNode : inNodes )  { FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getIn (  )  ) ; }^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = currentNode.getAnnotation (  ) ;^378^^^^^348^383^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^378^379^^^^348^383^[ADD] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getIn (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( cfg.getEntry (  )   !=  null )  {^349^^^^^346^384^[REPLACE] if  ( cfg.getEntry (  )  == node )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNodes.size (  )  /  2 == 1 )  {^353^^^^^349^364^[REPLACE] if  ( inNodes.size (  )  == 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;state.setIn ( inNodeState.getOut (  )  ) ;List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^353^354^355^356^357^349^364^[ADD] if  ( inNodes.size (  )  == 1 )  { FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ; state.setIn ( inNodeState.getOut (  )  ) ; } else if  ( inNodes.size (  )  > 1 )  { List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  if  ( inNodes.size (  )  - 1 > 1 )  {^356^^^^^349^364^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( true.size (  )  ) ;^357^^^^^349^364^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^358^^^^^349^364^[REPLACE] for  ( DiGraphNode<N, Branch> currentNode : inNodes )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^358^359^360^361^^349^364^[ADD] for  ( DiGraphNode<N, Branch> currentNode : inNodes )  { FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getOut (  )  ) ; }^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = currentNode.getAnnotation (  ) ;^359^^^^^349^364^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( this.isEmpty (  )  ) ;^357^^^^^349^364^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = currentNode.getValue (  ) ;^359^^^^^349^364^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNodes.get ( 0 / 1 ) .getAnnotation (  ) ;^354^^^^^349^364^[REPLACE] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  if  ( this.size (  )  *  0.5  > 1 )  {^356^^^^^349^364^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.isEmpty (  )  ) ;^357^^^^^349^364^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( 0 ) ;^352^^^^^349^364^[REPLACE] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = true.get ( 4 ) .getAnnotation (  ) ;^354^^^^^349^364^[REPLACE] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.size (  )  ) ;^357^^^^^349^364^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> falseState = currentNode.getAnnotation (  ) ;^359^^^^^349^364^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^359^360^^^^349^364^[ADD] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getOut (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.setOut ( createEntryLattice (  )  ) ;^350^^^^^346^384^[REPLACE] state.setIn ( createEntryLattice (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNodes.size (  )  - 3 == 1 )  {^353^^^^^346^384^[REPLACE] if  ( inNodes.size (  )  == 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  else {^356^^^^^346^384^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.size (  )  ) ;^357^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^357^^^^^346^384^[ADD] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^358^^^^^346^384^[REPLACE] for  ( DiGraphNode<N, Branch> currentNode : inNodes )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> currentNodeState = currentNode.getValue (  ) ;^359^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( true.size (  )  ) ;^357^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^358^359^360^361^^346^384^[ADD] for  ( DiGraphNode<N, Branch> currentNode : inNodes )  { FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getOut (  )  ) ; }^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> thisState = currentNode.getValue (  ) ;^359^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNodes.add ( 0L ) .getAnnotation (  ) ;^354^^^^^346^384^[REPLACE] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^354^355^^^^346^384^[ADD] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ; state.setIn ( inNodeState.getOut (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^}   List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^356^357^358^359^360^346^384^[ADD] else if  ( inNodes.size (  )  > 1 )  { List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ; for  ( DiGraphNode<N, Branch> currentNode : inNodes )  { FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getOut (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.isEmpty (  )  ) ;^357^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedSuccNodes ( node ) ;^352^^^^^346^384^[REPLACE] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^352^^^^^346^384^[ADD] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNodes .isEmpty (  )^354^^^^^346^384^[REPLACE] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = currentNode.getValue (  ) ;^359^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( cfg.getEntry (  )   ||  node )  {^349^^^^^346^384^[REPLACE] if  ( cfg.getEntry (  )  == node )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNodes.size (  )  + 4 == 1 )  {^353^^^^^349^364^[REPLACE] if  ( inNodes.size (  )  == 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^if  (  ( inNodes.size (  )  )  > 1 )  {     List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;     for  ( DiGraphNode<N, Branch> currentNode : inNodes )  {         FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;         values.add ( currentNodeState.getIn (  )  ) ;     }     state.setOut ( joinOp.apply ( values )  ) ; }^353^^^^^349^364^[REMOVE] ^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  else {^356^^^^^349^364^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^}   List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^356^357^358^359^360^349^364^[ADD] else if  ( inNodes.size (  )  > 1 )  { List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ; for  ( DiGraphNode<N, Branch> currentNode : inNodes )  { FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ; values.add ( currentNodeState.getOut (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> currentNodeState = currentNode.getValue (  ) ;^359^^^^^349^364^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNodes.get ( 4 ) .getAnnotation (  ) ;^354^^^^^349^364^[REPLACE] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  if  ( inNodes.size (  )  *  2 > 1 )  {^356^^^^^349^364^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( 0 .subList ( size , mid )   ) ;^357^^^^^349^364^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> currentNodeState = currentNode .setAnnotation ( 0 )  ;^359^^^^^349^364^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg .getDirectedGraphNodes (  )  ;^352^^^^^349^364^[REPLACE] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^352^^^^^349^364^[ADD] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNodes.get ( 0 * 2 ) .getAnnotation (  ) ;^354^^^^^349^364^[REPLACE] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( this .subList ( mid , step )   ) ;^357^^^^^349^364^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^350^^^^^346^384^[REMOVE] ^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNodes.length (  )  == 1 )  {^353^^^^^346^384^[REPLACE] if  ( inNodes.size (  )  == 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> falseState = currentNode.getValue (  ) ;^359^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> thisState = currentNode.getAnnotation (  ) ;^359^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> inNodeState = inNodes.get ( 4 ) .getAnnotation (  ) ;^354^^^^^346^384^[REPLACE] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^state.setIn ( inNodeState.getOut (  )  ) ;^354^355^^^^346^384^[ADD] FlowState<L> inNodeState = inNodes.get ( 0 ) .getAnnotation (  ) ; state.setIn ( inNodeState.getOut (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  if  ( inNodes.size (  )  - 5 > 0  )  {^356^^^^^346^384^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( this.size (  )  ) ;^357^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNodes.size (  )  + 3 == 0  )  {^367^^^^^346^384^[REPLACE] if  ( inNodes.size (  )  == 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  if  ( inNodes.length (  )  > 1 )  {^375^^^^^346^384^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.size (  )  ) ;^376^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^377^^^^^346^384^[REPLACE] for  ( DiGraphNode<N, Branch> currentNode : inNodes )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = currentNode.getAnnotation (  ) ;^378^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( this .subList ( step , maxSteps )   ) ;^376^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = currentNode.getValue (  ) ;^378^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( this  ||  cfg.getImplicitReturn (  )  )  {^369^^^^^346^384^[REPLACE] if  ( inNode == cfg.getImplicitReturn (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = inNode.getAnnotation (  ) ;^372^^^^^369^374^[REPLACE] FlowState<L> inNodeState = inNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.setIn ( createEntryLattice (  )  ) ;^370^^^^^346^384^[REPLACE] state.setOut ( createEntryLattice (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^DiGraphNode<N, Branch> inNode = null.get ( 1 ) ;^368^^^^^346^384^[REPLACE] DiGraphNode<N, Branch> inNode = inNodes.get ( 0 ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = inNode .setAnnotation ( null )  ;^372^^^^^346^384^[REPLACE] FlowState<L> inNodeState = inNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^372^373^^^^346^384^[ADD] FlowState<L> inNodeState = inNode.getAnnotation (  ) ; state.setOut ( inNodeState.getIn (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( inNode  &&  cfg.getImplicitReturn (  )  )  {^369^^^^^346^384^[REPLACE] if  ( inNode == cfg.getImplicitReturn (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^369^370^371^372^373^346^384^[ADD] if  ( inNode == cfg.getImplicitReturn (  )  )  { state.setOut ( createEntryLattice (  )  ) ; } else { FlowState<L> inNodeState = inNode.getAnnotation (  ) ; state.setOut ( inNodeState.getIn (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^370^^^^^346^384^[REMOVE] ^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  else {^375^^^^^346^384^[REPLACE] } else if  ( inNodes.size (  )  > 1 )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^376^^^^^346^384^[ADD] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> currentNodeState = currentNode.getValue (  ) ;^378^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( false ) ;^352^^^^^346^384^[REPLACE] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( false.size (  )  ) ;^357^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> 1State = currentNode.getAnnotation (  ) ;^359^^^^^346^384^[REPLACE] FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedSuccNodes ( null ) ;^366^^^^^346^384^[REPLACE] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedSuccNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^366^^^^^346^384^[ADD] List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedSuccNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^DiGraphNode<N, Branch> inNode = this.get ( 3 ) ;^368^^^^^346^384^[REPLACE] DiGraphNode<N, Branch> inNode = inNodes.get ( 0 ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> nullState = inNode.getAnnotation (  ) ;^372^^^^^346^384^[REPLACE] FlowState<L> inNodeState = inNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( this.isEmpty (  )  ) ;^376^^^^^346^384^[REPLACE] List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode currentNode  inNode  node  [TYPE]  FlowState currentNodeState  inNodeState  state  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return state.getIn (  ) ;^409^^^^^408^410^[REPLACE] return in;^[METHOD] getIn [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkNotNull ( inState ) ;^413^^^^^412^415^[REPLACE] Preconditions.checkNotNull ( in ) ;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.in = inState; ;^414^^^^^412^415^[REPLACE] this.in = in;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return state.getIn (  ) ;^418^^^^^417^419^[REPLACE] return out;^[METHOD] getOut [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkNotNull ( outBefore ) ;^422^^^^^421^424^[REPLACE] Preconditions.checkNotNull ( out ) ;^[METHOD] setOut [TYPE] void [PARAMETER] L out [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.out = outState; ;^423^^^^^421^424^[REPLACE] this.out = out;^[METHOD] setOut [TYPE] void [PARAMETER] L out [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return !outBefore.equals ( state.out ) ;^428^^^^^427^429^[REPLACE] return String.format ( "IN: %s OUT: %s", in, out ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return Objects .hashCode (  )  ;^433^^^^^432^434^[REPLACE] return Objects.hashCode ( in, out ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List inNodes  nextNodes  out  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  maxSteps  mid  midpoint  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.iterator (  ) ;^454^^^^^453^469^[REPLACE] orderedWorkSet.clear (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( node  ==  getCfg (  ) .getImplicitReturn (  )  )  {^465^^^^^453^469^[REPLACE] if  ( node != getCfg (  ) .getImplicitReturn (  )  )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^orderedWorkSet.add ( node ) ;^465^466^467^^^453^469^[ADD] if  ( node != getCfg (  ) .getImplicitReturn (  )  )  { orderedWorkSet.add ( node ) ; }^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.add ( null ) ;^466^^^^^453^469^[REPLACE] orderedWorkSet.add ( node ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^for  (sizent i = 0 ; i  ==  outEdgeCount; i++ )  {^460^^^^^453^469^[REPLACE] for  ( int i = 0; i < outEdgeCount; i++ )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^460^461^462^^^453^469^[ADD] for  ( int i = 0; i < outEdgeCount; i++ )  { outLattices.add ( createInitialEstimateLattice (  )  ) ; }^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^outLattices .iterator (  )  ;^461^^^^^453^469^[REPLACE] outLattices.add ( createInitialEstimateLattice (  )  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^cfg.getDirectedSuccNodes ( curNode )  : cfg.getDirectedPredNodes ( curNode ) ;^461^^^^^453^469^[REMOVE] ^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( inNodes.size (  )  ) ;^461^^^^^453^469^[REPLACE] outLattices.add ( createInitialEstimateLattice (  )  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^461^^^^^453^469^[ADD] outLattices.add ( createInitialEstimateLattice (  )  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^455^^^^^453^469^[REPLACE] for  ( DiGraphNode<N, Branch> node : getCfg (  ) .getDirectedGraphNodes (  )  )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphEdge<N, Branch>> edgeList = getCfg (  ) .getOutEdges ( 0 .getAnnotation (  )   ) ;^456^457^^^^453^469^[REPLACE] List<DiGraphEdge<N, Branch>> edgeList = getCfg (  ) .getOutEdges ( node.getValue (  )  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^int outEdgeCount = edgeList .subList ( i , maxSteps )  ;^458^^^^^453^469^[REPLACE] int outEdgeCount = edgeList.size (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^FlowState<L> currentNodeState = currentNode.getAnnotation (  ) ;^459^^^^^453^469^[REPLACE] List<L> outLattices = Lists.newArrayList (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^459^^^^^453^469^[ADD] List<L> outLattices = Lists.newArrayList (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^for  ( int i = 1; i < outEdgeCount; i++ )  {^460^^^^^453^469^[REPLACE] for  ( int i = 0; i < outEdgeCount; i++ )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^DiGraphNode<N, Branch> node = getCfg (  ) .getOptionalNodeComparator (  ) ;^482^^^^^481^485^[REPLACE] DiGraphNode<N, Branch> node = getCfg (  ) .getImplicitReturn (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^BranchedFlowState<L> state = true.getAnnotation (  ) ;^483^^^^^481^485^[REPLACE] BranchedFlowState<L> state = node.getAnnotation (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return 1.getIn (  ) ;^484^^^^^481^485^[REPLACE] return state.getIn (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return false;^489^^^^^488^490^[REPLACE] return true;^[METHOD] isForward [TYPE] boolean [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^BranchedFlowState<L> state = this.getAnnotation (  ) ;^507^^^^^506^517^[REPLACE] BranchedFlowState<L> state = node.getAnnotation (  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> outBefore = true.out;^508^^^^^506^517^[REPLACE] List<L> outBefore = state.out;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.out = flowThrough ( node.getValue (  ) , state.in ) ; ;^509^^^^^506^517^[REPLACE] state.out = branchedFlowThrough ( node.getValue (  ) , state.in ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkState ( outBefore.size (  )  %  0.5  == null.out.size (  )  %  0.5  ) ;^510^^^^^506^517^[REPLACE] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^510^511^512^513^514^506^517^[ADD] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ; for  ( int i = 0; i < outBefore.size (  ) ; i++ )  { if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  { return true; }^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkState ( null.size (  )  == state.out.size (  )  ) ;^510^^^^^506^517^[REPLACE] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkState ( outBefore.size (  )  == this.out.size (  )  ) ;^510^^^^^506^517^[REPLACE] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( !outBefore.add ( size ) .equals ( state.out.get ( i )  )  )  {^512^^^^^506^517^[REPLACE] if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return false;^513^^^^^506^517^[REPLACE] return true;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^for  ( int i = 0 ; i < outBefore.size (  )  /  2; i++ )  {^511^^^^^506^517^[REPLACE] for  ( int i = 0; i < outBefore.size (  ) ; i++ )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^511^512^513^514^^506^517^[ADD] for  ( int i = 0; i < outBefore.size (  ) ; i++ )  { if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  { return true; }^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( !outBefore.get ( i ) .equals ( null.out.get ( i )  )  )  {^512^^^^^506^517^[REPLACE] if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^512^513^514^^^506^517^[ADD] if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  { return true; }^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^for  ( int i = 0 ; i < outBefore.size (  ) ; i++ )  {^511^^^^^506^517^[REPLACE] for  ( int i = 0; i < outBefore.size (  ) ; i++ )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return true;^516^^^^^506^517^[REPLACE] return false;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^BranchedFlowState<L> state = false.getAnnotation (  ) ;^521^^^^^520^539^[REPLACE] BranchedFlowState<L> state = node.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^521^^^^^520^539^[ADD] BranchedFlowState<L> state = node.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedPredNodes ( null ) ;^522^523^^^^520^539^[REPLACE] List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^522^523^^^^520^539^[ADD] List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<L> values = new ArrayList<L> ( null.size (  )  ) ;^524^^^^^520^539^[REPLACE] List<L> values = new ArrayList<L> ( predNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^List<DiGraphNode<N, Branch>> inNodes = cfg.getDirectedPredNodes ( node ) ;^526^^^^^520^539^[REPLACE] for  ( DiGraphNode<N, Branch> predNode : predNodes )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^BranchedFlowState<L> nullState = predNode.getAnnotation (  ) ;^527^^^^^520^539^[REPLACE] BranchedFlowState<L> predNodeState = predNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^L in = predNodeState.out.get ( getCfg (  ) .getDirectedSuccNodes ( predNode )  .next (  )   ) ;^529^530^^^^520^539^[REPLACE] L in = predNodeState.out.get ( getCfg (  ) .getDirectedSuccNodes ( predNode ) .indexOf ( node )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( getCfg (  ) .getEntry (  )   ||  node )  {^534^^^^^520^539^[REPLACE] if  ( getCfg (  ) .getEntry (  )  == node )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  else {^536^^^^^520^539^[REPLACE] } else if  ( !values.isEmpty (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state .getIn (  )  ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.setIn ( joinOp.apply ( null )  ) ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.setOut ( createEntryLattice (  )  ) ;^535^^^^^520^539^[REPLACE] state.setIn ( createEntryLattice (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^}  if  ( !values .get ( mid )   )  {^536^^^^^520^539^[REPLACE] } else if  ( !values.isEmpty (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.setOut ( joinOp.apply ( values )  ) ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^state.setIn ( joinOp.apply ( true )  ) ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return state.getIn (  ) ;^566^^^^^565^567^[REPLACE] return in;^[METHOD] getIn [TYPE] L [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkNotNull ( latticeB ) ;^570^^^^^569^572^[REPLACE] Preconditions.checkNotNull ( in ) ;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REMOVE]^Var var = i.next (  ) ;^570^^^^^569^572^[REMOVE] ^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.in = inState; ;^571^^^^^569^572^[REPLACE] this.in = in;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return state.getIn (  ) ;^575^^^^^574^576^[REPLACE] return out;^[METHOD] getOut [TYPE] List [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Preconditions.checkNotNull ( false ) ;^579^^^^^578^581^[REPLACE] Preconditions.checkContentsNotNull ( out ) ;^[METHOD] setOut [TYPE] void [PARAMETER] List<L> out [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^this.out = outState; ;^580^^^^^578^581^[REPLACE] this.out = out;^[METHOD] setOut [TYPE] void [PARAMETER] List<L> out [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^580^^^^^578^581^[ADD] this.out = out;^[METHOD] setOut [TYPE] void [PARAMETER] List<L> out [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return !outBefore.equals ( state.out ) ;^585^^^^^584^586^[REPLACE] return String.format ( "IN: %s OUT: %s", in, out ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return !outBefore.equals ( state.out ) ;^590^^^^^589^591^[REPLACE] return Objects.hashCode ( in, out ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( jsScope == t.getScope (  )  || NodeUtil.isName ( n ) || NodeUtil.isFunction ( parent )  )  {^613^614^^^^608^637^[REPLACE] if  ( jsScope == t.getScope (  )  || !NodeUtil.isName ( n ) || NodeUtil.isFunction ( parent )  )  {^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^return midpoint;^615^^^^^613^616^[REPLACE] return;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( var != null && var.scope != jsScope )  {^619^^^^^608^637^[REPLACE] if  ( var != null && var.scope == jsScope )  {^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^escaped .iterator (  )  ;^620^^^^^608^637^[REPLACE] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^escaped.add ( js  name    ) ;^620^^^^^608^637^[REPLACE] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[ADD]^^620^^^^^608^637^[ADD] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^return midpoint;^615^^^^^608^637^[REPLACE] return;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^AbstractPostOrderCallback finder = new AbstractPostOrderCallback (  )  { @Override^610^^^^^608^637^[REPLACE] AbstractPostOrderCallback finder = new AbstractPostOrderCallback (  )  {^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^String parentame = n.getString (  ) ;^617^^^^^608^637^[REPLACE] String name = n.getString (  ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[ADD]^^617^618^^^^608^637^[ADD] String name = n.getString (  ) ; Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^Var var = t.getScope (  ) .indexOf ( name ) ;^618^^^^^608^637^[REPLACE] Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^Var var = t.getScope (  ) .getVar ( name ) ;^625^^^^^608^637^[REPLACE] NodeTraversal t = new NodeTraversal ( compiler, finder ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.add ( node ) ;^626^^^^^608^637^[REPLACE] t.traverseAtScope ( jsScope ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( var.getParentNode (  ) .getType (  )  == Token.CATCH ) {^632^633^^^^608^637^[REPLACE] if  ( var.getParentNode (  ) .getType (  )  == Token.CATCH || compiler.getCodingConvention (  ) .isExported ( var.getName (  )  )  )  {^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.add ( node ) ;^634^^^^^632^635^[REPLACE] escaped.add ( var ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^for  ( int i = 0; i < outBefore.size (  ) ; i++ )  {^630^^^^^608^637^[REPLACE] for  ( Iterator<Var> i = jsScope.getVars (  ) ; i.hasNext (  ) ; )  {^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[ADD]^^630^631^632^633^634^608^637^[ADD] for  ( Iterator<Var> i = jsScope.getVars (  ) ; i.hasNext (  ) ; )  { Var var = i.next (  ) ; if  ( var.getParentNode (  ) .getType (  )  == Token.CATCH || compiler.getCodingConvention (  ) .isExported ( var.getName (  )  )  )  { escaped.add ( var ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^escaped .iterator (  )  ;^634^^^^^632^635^[REPLACE] escaped.add ( var ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^Var var = this.next (  ) ;^631^^^^^608^637^[REPLACE] Var var = i.next (  ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^for  ( Iterator<Var> i = jsScope .getVar ( name )  ; i.hasNext (  ) ; )  {^630^^^^^608^637^[REPLACE] for  ( Iterator<Var> i = jsScope.getVars (  ) ; i.hasNext (  ) ; )  {^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^Var var = this.hasNext (  ) ;^631^^^^^608^637^[REPLACE] Var var = i.next (  ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[ADD]^^631^^^^^608^637^[ADD] Var var = i.next (  ) ;^[METHOD] computeEscaped [TYPE] void [PARAMETER] Scope jsScope Var> escaped AbstractCompiler compiler [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  AbstractPostOrderCallback finder  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Scope jsScope  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Iterator i  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( jsScope == t.getScope (  )  || NodeUtil.isName ( parent ) || NodeUtil.isFunction ( parent )  )  {^613^614^^^^612^622^[REPLACE] if  ( jsScope == t.getScope (  )  || !NodeUtil.isName ( n ) || NodeUtil.isFunction ( parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return midpoint;^615^^^^^612^622^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^String parentame = n.getString (  ) ;^617^^^^^612^622^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^Var var = t.getScope (  )  .getType (  )  ;^618^^^^^612^622^[REPLACE] Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^^618^^^^^612^622^[ADD] Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^if  ( var != null && var.scope != jsScope )  {^619^^^^^612^622^[REPLACE] if  ( var != null && var.scope == jsScope )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[ADD]^escaped.add ( jsScope.getVar ( name )  ) ;^619^620^621^^^612^622^[ADD] if  ( var != null && var.scope == jsScope )  { escaped.add ( jsScope.getVar ( name )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^escaped.add ( js  name    ) ;^620^^^^^612^622^[REPLACE] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^escaped.add ( false.getVar ( name )  ) ;^620^^^^^612^622^[REPLACE] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] DataFlowAnalysis BinaryJoinOp FlowState MaxIterationsExceededException BranchedForwardDataFlowAnalysis BranchedFlowState 1   [TYPE]  Set escaped  orderedWorkSet  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  ControlFlowGraph cfg  targetCfg  [TYPE]  Node n  parent  [TYPE]  List edgeList  inNodes  nextNodes  out  outBefore  outLattices  outState  predNodes  values  [TYPE]  String name  [TYPE]  L in  inBefore  inState  input  latticeA  latticeB  out  outBefore  outState  [TYPE]  int MAX_STEPS  i  maxSteps  mid  midpoint  outEdgeCount  size  step  [TYPE]  long serialVersionUID  [TYPE]  JoinOp joinOp 
[REPLACE]^return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^108^^^^^107^120^[REPLACE] Preconditions.checkArgument ( !values.isEmpty (  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^Preconditions.checkArgument ( !values .get ( size )   ) ;^108^^^^^107^120^[REPLACE] Preconditions.checkArgument ( !values.isEmpty (  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^int size = false.size (  ) ;^109^^^^^107^120^[REPLACE] int size = values.size (  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^if (size  !=  1) {^110^^^^^107^120^[REPLACE] if  ( size == 1 )  {^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[ADD]^return values.get ( 0 ) ;return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^110^111^112^113^^107^120^[ADD] if  ( size == 1 )  { return values.get ( 0 ) ; } else if  ( size == 2 )  { return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^}  else {^112^^^^^107^120^[REPLACE] } else if  ( size == 2 )  {^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^return apply ( apply ( null.subList ( 0 , mid )  ) , apply ( values.subList ( mid, size )  )  ) ;^116^117^118^^^107^120^[REPLACE] return apply ( apply ( values.subList ( 0, mid )  ) , apply ( values.subList ( mid, size )  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^int mid = computeMidPoint ( mid ) ;^115^^^^^107^120^[REPLACE] int mid = computeMidPoint ( size ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[ADD]^^115^^^^^107^120^[ADD] int mid = computeMidPoint ( size ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^return apply ( values .isEmpty (  )  , values^113^^^^^107^120^[REPLACE] return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^return apply ( apply ( values.subList ( 0 , mid )  ) , apply ( values.subList ( mid, size )  )  ) ;^116^117^118^^^107^120^[REPLACE] return apply ( apply ( values.subList ( 0, mid )  ) , apply ( values.subList ( mid, size )  )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^return values.get ( 0L ) ;^111^^^^^107^120^[REPLACE] return values.get ( 0 ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^}  if (size  ||  2) {^112^^^^^107^120^[REPLACE] } else if  ( size == 2 )  {^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[ADD]^}   return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;int mid = computeMidPoint ( size ) ;^112^113^114^115^116^107^120^[ADD] else if  ( size == 2 )  { return apply ( values.get ( 0 ) , values.get ( 1 )  ) ; } else { int mid = computeMidPoint ( size ) ; return apply (^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^return apply ( null.get ( 2 ) , values.get ( 1 )  ) ;^113^^^^^107^120^[REPLACE] return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^return values.get ( 3 ) ;^111^^^^^107^120^[REPLACE] return values.get ( 0 ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^return apply ( values.get ( 0 >> 0 ) , values.get ( 1 )  ) ;^113^^^^^107^120^[REPLACE] return apply ( values.get ( 0 ) , values.get ( 1 )  ) ;^[METHOD] apply [TYPE] L [PARAMETER] List<L> values [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  List values  [TYPE]  int mid  size 
[REPLACE]^int midpoint = midpoint  !=  1;^137^^^^^136^144^[REPLACE] int midpoint = size >>> 1;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  int midpoint  size 
[REPLACE]^if (size  >= midpoint) {^138^^^^^136^144^[REPLACE] if  ( size > 4 )  {^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  int midpoint  size 
[REPLACE]^midpoint &= -4;^141^^^^^136^144^[REPLACE] midpoint &= -2;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  int midpoint  size 
[REPLACE]^midpoint &= -2L;^141^^^^^136^144^[REPLACE] midpoint &= -2;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  int midpoint  size 
[REPLACE]^return size;^143^^^^^136^144^[REPLACE] return midpoint;^[METHOD] computeMidPoint [TYPE] int [PARAMETER] int size [CLASS] BinaryJoinOp   [TYPE]  boolean false  true  [TYPE]  int midpoint  size 
[REPLACE]^Preconditions.checkNotNull ( outState ) ;^402^^^^^401^406^[REPLACE] Preconditions.checkNotNull ( inState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[ADD]^^402^403^^^^401^406^[ADD] Preconditions.checkNotNull ( inState ) ; Preconditions.checkNotNull ( outState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^out   ;^403^^^^^401^406^[REPLACE] Preconditions.checkNotNull ( outState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[ADD]^this.in = inState;^403^404^^^^401^406^[ADD] Preconditions.checkNotNull ( outState ) ; this.in = inState;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.in = in; ;^404^^^^^401^406^[REPLACE] this.in = inState;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.out = out; ;^405^^^^^401^406^[REPLACE] this.out = outState;^[METHOD] <init> [TYPE] DataFlowAnalysis$FlowState(L [PARAMETER] L inState L outState [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^return out;^409^^^^^408^410^[REPLACE] return in;^[METHOD] getIn [TYPE] L [PARAMETER] [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkNotNull ( inState ) ;^413^^^^^412^415^[REPLACE] Preconditions.checkNotNull ( in ) ;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.in = inState; ;^414^^^^^412^415^[REPLACE] this.in = in;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^return in;^418^^^^^417^419^[REPLACE] return out;^[METHOD] getOut [TYPE] L [PARAMETER] [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkNotNull ( outState ) ;^422^^^^^421^424^[REPLACE] Preconditions.checkNotNull ( out ) ;^[METHOD] setOut [TYPE] void [PARAMETER] L out [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.out = outState; ;^423^^^^^421^424^[REPLACE] this.out = out;^[METHOD] setOut [TYPE] void [PARAMETER] L out [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^return Objects.hashCode ( in, out ) ;^428^^^^^427^429^[REPLACE] return String.format ( "IN: %s OUT: %s", in, out ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^return String.format ( "IN: %s OUT: %s", in, out ) ;^433^^^^^432^434^[REPLACE] return Objects.hashCode ( in, out ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] FlowState   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^private static  long serialVersionUID = 1L;^443^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] MaxIterationsExceededException   [TYPE]  L in  inState  out  outState  [TYPE]  boolean false  true 
[REPLACE]^super ( this, joinOp ) ;^473^^^^^471^474^[REPLACE] super ( targetCfg, joinOp ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$JoinOp) [PARAMETER] ControlFlowGraph<N> targetCfg JoinOp<L> joinOp [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  boolean false  true  [TYPE]  ControlFlowGraph targetCfg  [TYPE]  JoinOp joinOp 
[REPLACE]^orderedWorkSet.add ( node ) ;^454^^^^^453^469^[REPLACE] orderedWorkSet.clear (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^if  ( node  ==  getCfg (  ) .getDirectedPredNodes (  )  )  {^465^^^^^453^469^[REPLACE] if  ( node != getCfg (  ) .getImplicitReturn (  )  )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^orderedWorkSet.add ( true ) ;^466^^^^^453^469^[REPLACE] orderedWorkSet.add ( node ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^for  ( int i = 0; i  >=  outEdgeCount; i++ )  {^460^^^^^453^469^[REPLACE] for  ( int i = 0; i < outEdgeCount; i++ )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ;^461^^^^^453^469^[REPLACE] outLattices.add ( createInitialEstimateLattice (  )  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedPredNodes ( node ) ;^455^^^^^453^469^[REPLACE] for  ( DiGraphNode<N, Branch> node : getCfg (  ) .getDirectedGraphNodes (  )  )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[ADD]^^455^456^457^458^459^453^469^[ADD] for  ( DiGraphNode<N, Branch> node : getCfg (  ) .getDirectedGraphNodes (  )  )  { List<DiGraphEdge<N, Branch>> edgeList = getCfg (  ) .getOutEdges ( node.getValue (  )  ) ; int outEdgeCount = edgeList.size (  ) ; List<L> outLattices = Lists.newArrayList (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^List<DiGraphEdge<N, Branch>> edgeList = getCfg (  ) .getOutEdges ( 0.getValue (  )  ) ;^456^457^^^^453^469^[REPLACE] List<DiGraphEdge<N, Branch>> edgeList = getCfg (  ) .getOutEdges ( node.getValue (  )  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[ADD]^^456^457^^^^453^469^[ADD] List<DiGraphEdge<N, Branch>> edgeList = getCfg (  ) .getOutEdges ( node.getValue (  )  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^int outEdgeCount = 0.isEmpty (  ) ;^458^^^^^453^469^[REPLACE] int outEdgeCount = edgeList.size (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^List<L> values = new ArrayList<L> ( predNodes.size (  )  ) ;^459^^^^^453^469^[REPLACE] List<L> outLattices = Lists.newArrayList (  ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^for  ( int i = 4; i < outEdgeCount; i++ )  {^460^^^^^453^469^[REPLACE] for  ( int i = 0; i < outEdgeCount; i++ )  {^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[ADD]^^460^461^462^^^453^469^[ADD] for  ( int i = 0; i < outEdgeCount; i++ )  { outLattices.add ( createInitialEstimateLattice (  )  ) ; }^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List edgeList  outLattices  [TYPE]  int i  outEdgeCount 
[REPLACE]^DiGraphNode<N, Branch> node = getCfg (  ) .getDirectedPredNodes (  ) ;^482^^^^^481^485^[REPLACE] DiGraphNode<N, Branch> node = getCfg (  ) .getImplicitReturn (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true 
[REPLACE]^BranchedFlowState<L> state = null.getValue (  ) ;^483^^^^^481^485^[REPLACE] BranchedFlowState<L> state = node.getAnnotation (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true 
[REPLACE]^return this.getIn (  ) ;^484^^^^^481^485^[REPLACE] return state.getIn (  ) ;^[METHOD] getExitLatticeElement [TYPE] L [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true 
[REPLACE]^return false;^489^^^^^488^490^[REPLACE] return true;^[METHOD] isForward [TYPE] boolean [PARAMETER] [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  boolean false  true 
[REPLACE]^BranchedFlowState<L> state = null.getAnnotation (  ) ;^507^^^^^506^517^[REPLACE] BranchedFlowState<L> state = node.getAnnotation (  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^List<L> outBefore = false.out;^508^^^^^506^517^[REPLACE] List<L> outBefore = state.out;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[ADD]^^508^509^510^511^^506^517^[ADD] List<L> outBefore = state.out; state.out = branchedFlowThrough ( node.getValue (  ) , state.in ) ; Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ; for  ( int i = 0; i < outBefore.size (  ) ; i++ )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^state.out =  branchedFlowThrough ( node.getValue (  ) , null.in ) ;^509^^^^^506^517^[REPLACE] state.out = branchedFlowThrough ( node.getValue (  ) , state.in ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^Preconditions.checkState ( outBefore.length (  )  == state.out.length (  )  ) ;^510^^^^^506^517^[REPLACE] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^Preconditions.checkState ( null.size (  )  == state.out.size (  )  ) ;^510^^^^^506^517^[REPLACE] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[ADD]^^510^511^512^513^514^506^517^[ADD] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ; for  ( int i = 0; i < outBefore.size (  ) ; i++ )  { if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  { return true; }^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^Preconditions.checkState ( outBefore.size (  )  == null.out.size (  )  ) ;^510^^^^^506^517^[REPLACE] Preconditions.checkState ( outBefore.size (  )  == state.out.size (  )  ) ;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^if  ( !outBefore .isEmpty (  )  .equals ( state.out^512^^^^^506^517^[REPLACE] if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^return false;^513^^^^^506^517^[REPLACE] return true;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < outBefore.size (  )  *  2; i++ )  {^511^^^^^506^517^[REPLACE] for  ( int i = 0; i < outBefore.size (  ) ; i++ )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^if  ( !outBefore.add ( i ) .equals ( state.out.get ( i )  )  )  {^512^^^^^506^517^[REPLACE] if  ( !outBefore.get ( i ) .equals ( state.out.get ( i )  )  )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < outBefore.size (  ) ; i++ )  {^511^^^^^506^517^[REPLACE] for  ( int i = 0; i < outBefore.size (  ) ; i++ )  {^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^return true;^516^^^^^506^517^[REPLACE] return false;^[METHOD] flow [TYPE] boolean [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState state  [TYPE]  DiGraphNode node  [TYPE]  boolean false  true  [TYPE]  List outBefore  [TYPE]  int i 
[REPLACE]^BranchedFlowState<L> state = true.getAnnotation (  ) ;^521^^^^^520^539^[REPLACE] BranchedFlowState<L> state = node.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedSuccNodes ( node ) ;^522^523^^^^520^539^[REPLACE] List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[ADD]^^522^523^^^^520^539^[ADD] List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedPredNodes ( node ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^List<L> values = new ArrayList<L> ( null.size (  )  ) ;^524^^^^^520^539^[REPLACE] List<L> values = new ArrayList<L> ( predNodes.size (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^List<DiGraphNode<N, Branch>> predNodes = getCfg (  ) .getDirectedPredNodes ( node ) ;^526^^^^^520^539^[REPLACE] for  ( DiGraphNode<N, Branch> predNode : predNodes )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^BranchedFlowState<L> nullState = predNode.getAnnotation (  ) ;^527^^^^^520^539^[REPLACE] BranchedFlowState<L> predNodeState = predNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[ADD]^^527^^^^^520^539^[ADD] BranchedFlowState<L> predNodeState = predNode.getAnnotation (  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^L in = null.out.get ( getCfg (  ) .getDirectedSuccNodes ( predNode ) .indexOf ( node )  ) ;^529^530^^^^520^539^[REPLACE] L in = predNodeState.out.get ( getCfg (  ) .getDirectedSuccNodes ( predNode ) .indexOf ( node )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^if  ( getCfg (  ) .getEntry (  )   !=  node )  {^534^^^^^520^539^[REPLACE] if  ( getCfg (  ) .getEntry (  )  == node )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^}  if  ( !values.get (  )  )  {^536^^^^^520^539^[REPLACE] } else if  ( !values.isEmpty (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^state.setIn ( joinOp.apply ( this )  ) ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^state.setIn ( joinOp.apply ( true )  ) ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[ADD]^^537^^^^^520^539^[ADD] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^state .getIn (  )  ;^535^^^^^520^539^[REPLACE] state.setIn ( createEntryLattice (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^List<L> values = new ArrayList<L> ( predNodes.size (  )  ) ;^535^^^^^520^539^[REPLACE] state.setIn ( createEntryLattice (  )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^}  else {^536^^^^^520^539^[REPLACE] } else if  ( !values.isEmpty (  )  )  {^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REMOVE]^if  (  ( getCfg (  ) .getEntry (  )  )  == node )  {     state.setIn ( createEntryLattice (  )  ) ; }else     if  ( ! ( values.isEmpty (  )  )  )  {         state.setIn ( joinOp.apply ( values )  ) ;     }^536^^^^^520^539^[REMOVE] ^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^state.setIn ( joinOp.apply ( false )  ) ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^state.setIn ( joinOp.apply ( null )  ) ;^537^^^^^520^539^[REPLACE] state.setIn ( joinOp.apply ( values )  ) ;^[METHOD] joinInputs [TYPE] void [PARAMETER] Branch> node [CLASS] BranchedForwardDataFlowAnalysis   [TYPE]  BranchedFlowState predNodeState  state  [TYPE]  DiGraphNode node  predNode  [TYPE]  boolean false  true  [TYPE]  List predNodes  values  [TYPE]  L in 
[REPLACE]^Preconditions .checkContentsNotNull ( this )  ;^559^^^^^558^563^[REPLACE] Preconditions.checkNotNull ( inState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkNotNull ( this ) ;^560^^^^^558^563^[REPLACE] Preconditions.checkNotNull ( outState ) ;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.in = in; ;^561^^^^^558^563^[REPLACE] this.in = inState;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.out = out; ;^562^^^^^558^563^[REPLACE] this.out = outState;^[METHOD] <init> [TYPE] DataFlowAnalysis$BranchedFlowState(L [PARAMETER] L inState List<L> outState [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^return out;^566^^^^^565^567^[REPLACE] return in;^[METHOD] getIn [TYPE] L [PARAMETER] [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkNotNull ( inState ) ;^570^^^^^569^572^[REPLACE] Preconditions.checkNotNull ( in ) ;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.in = inState; ;^571^^^^^569^572^[REPLACE] this.in = in;^[METHOD] setIn [TYPE] void [PARAMETER] L in [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^return in;^575^^^^^574^576^[REPLACE] return out;^[METHOD] getOut [TYPE] List [PARAMETER] [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^Preconditions.checkContentsNotNull ( null ) ;^579^^^^^578^581^[REPLACE] Preconditions.checkContentsNotNull ( out ) ;^[METHOD] setOut [TYPE] void [PARAMETER] List<L> out [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^this.out = outState; ;^580^^^^^578^581^[REPLACE] this.out = out;^[METHOD] setOut [TYPE] void [PARAMETER] List<L> out [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^return Objects.hashCode ( in, out ) ;^585^^^^^584^586^[REPLACE] return String.format ( "IN: %s OUT: %s", in, out ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^return String.format ( "IN: %s OUT: %s", in, out ) ;^590^^^^^589^591^[REPLACE] return Objects.hashCode ( in, out ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BranchedFlowState   [TYPE]  L in  inState  [TYPE]  List out  outState  [TYPE]  boolean false  true 
[REPLACE]^if  ( jsScope == t.getScope (  )  || NodeUtil.isName ( n ) || NodeUtil.isFunction ( parent )  )  {^613^614^^^^612^622^[REPLACE] if  ( jsScope == t.getScope (  )  || !NodeUtil.isName ( n ) || NodeUtil.isFunction ( parent )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
[REPLACE]^String parentame = n.getString (  ) ;^617^^^^^612^622^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
[REPLACE]^String name = n.getString (  ) ;^618^^^^^612^622^[REPLACE] Var var = t.getScope (  ) .getVar ( name ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
[REPLACE]^if  ( var != null ) {^619^^^^^612^622^[REPLACE] if  ( var != null && var.scope == jsScope )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
[ADD]^escaped.add ( jsScope.getVar ( name )  ) ;^619^620^621^^^612^622^[ADD] if  ( var != null && var.scope == jsScope )  { escaped.add ( jsScope.getVar ( name )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
[REPLACE]^escaped.add ( null.getVar ( name )  ) ;^620^^^^^612^622^[REPLACE] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
[REPLACE]^escaped.add ( 1.getVar ( name )  ) ;^620^^^^^612^622^[REPLACE] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
[ADD]^^620^^^^^612^622^[ADD] escaped.add ( jsScope.getVar ( name )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  String name 
