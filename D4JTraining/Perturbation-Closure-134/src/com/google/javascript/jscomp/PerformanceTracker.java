[REPLACE]^private  Node jsRoot;^36^^^^^^^[REPLACE] private final Node jsRoot;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private  boolean trackGzippedSize;^37^^^^^^^[REPLACE] private final boolean trackGzippedSize;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final new CodeGenerator ( cp )  ;^41^^^^^^^[REPLACE] private final RecentChange codeChange = new RecentChange (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private int curCodeSizeEstimate  = null ;^43^^^^^^^[REPLACE] private int curCodeSizeEstimate = -1;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private int curZippedCodeSizeEstimate  = null ;^44^^^^^^^[REPLACE] private int curZippedCodeSizeEstimate = -1;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private Deque<String> currentRunningPass  = null ;^46^^^^^^^[REPLACE] private Deque<String> currentRunningPass = new ArrayDeque<String> (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final Map<String, Long> runtimeRecord  = null ;^49^^^^^^^[REPLACE] private final Map<String, Long> runtimeRecord = Maps.newHashMap (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final Map<String, Integer> codeSizeRecord ;^52^^^^^^^[REPLACE] private final Map<String, Integer> codeSizeRecord = Maps.newHashMap (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private  Map<String, Integer> zippedCodeSizeRecord = Maps.newHashMap (  ) ;^55^^^^^^^[REPLACE] private final Map<String, Integer> zippedCodeSizeRecord = Maps.newHashMap (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private  boolean trackGzippedSize;^144^^^^^^^[REPLACE] private final boolean trackGzippedSize;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private  short  size = 0;^145^^^^^^^[REPLACE] private int size = 0;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private char lastChar ;^146^^^^^^^[REPLACE] private char lastChar = '\0';^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final ByteArrayOutputStream output  = null ;^147^^^^^^^[REPLACE] private final ByteArrayOutputStream output = new ByteArrayOutputStream (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[ADD]^^78^^^^^77^96^[ADD] String currentPassName = currentRunningPass.pop (  ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^if  ( passName.equals ( currentPassName )  )  {^79^^^^^77^96^[REPLACE] if  ( !passName.equals ( currentPassName )  )  {^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^return ;^80^^^^^77^96^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^throw new RuntimeException ( e )  ;^80^^^^^77^96^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^Long total = runtimeRecord.get ( currentPassName ) ;^82^^^^^77^96^[REPLACE] Long total = runtimeRecord.get ( passName ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^if  ( total != this )  {^83^^^^^77^96^[REPLACE] if  ( total == null )  {^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[ADD]^total = 0L;^83^84^85^^^77^96^[ADD] if  ( total == null )  { total = 0L; }^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^total = 0;^84^^^^^77^96^[REPLACE] total = 0L;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^total = total.longValue (  )   result;^86^^^^^77^96^[REPLACE] total = total.longValue (  )  + result;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^runtimeRecord .get ( null )  ;^87^^^^^77^96^[REPLACE] runtimeRecord.put ( passName, total ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^if   (  !passName.equals  (  currentPassName  )    )   {  ;^89^^^^^77^96^[REPLACE] if  ( codeChange.hasCodeChanged (  )  )  {^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^curCodeSizeEstimate =  recordSizeChange ( curCodeSizeEstimate, null.calcSize (  ) , passName, codeSizeRecord ) ;^91^92^^^^77^96^[REPLACE] curCodeSizeEstimate = recordSizeChange ( curCodeSizeEstimate, printer.calcSize (  ) , passName, codeSizeRecord ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^curZippedCodeSizeEstimate =  recordSizeChange ( curZippedCodeSizeEstimate, null.calcZippedSize (  ) , passName, zippedCodeSizeRecord ) ;^93^94^^^^77^96^[REPLACE] curZippedCodeSizeEstimate = recordSizeChange ( curZippedCodeSizeEstimate, printer.calcZippedSize (  ) , passName, zippedCodeSizeRecord ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^String currentPassName = currentRunningPass.pop (  )  ;^90^^^^^77^96^[REPLACE] CodeSizeEstimatePrinter printer = estimateCodeSize ( jsRoot ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^private  boolean trackGzippedSize;^144^^^^^^^[REPLACE] private final boolean trackGzippedSize;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private int size ;^145^^^^^^^[REPLACE] private int size = 0;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private char lastChar ;^146^^^^^^^[REPLACE] private char lastChar = '\0';^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private final ByteArrayOutputStream output ;^147^^^^^^^[REPLACE] private final ByteArrayOutputStream output = new ByteArrayOutputStream (  ) ;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private  GZIPOutputStream stream;^148^^^^^^^[REPLACE] private final GZIPOutputStream stream;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
