[REPLACE]^protected  final int SETMASK =  ( 1 << 21 ) ;^31^^^^^^^[REPLACE] protected static final int SETMASK =  ( 1 << 21 ) ;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int CLEARMASK  = null ;^32^^^^^^^[REPLACE] protected static final int CLEARMASK =  ( ~SETMASK ) ;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int GREATER_ICOST ;^33^^^^^^^[REPLACE] protected static final int GREATER_ICOST = 15;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int LESSER_ICOST  = null ;^34^^^^^^^[REPLACE] protected static final int LESSER_ICOST = 0;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final  short  SMALL_THRESH = 20;^35^^^^^^^[REPLACE] protected static final int SMALL_THRESH = 20;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private static final int DEPTH_THRESH = 10;^36^^^^^^^[REPLACE] protected static final int DEPTH_THRESH = 10;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int QSORT_STACK_SIZE  = null ;^46^^^^^^^[REPLACE] protected static final int QSORT_STACK_SIZE = 1000;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  long  last;^216^^^^^^^[REPLACE] private int last;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  long  bytesOut;^231^^^^^^^[REPLACE] private int bytesOut;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  CRC mCrc = new CRC (  ) ;^234^^^^^^^[REPLACE] private final CRC mCrc = new CRC (  ) ;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private boolean[] inUse = new boolean[158];^236^^^^^^^[REPLACE] private boolean[] inUse = new boolean[256];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] seqToUnseq  = null ;^239^^^^^^^[REPLACE] private char[] seqToUnseq = new char[256];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] unseqToSeq ;^240^^^^^^^[REPLACE] private char[] unseqToSeq = new char[256];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] selector ;^242^^^^^^^[REPLACE] private char[] selector = new char[MAX_SELECTORS];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] selectorMtf  = null ;^243^^^^^^^[REPLACE] private char[] selectorMtf = new char[MAX_SELECTORS];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  short  nMTF;^251^^^^^^^[REPLACE] private int nMTF;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private int[] mtfFreq  = null ;^253^^^^^^^[REPLACE] private int[] mtfFreq = new int[MAX_ALPHA_SIZE];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  short  workFactor;^260^^^^^^^[REPLACE] private int workFactor;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  long  nBlocksRandomised;^264^^^^^^^[REPLACE] private int nBlocksRandomised;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private int currentChar = -3;^266^^^^^^^[REPLACE] private int currentChar = -1;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  short  runLength = 0;^267^^^^^^^[REPLACE] private int runLength = 0;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private boolean closed  = null ;^367^^^^^^^[REPLACE] private boolean closed = false;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  short  blockCRC, combinedCRC;^402^^^^^^^[REPLACE] private int blockCRC, combinedCRC;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^long  hh;^999^^^^^^^[REPLACE] int hh;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^short  dd;^1000^^^^^^^[REPLACE] int dd;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private int[] incs ;^1509^1510^1511^^^1509^1511^[REPLACE] private int[] incs = {1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484};^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^block = this;^275^^^^^274^293^[REPLACE] block = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant = this;^276^^^^^274^293^[REPLACE] quadrant = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr = true;^277^^^^^274^293^[REPLACE] zptr = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^278^^^^^274^293^[ADD] ftab = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsSetStream ( bsStream ) ;^280^^^^^274^293^[REPLACE] bsSetStream ( inStream ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^bsStream.close (  )  ;^280^^^^^274^293^[REMOVE] ^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workFactor = 50 - 4;^282^^^^^274^293^[REPLACE] workFactor = 50;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (nInUse  !=  2 )  {^283^^^^^274^293^[REPLACE] if  ( inBlockSize > 9 )  {^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^284^^^^^274^293^[ADD] inBlockSize = 9;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inBlockSize = 3;^284^^^^^274^293^[REPLACE] inBlockSize = 9;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inBlockSize  !=  1 )  {^286^^^^^274^293^[REPLACE] if  ( inBlockSize < 1 )  {^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inBlockSize = 1 / 4;^287^^^^^274^293^[REPLACE] inBlockSize = 1;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inBlockSize = 3;^287^^^^^274^293^[REPLACE] inBlockSize = 1;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockSize100k =  workDone;^289^^^^^274^293^[REPLACE] blockSize100k = inBlockSize;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hbAssignCodes ( code[t], len[t], minLen, maxLen, alphaSize )  ;^290^^^^^274^293^[REPLACE] allocateCompressStructures (  ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^291^^^^^274^293^[REPLACE] initialize (  ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^endBlock (  )  ;^292^^^^^274^293^[REPLACE] initBlock (  ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  )  ;^292^^^^^274^293^[REMOVE] ^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^71^72^^^^66^210^[ADD] int nNodes, nHeap, n1, n2, i, j, k; boolean  tooLong;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^71^^^^^66^210^[ADD] int nNodes, nHeap, n1, n2, i, j, k;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo  ;^71^^^^^66^210^[REPLACE] int nNodes, nHeap, n1, n2, i, j, k;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^71^^^^^66^210^[REPLACE] int nNodes, nHeap, n1, n2, i, j, k;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^72^^^^^66^210^[REPLACE] boolean  tooLong;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] weight = new int[ ( MAX_ALPHA_SIZE )  * 2]  ;^74^^^^^66^210^[REPLACE] int[] heap = new int[MAX_ALPHA_SIZE + 2];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] weight = new int[MAX_ALPHA_SIZE  2];^75^^^^^66^210^[REPLACE] int[] weight = new int[MAX_ALPHA_SIZE * 2];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^76^^^^^66^210^[ADD] int[] parent = new int[MAX_ALPHA_SIZE * 2];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = gs  ;^78^^^^^66^210^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i  1] =  ( freq[i] == 0 ? 1 : freq[i] )  << 8;^79^^^^^66^210^[REPLACE] weight[i + 1] =  ( freq[i] == 0 ? 1 : freq[i] )  << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( nHeap <  ( MAX_ALPHA_SIZE + 4 )  )  )  {^105^^^^^66^210^[REPLACE] if  ( ! ( nHeap <  ( MAX_ALPHA_SIZE + 2 )  )  )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^panic (  ) ;^105^106^107^^^66^210^[ADD] if  ( ! ( nHeap <  ( MAX_ALPHA_SIZE + 2 )  )  )  { panic (  ) ; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^106^^^^^66^210^[REPLACE] panic (  ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  <  nHeap )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( true || weight[heap[bytesOut + 1]] < weight[heap[yy]] )  {^122^123^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  >=  weight[heap[yy]] )  {^126^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  !=  nHeap )  {^143^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^143^144^145^^^66^210^[ADD] if  ( yy > nHeap )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy < nHeap ||true )  {^146^147^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  != workFactor )  {^150^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^150^151^152^^^66^210^[ADD] if  ( weight[tmp] < weight[heap[yy]] )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( workDone <  (nMTF )  )  )  {^182^^^^^66^210^[REPLACE] if  ( ! ( nNodes <  ( MAX_ALPHA_SIZE * 2 )  )  )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^183^^^^^66^210^[REPLACE] panic (  ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  <  maxLen )  {^195^^^^^66^210^[REPLACE] if  ( j > maxLen )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tooLong = false  ;^196^^^^^66^210^[REPLACE] tooLong = true;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( !true )  {^200^^^^^66^210^[REPLACE] if  ( !tooLong )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^200^^^^^66^210^[REMOVE] ^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nNodes =  null;^83^^^^^66^210^[REPLACE] nNodes = alphaSize;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hp = 0  ;^84^^^^^66^210^[REPLACE] nHeap = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[2] = 2;^86^^^^^66^210^[REPLACE] heap[0] = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[1] = 1;^87^^^^^66^210^[REPLACE] weight[0] = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^88^^^^^66^210^[ADD] parent[0] = -2;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = h  ;^90^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[0] = -2  ;^91^^^^^66^210^[REPLACE] parent[i] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[nHeap]  = null ;^93^^^^^66^210^[REPLACE] heap[nHeap] = i;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz =  workFactor;^96^^^^^66^210^[REPLACE] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp =  weight[zz];^97^^^^^66^210^[REPLACE] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  <  3];^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 4;^100^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] ;^102^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^110^^^^^66^210^[ADD] n1 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[2] = heap[nHeap];^111^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = yy  ;^115^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^116^^^^^66^210^[ADD] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^118^^^^^66^210^[ADD] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] ;^129^^^^^66^210^[REPLACE] heap[zz] = heap[yy];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^130^^^^^66^210^[ADD] zz = yy;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  = null ;^132^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n2 = heap[1 >> 2];^134^^^^^66^210^[REPLACE] n2 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[yy]  ;^135^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 2;^139^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp =  weight[zz];^140^^^^^66^210^[REPLACE] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  ==  1;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  = null ;^153^^^^^66^210^[REPLACE] heap[zz] = heap[yy];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^154^^^^^66^210^[ADD] zz = yy;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^156^^^^^66^210^[ADD] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[n1]  =  parent[n1] ;^159^^^^^66^210^[REPLACE] parent[n1] = parent[n2] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[nNodes] =  (  ( weight[n1] & 0xffffff00 ) +  ( weight[n2] & 0xffffff00 )  ) &  ( 1 +  (  (  ( weight[n1] & 0x000000ff ) >  ( weight[n2] & 0x000000ff )  )^161^162^163^164^^66^210^[REPLACE] weight[nNodes] =  (  ( weight[n1] & 0xffffff00 ) +  ( weight[n2] & 0xffffff00 )  ) |  ( 1 +  (  (  ( weight[n1] & 0x000000ff ) >  ( weight[n2] & 0x000000ff )  )^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[i] = -1  ;^168^^^^^66^210^[REPLACE] parent[nNodes] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^170^^^^^66^210^[ADD] heap[nHeap] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^173^174^^^^66^210^[ADD] zz = nHeap; tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp =  weight[zz];^174^^^^^66^210^[REPLACE] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^176^177^^^^66^210^[ADD] heap[zz] = heap[zz >> 1]; zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^177^^^^^66^210^[ADD] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  =  heap[zz] ;^179^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tooLong = true  ;^186^^^^^66^210^[REPLACE] tooLong = false;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i <= alphaSize; i++ )  {^187^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^188^^^^^66^210^[ADD] j = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k -= 4  ;^189^^^^^66^210^[REPLACE] k = i;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k =  zptr[k];^191^^^^^66^210^[REPLACE] k = parent[k];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[i  0] =  ( char )  j;^194^^^^^66^210^[REPLACE] len[i - 1] =  ( char )  j;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i < alphaSize; i++ )  {^204^^^^^66^210^[REPLACE] for  ( i = 1; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = weight[i]  <  8;^205^^^^^66^210^[REPLACE] j = weight[i] >> 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =n1   ( j / 2 ) ;^206^^^^^66^210^[REPLACE] j = 1 +  ( j / 2 ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i] = j  !=  8 % 4;^207^^^^^66^210^[REPLACE] weight[i] = j << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^95^^^^^66^210^[REPLACE] int zz, tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp  ;^95^^^^^66^210^[REPLACE] int zz, tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 >>> 4, yy = 0 >>> 4, tmp = 0 >>> 4;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 2, yy = 2, tmp = 2;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 / 1, yy = 0 / 1, tmp = 0 / 1;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 3, yy = 3, tmp = 3;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0  ;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0L, yy = 0L, tmp = 0L;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0L, tmp = 0L;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 + 4, tmp = 0 + 4;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int b =  ( 256 - 4 + bv )   256 - 4;^301^^^^^300^319^[REPLACE] int b =  ( 256 + bv )  % 256;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( currentChar  ==  n1 )  {^302^^^^^300^319^[REPLACE] if  ( currentChar != -1 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1  ;^316^^^^^302^318^[REPLACE] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( currentChar  ) {^303^^^^^300^319^[REPLACE] if  ( currentChar == b )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 1 * 2;^312^^^^^303^314^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1  ;^313^^^^^303^314^[REPLACE] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  <=  254 )  {^305^^^^^300^319^[REPLACE] if  ( runLength > 254 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^writeRun (  ) ;currentChar = -1;runLength = 0;^305^306^307^308^309^300^319^[ADD] if  ( runLength > 254 )  { writeRun (  ) ; currentChar = -1; runLength = 0; }^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1 % 4;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^308^^^^^300^319^[ADD] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1L;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  runLength > 0  )   {  ;^305^^^^^300^319^[REPLACE] if  ( runLength > 254 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = b  ;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0 * 0;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^307^^^^^300^319^[ADD] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0 - 2;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0  ;^312^^^^^300^319^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1  ;^313^^^^^300^319^[REPLACE] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( currentChar  &&  b )  {^303^^^^^300^319^[REPLACE] if  ( currentChar == b )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0  ;^312^^^^^303^314^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^313^^^^^303^314^[ADD] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  ==  254 )  {^305^^^^^300^319^[REPLACE] if  ( runLength > 254 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^307^308^^^^300^319^[ADD] currentChar = -1; runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 3;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -0;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0L;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -3;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0 >>> 2;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 1 * 3;^312^^^^^300^319^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^313^^^^^300^319^[ADD] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1  ;^316^^^^^300^319^[REPLACE] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( last  > workLimit )  {^322^^^^^321^365^[REPLACE] if  ( last < allowableBlockSize )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^initBlock (  )  ;^361^^^^^322^364^[REPLACE] endBlock (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^endBlock (  )  ;^362^^^^^322^364^[REPLACE] initBlock (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^362^^^^^322^364^[ADD] initBlock (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^363^^^^^322^364^[REPLACE] writeRun (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^323^^^^^321^365^[ADD] inUse[currentChar] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  n1] =  ( char )  currentChar;^330^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^334^^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[ (  ( last )  + 1 ) ] =  (  ( char )   (  ( runLength )  - 4 )  )  ;^336^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^340^^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  1] =  ( char )  currentChar;^342^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^344^345^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar; break;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^347^^^^^321^365^[ADD] inUse[runLength - 4] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[ (  ( last )  + 1 ) ] =  (  ( char )   (  ( runLength )  - 4 )  )  ;^349^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^351^^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^353^^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  1 << 3] =  ( char )  currentChar;^355^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last workLimit] =  ( char )   ( runLength - 4 ) ;^357^^^^^321^365^[REPLACE] block[last + 1] =  ( char )   ( runLength - 4 ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int i = 0 - 4; i < runLength; i++ )  {^324^^^^^321^365^[REPLACE] for  ( int i = 0; i < runLength; i++ )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[currentChar] = false;^323^^^^^321^365^[REPLACE] inUse[currentChar] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  0] =  ( char )  currentChar;^330^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  n0] =  ( char )  currentChar;^334^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  3] =  ( char )  currentChar;^336^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  1] =  ( char )  currentChar;^340^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[ (  ( last )  + 1 ) ] =  (  ( char )   (  ( runLength )  - 4 )  )  ;^342^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^344^345^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar; break;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[runLength  4] = true;^347^^^^^321^365^[REPLACE] inUse[runLength - 4] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  1] =  ( char )  currentChar;^349^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  1] =  ( char )  currentChar;^351^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  1] =  ( char )  currentChar;^353^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last workLimit] =  ( char )  currentChar;^355^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[ (  ( last )  + 1 ) ] =  (  ( char )   ( currentChar )  )  ;^357^^^^^321^365^[REPLACE] block[last + 1] =  ( char )   ( runLength - 4 ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int i = 0 + 0; i < runLength; i++ )  {^324^^^^^321^365^[REPLACE] for  ( int i = 0; i < runLength; i++ )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockCRC  =  blockCRC ;^436^^^^^435^482^[REPLACE] blockCRC = mCrc.getFinalCRC (  ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^combinedCRC =  ( combinedCRC << 1 )  &  ( combinedCRC >>> 31 ) ;^437^^^^^435^482^[REPLACE] combinedCRC =  ( combinedCRC << 1 )  |  ( combinedCRC >>> 31 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^438^^^^^435^482^[ADD] combinedCRC ^= blockCRC;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  !=  -1 )  {^442^^^^^435^482^[REPLACE] if  ( last == -1 )  {^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return;  ;^443^^^^^435^482^[REPLACE] return;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^447^^^^^435^482^[REPLACE] doReversibleTransformation (  ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^462^^^^^435^482^[REPLACE] bsPutUChar ( 0x31 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^463^^^^^435^482^[REPLACE] bsPutUChar ( 0x41 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^464^^^^^435^482^[REPLACE] bsPutUChar ( 0x59 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^465^^^^^435^482^[REPLACE] bsPutUChar ( 0x26 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^466^^^^^435^482^[REPLACE] bsPutUChar ( 0x53 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^467^^^^^435^482^[REPLACE] bsPutUChar ( 0x59 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutint ( combinedCRC )  ;^470^^^^^435^482^[REPLACE] bsPutint ( blockCRC ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^470^^^^^435^482^[ADD] bsPutint ( blockCRC ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  inUse[i * 16 + j]  )   {  ;^473^^^^^435^482^[REPLACE] if  ( blockRandomised )  {^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1, 1 )  ;^477^^^^^473^478^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^bsW ( 1, 1 )  ;^477^^^^^473^478^[REMOVE] ^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1, 0 )  ;^474^^^^^435^482^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^481^^^^^435^482^[REPLACE] moveToFrontCodeAndSend (  ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^481^^^^^435^482^[ADD] moveToFrontCodeAndSend (  ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^492^^^^^484^502^[REPLACE] bsPutUChar ( 0x17 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^493^^^^^484^502^[REPLACE] bsPutUChar ( 0x72 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 49 )  ;^494^^^^^484^502^[REPLACE] bsPutUChar ( 0x45 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^495^^^^^484^502^[REPLACE] bsPutUChar ( 0x38 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^495^^^^^484^502^[ADD] bsPutUChar ( 0x38 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^496^^^^^484^502^[REPLACE] bsPutUChar ( 0x50 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 69 )  ;^497^^^^^484^502^[REPLACE] bsPutUChar ( 0x90 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutint ( blockCRC )  ;^499^^^^^484^502^[REPLACE] bsPutint ( combinedCRC ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^501^^^^^484^502^[REPLACE] bsFinishedWithStream (  ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE]  ;^573^^^^^572^884^[REPLACE] char len[][] = new char[N_GROUPS][MAX_ALPHA_SIZE];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^575^^^^^572^884^[REPLACE] int v, t, i, j, gs, ge, totc, bt, bc, iter;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^575^576^^^^572^884^[ADD] int v, t, i, j, gs, ge, totc, bt, bc, iter; int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^575^576^^^^572^884^[ADD] int v, t, i, j, gs, ge, totc, bt, bc, iter; int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^575^^^^^572^884^[ADD] int v, t, i, j, gs, ge, totc, bt, bc, iter;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^575^^^^^572^884^[REPLACE] int v, t, i, j, gs, ge, totc, bt, bc, iter;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int nSelectors = 0 / 0, alphaSize, minLen, maxLen, selCtr;^576^^^^^572^884^[REPLACE] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^576^^^^^572^884^[REPLACE] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int nGroups;^576^577^^^^572^884^[ADD] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr; int nGroups;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^576^^^^^572^884^[ADD] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^577^^^^^572^884^[ADD] int nGroups;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^alphaSize =numBits  2;^579^^^^^572^884^[REPLACE] alphaSize = nInUse + 2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v = 0  ;^580^^^^^572^884^[REPLACE] for  ( t = 0; t < N_GROUPS; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^581^582^583^^^572^884^[ADD] for  ( v = 0; v < alphaSize; v++ )  { len[t][v] =  ( char )  GREATER_ICOST; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^582^^^^^572^884^[ADD] len[t][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nMTF  ==  3 )  {^587^^^^^572^884^[REPLACE] if  ( nMTF <= 0 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^588^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nMTF  !=  200 )  {^591^^^^^572^884^[REPLACE] if  ( nMTF < 200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^nGroups = 2;nGroups = 3;^591^592^593^594^^572^884^[ADD] if  ( nMTF < 200 )  { nGroups = 2; } else if  ( nMTF < 600 )  { nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if   (  nMTF < 2400  )   {  ;^593^^^^^572^884^[REPLACE] } else if  ( nMTF < 600 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^}   nGroups = 3;nGroups = 4;^593^594^595^596^^572^884^[ADD] else if  ( nMTF < 600 )  { nGroups = 3; } else if  ( nMTF < 1200 )  { nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if  ( nMTF  != workLimit )  {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if  ( workLimit  >=  blockSize100k )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3  ;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^598^^^^^572^884^[ADD] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3  ;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^596^^^^^572^884^[ADD] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if  (workLimit  >  2400 )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6 - 2;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5 >> 4;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 1;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6;^594^^^^^572^884^[REPLACE] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  else {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if   (  nMTF < 600  )   {  ;^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^600^^^^^597^601^[ADD] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3  ;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^600^^^^^572^884^[ADD] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3  ;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5L;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4  ;^594^^^^^572^884^[REPLACE] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4 * 1;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 2 / 0;^592^^^^^572^884^[REPLACE] nGroups = 2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  else {^593^^^^^572^884^[REPLACE] } else if  ( nMTF < 600 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^}   nGroups = 4;^593^594^595^596^^572^884^[ADD] else if  ( nMTF < 600 )  { nGroups = 3; } else if  ( nMTF < 1200 )  { nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  ( nMTF  >  1200 )  {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  else {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 1;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4 - 0;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 2;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 7;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3 + 2;^594^^^^^572^884^[REPLACE] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  (workLimit  >=  1200 )  {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^}   nGroups = 4;nGroups = 5;^595^596^597^598^^572^884^[ADD] else if  ( nMTF < 1200 )  { nGroups = 4; } else if  ( nMTF < 2400 )  { nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  (workLimit  >  2400 )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 7;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  ( workLimit  >=  blockSize100k )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3;^592^^^^^572^884^[REPLACE] nGroups = 2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^594^^^^^572^884^[ADD] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 1;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  nPart != nGroups || nPart != 1 ||  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^572^884^[REPLACE] if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^aFreq += mtfFreq[ge]  ;^620^^^^^618^622^[REPLACE] aFreq -= mtfFreq[ge];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( v >= gs || v <= ge )  {^625^^^^^572^884^[REPLACE] if  ( v >= gs && v <= ge )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^628^^^^^625^629^[ADD] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  1][v] =  ( char )  LESSER_ICOST;^626^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  LESSER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nPart =  workLimit;^606^^^^^572^884^[REPLACE] nPart = nGroups;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^remF   =  remF  ;^607^^^^^572^884^[REPLACE] remF  = nMTF;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = 1;^608^^^^^572^884^[REPLACE] gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tFreq = remF workLimit;^610^^^^^572^884^[REPLACE] tFreq = remF / nPart;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs  0;^611^^^^^572^884^[REPLACE] ge = gs - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^aFreq = 2;^612^^^^^572^884^[REPLACE] aFreq = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^615^^^^^572^884^[ADD] aFreq += mtfFreq[ge];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^620^^^^^572^884^[ADD] aFreq -= mtfFreq[ge];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 4; v < alphaSize; v++ )  {^624^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  1][v] =  ( char )  GREATER_ICOST;^628^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs - 1  ;^633^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^remF -=  workLimit;^634^^^^^572^884^[REPLACE] remF -= aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^604^^^^^572^884^[REPLACE] int nPart, remF, tFreq, aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^604^^^^^572^884^[ADD] int nPart, remF, tFreq, aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int tFreq  ;^604^^^^^572^884^[REPLACE] int nPart, remF, tFreq, aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE]  ;^638^^^^^572^884^[REPLACE] int[][] rfreq = new int[N_GROUPS][MAX_ALPHA_SIZE];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal = j >> shifts  ;^639^^^^^572^884^[REPLACE] int[] fave = new int[N_GROUPS];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char[] pos = new char[N_GROUPS]  ;^640^^^^^572^884^[REPLACE] short[] cost = new short[N_GROUPS];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( gs  >  nMTF )  {^661^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^661^662^663^^^572^884^[ADD] if  ( gs >= nMTF )  { break; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  ==  nMTF )  {^665^^^^^572^884^[REPLACE] if  ( ge >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge =workLimit  1;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nGroups  ||  6 )  {^677^^^^^572^884^[REPLACE] if  ( nGroups == 6 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^short cost0, cost1, cost2, cost3, cost4, cost5;cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^677^678^679^680^681^572^884^[ADD] if  ( nGroups == 6 )  { short cost0, cost1, cost2, cost3, cost4, cost5; cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0; for  ( i = gs; i <= ge; i++ )  { short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i =  runLength; i <^696^^^^^677^702^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv]  ;^699^^^^^677^702^[REPLACE] cost[t] += len[t][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short workLimitcv = szptr[i];^697^^^^^677^702^[REPLACE] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0L = cost1 = cost2 = cost3 = cost4 = cost5 = 0L;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 = cost3 = cost4 = cost5 = 0  ;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 = cost4 = cost5 = 0  ;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^679^^^^^572^884^[ADD] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 << 3 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 << 3;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[t] = 0  ;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i =  runLength; i <^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0L += len[0L][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv]  ;^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 += len[1][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 - 2 += len[3 - 2][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 >> 4 += len[4 >> 4][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 += len[4][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^689^^^^^572^884^[ADD] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^690^691^^^^572^884^[ADD] cost[1] = cost1; cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[3] = cost3;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^692^693^^^^572^884^[ADD] cost[3] = cost3; cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[1] = cost1;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[4] = cost4  ;^694^^^^^572^884^[REPLACE] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short cost2  ;^678^^^^^572^884^[REPLACE] short cost0, cost1, cost2, cost3, cost4, cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short cost0  ;^678^^^^^572^884^[REPLACE] short cost0, cost1, cost2, cost3, cost4, cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^678^^^^^572^884^[ADD] short cost0, cost1, cost2, cost3, cost4, cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short workLimitcv = szptr[i];^681^^^^^572^884^[REPLACE] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( cost[t]  <=  bc )  {^711^^^^^572^884^[REPLACE] if  ( cost[t] < bc )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^712^713^^^^572^884^[ADD] bc = cost[t]; bt = t;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bt = -1  ;^713^^^^^572^884^[REPLACE] bt = t;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( iter = 0L; iter < N_ITERS; iter++ )  {^644^^^^^572^884^[REPLACE] for  ( iter = 0; iter < N_ITERS; iter++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hp = 0  ;^645^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^fave[t] = 0 / 0;^646^^^^^572^884^[REPLACE] fave[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < nGroups; t++ )  {^649^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 3; v < alphaSize; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 2;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nSelectors = 0 % 1;^655^^^^^572^884^[REPLACE] nSelectors = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^totc = 2;^656^^^^^572^884^[REPLACE] totc = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^657^^^^^572^884^[ADD] gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^664^^^^^572^884^[ADD] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = nMTF  1;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0 << 3; t < nGroups; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[t] = 1;^674^^^^^572^884^[REPLACE] cost[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 = cost1 = cost2 = cost3 = cost4 = cost5 = 4;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 = cost1 = cost2 = cost3 = cost4 = cost5 = 3;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 - 4 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 - 4;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^680^681^682^683^684^572^884^[ADD] for  ( i = gs; i <= ge; i++ )  { short icv = szptr[i]; cost0 += len[0][icv]; cost1 += len[1][icv]; cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^682^^^^^572^884^[ADD] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 += len[4][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv]  ;^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 += len[0][icv]  ;^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4L += len[4L][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^687^^^^^572^884^[ADD] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[4] = cost4  ;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^690^^^^^572^884^[ADD] cost[1] = cost1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[4] = cost4  ;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[2] = cost2;^692^^^^^572^884^[REPLACE] cost[3] = cost3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[5] = cost5;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[1] = cost1;^694^^^^^572^884^[REPLACE] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i =  runLength; i <^696^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv]  ;^699^^^^^572^884^[REPLACE] cost[t] += len[t][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc = 201742574;^708^^^^^572^884^[REPLACE] bc = 999999999;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bt = -1 % 2;^709^^^^^572^884^[REPLACE] bt = -1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^710^711^712^713^714^572^884^[ADD] for  ( t = 0; t < nGroups; t++ )  { if  ( cost[t] < bc )  { bc = cost[t]; bt = t; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc =  szptr[t];^712^^^^^572^884^[REPLACE] bc = cost[t];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^totc = 0  ;^716^^^^^572^884^[REPLACE] totc += bc;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^718^719^^^^572^884^[ADD] selector[nSelectors] =  ( char )  bt; nSelectors++;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i =  runLength; i <^724^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs - 1  ;^728^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 1; t < nGroups; t++ )  {^734^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^678^679^^^^572^884^[ADD] short cost0, cost1, cost2, cost3, cost4, cost5; cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^681^682^^^^572^884^[ADD] short icv = szptr[i]; cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short workLimitcv = szptr[i];^697^^^^^572^884^[REPLACE] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^fave = null;^739^740^^^^572^884^[ADD] rfreq = null; fave = null;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^740^^^^^572^884^[ADD] fave = null;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^741^^^^^572^884^[ADD] cost = null;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( nGroups < 8 )  )  {^743^^^^^572^884^[REPLACE] if  ( ! ( nGroups < 8 )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^panic (  ) ;^743^744^745^^^572^884^[ADD] if  ( ! ( nGroups < 8 )  )  { panic (  ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^744^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( nGroups < 32768 / 4 ) {^746^^^^^572^884^[REPLACE] if  ( ! ( nSelectors < 32768 && nSelectors <=  ( 2 +  ( 900000 / G_SIZE )  )  )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^747^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 )  ;^747^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = gs  ;^755^^^^^572^884^[REPLACE] for  ( i = 0; i < nGroups; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy[i] =  (  ( char )   ( i )  )  ;^756^^^^^572^884^[REPLACE] pos[i] =  ( char )  i;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = h  ;^758^^^^^572^884^[REPLACE] for  ( i = 0; i < nSelectors; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ll_i =  selector[null];^759^^^^^572^884^[REPLACE] ll_i = selector[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^760^^^^^572^884^[ADD] j = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^761^^^^^572^884^[ADD] tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^tmp = pos[j];^764^765^^^^572^884^[ADD] tmp2 = tmp; tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp = yy[j]  ;^765^^^^^572^884^[REPLACE] tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^pos[0] = tmp  ;^766^^^^^572^884^[REPLACE] pos[j] = tmp2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy[0] = tmp  ;^768^^^^^572^884^[REPLACE] pos[0] = tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^selectorMtf[i]  =  selectorMtf[i] ;^769^^^^^572^884^[REPLACE] selectorMtf[i] =  ( char )  j;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short[] cost = new short[N_GROUPS]  ;^753^^^^^572^884^[REPLACE] char[] pos = new char[N_GROUPS];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^754^^^^^572^884^[REPLACE] char ll_i, tmp2, tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^754^^^^^572^884^[ADD] char ll_i, tmp2, tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char tmp2  ;^754^^^^^572^884^[REPLACE] char ll_i, tmp2, tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] rfreq = new int[N_GROUPS][MAX_ALPHA_SIZE]  ;^773^^^^^572^884^[REPLACE] int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  >=  maxLen )  {^780^^^^^572^884^[REPLACE] if  ( len[t][i] > maxLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^maxLen = len[t][i];^780^781^782^^^572^884^[ADD] if  ( len[t][i] > maxLen )  { maxLen = len[t][i]; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^minLen = len[t][i]  ;^781^^^^^572^884^[REPLACE] maxLen = len[t][i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  > tmp2 )  {^783^^^^^572^884^[REPLACE] if  ( len[t][i] < minLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^maxLen = len[t][i]  ;^784^^^^^572^884^[REPLACE] minLen = len[t][i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( maxLen  <= workLimit )  {^787^^^^^572^884^[REPLACE] if  ( maxLen > 20 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^788^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ==  1 )  {^790^^^^^572^884^[REPLACE] if  ( minLen < 1 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^791^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 )  ;^791^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v = 0  ;^776^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^minLen = 24;^777^^^^^572^884^[REPLACE] minLen = 32;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^maxLen = 3;^778^^^^^572^884^[REPLACE] maxLen = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^779^780^781^782^^572^884^[ADD] for  ( i = 0; i < alphaSize; i++ )  { if  ( len[t][i] > maxLen )  { maxLen = len[t][i]; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimitnUse[i * 16  j] )  {^802^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^803^^^^^572^884^[ADD] inUse16[i] = true;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  inUse[i]  )   {  ;^810^^^^^572^884^[REPLACE] if  ( inUse16[i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^810^811^812^813^814^572^884^[ADD] if  ( inUse16[i] )  { bsW ( 1, 1 ) ; } else { bsW ( 1, 0 ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2, 0 ) ;^813^^^^^810^814^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1, 0 )  ;^811^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  inUse[i]  )   {  ;^818^^^^^572^884^[REPLACE] if  ( inUse16[i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16 n1] )  {^820^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( inUse[ (  ( i * 16 )  + j ) ] )  {     inUse16[i] = true; }^820^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 - 4, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1, 0 )  ;^821^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^821^^^^^572^884^[ADD] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 * 3; j < 16; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16  j] )  {^820^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^bsW ( 1, 1 ) ;bsW ( 1, 0 ) ;^820^821^822^823^824^572^884^[ADD] if  ( inUse[i * 16 + j] )  { bsW ( 1, 1 ) ; } else { bsW ( 1, 0 ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1, 1 )  ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 - 1, 1 - 1 ) ;^821^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^bsW ( 1, 0 )  ;^821^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = gs  ;^799^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse16[i] = true;^800^^^^^572^884^[REPLACE] inUse16[i] = false;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hp = 0  ;^801^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse16[i] = false;^803^^^^^572^884^[REPLACE] inUse16[i] = true;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = h  ;^809^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^817^818^819^820^821^572^884^[ADD] for  ( i = 0; i < 16; i++ )  { if  ( inUse16[i] )  { for  ( j = 0; j < 16; j++ )  { if  ( inUse[i * 16 + j] )  { bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 / 3; j < 16; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^boolean[] inUse9 = new boolean[9];^798^^^^^572^884^[REPLACE] boolean[] inUse16 = new boolean[16];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW  ( 1, nGroups ) ;^833^^^^^572^884^[REPLACE] bsW  ( 3, nGroups ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW  ( 15 / 0, origPtr ) ;^834^^^^^572^884^[REPLACE] bsW  ( 15, nSelectors ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = h  ;^835^^^^^572^884^[REPLACE] for  ( i = 0; i < nSelectors; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^836^837^838^^^572^884^[ADD] for  ( j = 0; j < selectorMtf[i]; j++ )  { bsW ( 1, 1 ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 2; t < nGroups; t++ )  {^845^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^848^849^850^851^852^572^884^[ADD] for  ( i = 0; i < alphaSize; i++ )  { while  ( curr < len[t][i] )  { bsW ( 2, 2 ) ; c }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int curr = len[t][0L];^846^^^^^572^884^[REPLACE] int curr = len[t][0];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nSelectors = 0  ;^863^^^^^572^884^[REPLACE] selCtr = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hp = 0  ;^864^^^^^572^884^[REPLACE] gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( gs  ==  nMTF )  {^866^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  gs >= nMTF  )   {  ;^870^^^^^572^884^[REPLACE] if  ( ge >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^ge = nMTF - 1;^870^871^872^^^572^884^[ADD] if  ( ge >= nMTF )  { ge = nMTF - 1; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = nMTF  1;^871^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs + G_SIZE  1;^869^^^^^572^884^[REPLACE] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge =workLimit  1;^871^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^873^874^875^876^^572^884^[ADD] for  ( i = gs; i <= ge; i++ )  { bsW ( len[selector[selCtr]][szptr[i]], code[selector[selCtr]][szptr[i]] ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = ge  1;^878^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( workLimit == t )  )  {^881^^^^^572^884^[REPLACE] if  ( ! ( selCtr == nSelectors )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^panic (  ) ;^881^882^883^^^572^884^[ADD] if  ( ! ( selCtr == nSelectors )  )  { panic (  ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^882^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^882^^^^^572^884^[ADD] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^895^^^^^894^967^[REPLACE] int i, j, h, bigN, hp;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^895^^^^^894^967^[ADD] int i, j, h, bigN, hp;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^895^^^^^894^967^[REPLACE] int i, j, h, bigN, hp;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^896^^^^^894^967^[REPLACE] int v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^898^^^^^894^967^[ADD] bigN = hi - lo + 1;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bigN  >  2 )  {^899^^^^^894^967^[REPLACE] if  ( bigN < 2 )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^899^^^^^894^967^[REMOVE] ^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return;  ;^900^^^^^894^967^[REPLACE] return;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hp = 0 % 1;^903^^^^^894^967^[REPLACE] hp = 0;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  !=  hi )  {^915^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  j <=   (  h - 1  )    )   {  ;^923^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  !=  hi )  {^931^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( lo + h - 1 )  )  {^939^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  <=  hi )  {^947^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^947^948^949^^^894^967^[ADD] if  ( i > hi )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >   ( lo + h - 2 )  )  {^955^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^955^956^957^^^894^967^[ADD] if  ( j <=  ( lo + h - 1 )  )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  firstAttempt )  {^962^^^^^894^967^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return;  ;^963^^^^^894^967^[REPLACE] return;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h =  incs[tmp];^910^^^^^894^967^[REPLACE] h = incs[hp];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = lo  h;^912^^^^^894^967^[REPLACE] i = lo + h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[workLimit];^918^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0  ;^919^^^^^894^967^[REPLACE] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^921^922^^^^894^967^[ADD] zptr[j] = zptr[j - h]; j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  h;^922^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[i] = i  ;^927^^^^^894^967^[REPLACE] zptr[j] = v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[workLimit];^934^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^935^^^^^894^967^[ADD] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^937^^^^^894^967^[ADD] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^938^^^^^894^967^[ADD] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^943^^^^^894^967^[ADD] zptr[j] = v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[workLimit];^950^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0  ;^951^^^^^894^967^[REPLACE] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^954^^^^^894^967^[ADD] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^959^960^^^^894^967^[ADD] zptr[j] = v; i++;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo  ;^1004^^^^^1003^1120^[REPLACE] int unLo, unHi, ltLo, gtHi, med, n, m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int gtHi  ;^1004^^^^^1003^1120^[REPLACE] int unLo, unHi, ltLo, gtHi, med, n, m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int unHi  ;^1004^^^^^1003^1120^[REPLACE] int unLo, unHi, ltLo, gtHi, med, n, m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zPend  ;^1004^^^^^1003^1120^[REPLACE] int unLo, unHi, ltLo, gtHi, med, n, m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1004^1005^^^^1003^1120^[ADD] int unLo, unHi, ltLo, gtHi, med, n, m; int sp, lo, hi, d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1004^^^^^1003^1120^[REPLACE] int unLo, unHi, ltLo, gtHi, med, n, m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1005^^^^^1003^1120^[ADD] int sp, lo, hi, d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1005^^^^^1003^1120^[REPLACE] int sp, lo, hi, d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sp = 3;^1007^^^^^1003^1120^[REPLACE] sp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1009^^^^^1003^1120^[ADD] stack[sp].ll = loSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1010^^^^^1003^1120^[ADD] stack[sp].hh = hiSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo  ;^1011^^^^^1003^1120^[REPLACE] stack[sp].dd = dSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( sp  >  QSORT_STACK_SIZE )  {^1015^^^^^1003^1120^[REPLACE] if  ( sp >= QSORT_STACK_SIZE )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^1016^^^^^1003^1120^[REPLACE] panic (  ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  d >tooLong )  {^1024^^^^^1003^1120^[REPLACE] if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^simpleSort ( lo, hi, d ) ;return;^1024^1025^1026^1027^1028^1003^1120^[ADD] if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  { simpleSort ( lo, hi, d ) ; if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^1026^^^^^1003^1120^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return;  ;^1027^^^^^1003^1120^[REPLACE] return;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true || firstAttempt )  {^1026^^^^^1003^1120^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  !=  unHi )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  ) {^1045^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^temp = zptr[unHi]  ;^1047^^^^^1003^1120^[REPLACE] temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1048^1049^^^^1003^1120^[ADD] zptr[unLo] = zptr[ltLo]; zptr[ltLo] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[p2] = temp  ;^1049^^^^^1003^1120^[REPLACE] zptr[ltLo] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 << 4;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  ==   0 )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  <=  unHi )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  !=  blockSize100k )  {^1064^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int temp = 0;temp = zptr[unHi];zptr[unHi] = zptr[gtHi];zptr[gtHi] = temp;^1064^1065^1066^1067^1068^1003^1120^[ADD] if  ( n == 0 )  { int temp = 0; temp = zptr[unHi]; zptr[unHi] = zptr[gtHi]; zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^temp = zptr[unLo]  ;^1066^^^^^1003^1120^[REPLACE] temp = zptr[unHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[unLo] = zptr[ltLo]  ;^1067^^^^^1003^1120^[REPLACE] zptr[unHi] = zptr[gtHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1068^^^^^1003^1120^[ADD] zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 % 2;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  >=   0 )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1073^1074^1075^^^1003^1120^[ADD] if  ( n <  0 )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  ==  workLimit )  {^1078^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  hi > lo  )   {  ;^1089^^^^^1003^1120^[REPLACE] if  ( gtHi < ltLo )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = m  ;^1090^^^^^1003^1120^[REPLACE] stack[sp].ll = lo;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].hh = m - 1  ;^1091^^^^^1003^1120^[REPLACE] stack[sp].hh = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].workDoned = d  p1;^1092^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1020^1021^^^^1003^1120^[ADD] lo = stack[sp].ll; hi = stack[sp].hh;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1021^^^^^1003^1120^[ADD] hi = stack[sp].hh;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hi = stack[sp].hh  ;^1022^^^^^1003^1120^[REPLACE] d = stack[sp].dd;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1032^1033^1034^^^1003^1120^[ADD] med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^unLo =  ltLo^1036^^^^^1003^1120^[REPLACE] unLo = ltLo = lo;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^unHi =  gtHi^1037^^^^^1003^1120^[REPLACE] unHi = gtHi = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1044^^^^^1003^1120^[ADD] n = block[zptr[unLo] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1048^^^^^1003^1120^[ADD] zptr[unLo] = zptr[ltLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1063^^^^^1003^1120^[ADD] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1067^^^^^1003^1120^[ADD] zptr[unHi] = zptr[gtHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[p2] = temp  ;^1068^^^^^1003^1120^[REPLACE] zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^temp = zptr[unHi]  ;^1082^^^^^1003^1120^[REPLACE] temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[unLo] = zptr[ltLo]  ;^1083^^^^^1003^1120^[REPLACE] zptr[unLo] = zptr[unHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[p2] = temp  ;^1084^^^^^1003^1120^[REPLACE] zptr[unHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].dd = d  0;^1092^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n  =   (workFactor )  ;^1097^^^^^1003^1120^[REPLACE] n =  (  ( ltLo - lo )  <  ( unLo - ltLo )  )  ?  ( ltLo - lo )  :  ( unLo - ltLo ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^m  =   ( gtHi - unHi ) ;^1099^^^^^1003^1120^[REPLACE] m =  (  ( hi - gtHi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1102^^^^^1003^1120^[ADD] n = lo + unLo - ltLo - 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^m = hi -  ( gtHi - unHi )   4;^1103^^^^^1003^1120^[REPLACE] m = hi -  ( gtHi - unHi )  + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = m  ;^1105^^^^^1003^1120^[REPLACE] stack[sp].ll = lo;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1106^^^^^1003^1120^[ADD] stack[sp].hh = n;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo  ;^1107^^^^^1003^1120^[REPLACE] stack[sp].dd = d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll =workDone  1;^1110^^^^^1003^1120^[REPLACE] stack[sp].ll = n + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].hh = m  1;^1111^^^^^1003^1120^[REPLACE] stack[sp].hh = m - 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].dd = d  p1;^1112^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].hh = m - 1  ;^1115^^^^^1003^1120^[REPLACE] stack[sp].ll = m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].hh = m - 1  ;^1116^^^^^1003^1120^[REPLACE] stack[sp].hh = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo  ;^1117^^^^^1003^1120^[REPLACE] stack[sp].dd = d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1046^1047^^^^1003^1120^[ADD] int temp = 0; temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 - 4;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 4;^1081^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1123^^^^^1122^1321^[REPLACE] int i, j, ss, sb;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] runningOrder = new int[93];^1124^^^^^1122^1321^[REPLACE] int[] runningOrder = new int[256];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] copy = new int[256L];^1125^^^^^1122^1321^[REPLACE] int[] copy = new int[256];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1126^^^^^1122^1321^[ADD] boolean[] bigDone = new boolean[256];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1127^^^^^1122^1321^[ADD] int c1, c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^1128^^^^^1122^1321^[REPLACE] int numQSorted;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1138^1139^1140^^^1122^1321^[ADD] for  ( i = 0; i < NUM_OVERSHOOT_BYTES; i++ )  { block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1]; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  i  p2] = block[ ( i %  ( last  1 )  )   1];^1139^^^^^1122^1321^[REPLACE] block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 * 3; i <= last + NUM_OVERSHOOT_BYTES; i++ )  {^1141^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last + NUM_OVERSHOOT_BYTES; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1142^^^^^1122^1321^[ADD] quadrant[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[0] = block[last  1];^1145^^^^^1122^1321^[REPLACE] block[0] = block[last + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( last  !=  2 )  {^1147^^^^^1122^1321^[REPLACE] if  ( last < 4000 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( shifts )  )  {^1219^^^^^1147^1320^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1219^1220^1221^^^1147^1320^[ADD] if  ( j <=  ( h - 1 )  )  { break; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^1252^^^^^1147^1320^[REPLACE] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  n >  0  )   {  ;^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return;  ;^1259^^^^^1147^1320^[REPLACE] return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1257^^^^^1147^1320^[ADD] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (tooLong || firstAttempt )  {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted =  ( hi - lo workFactor ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ (  ( j << 8 )  + ss ) ] |= SETMASK  ;^1262^^^^^1147^1320^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo = ftab[sb] | CLEARMASK;^1253^^^^^1147^1320^[REPLACE] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[ss + 1] & CLEARMASK )   1;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  <=  lo )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1255^1256^1257^1258^1259^1147^1320^[ADD] if  ( hi > lo )  { qSort3 ( lo, hi, 2, stack ) ; numQSorted +=  ( hi - lo + 1 ) ; if  ( workDone > workLimit && firstAttempt )  { return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit ||true )  {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return;^1258^1259^1260^^^1147^1320^[ADD] if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  ==  a2update )  {^1276^^^^^1147^1320^[REPLACE] if  ( i < 255 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  >=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  last p1] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 3 )  >> shifts )  <= 65535 )  )  {^1294^^^^^1147^1320^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^1295^^^^^1147^1320^[REPLACE] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 + 4; j < bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update]  =  quadrant[a2update] ;^1288^^^^^1147^1320^[REPLACE] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  last remF] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[ss << 8] | CLEARMASK;^1277^^^^^1147^1320^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 + 4 )  << 8] & CLEARMASK )   bbStart;^1278^^^^^1147^1320^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 1;^1279^^^^^1147^1320^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1286^1287^^^^1147^1320^[ADD] int a2update = zptr[bbStart + j]; int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  <  shifts ) ;^1287^^^^^1147^1320^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workFactor  <=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  last  1] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 4 )  >> shifts )  <= 65535 )  )  {^1294^^^^^1147^1320^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1295^^^^^1147^1320^[ADD] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bigDone[c1] )  {^1310^^^^^1147^1320^[REPLACE] if  ( !bigDone[c1] )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  last ;^1311^^^^^1147^1320^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted = 4;^1159^^^^^1147^1320^[REPLACE] numQSorted = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i <= 255; i++ )  {^1160^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[i] = false  ;^1161^^^^^1147^1320^[REPLACE] bigDone[i] = false;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i <= 65536; i++ )  {^1164^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] = 1;^1165^^^^^1147^1320^[REPLACE] ftab[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[1]  ;^1168^^^^^1147^1320^[REPLACE] c1 = block[0];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i <= last; i++ )  {^1169^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^ftab[ ( c1 << 8 )  + c2]++;^1170^1171^^^^1147^1320^[ADD] c2 = block[i + 1]; ftab[ ( c1 << 8 )  + c2]++;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  workFactor;^1172^^^^^1147^1320^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = gs  ;^1175^^^^^1147^1320^[REPLACE] for  ( i = 1; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] += ftab[i  1];^1176^^^^^1147^1320^[REPLACE] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[0]  ;^1179^^^^^1147^1320^[REPLACE] c1 = block[1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = gs  ;^1180^^^^^1147^1320^[REPLACE] for  ( i = 0; i < last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1181^1182^^^^1147^1320^[ADD] c2 = block[i + 2]; j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  (p1 )   c2;^1182^^^^^1147^1320^[REPLACE] j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  workFactor;^1183^^^^^1147^1320^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[ftab[j]] = last  ;^1185^^^^^1147^1320^[REPLACE] zptr[ftab[j]] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  (  ( block[last  1] )  << 8 )    ( block[1] ) ;^1188^^^^^1147^1320^[REPLACE] j =  (  ( block[last + 1] )  << 8 )  +  ( block[1] ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[ftab[j]] = i  ;^1190^^^^^1147^1320^[REPLACE] zptr[ftab[j]] = last;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = gs  ;^1198^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = vv  ;^1199^^^^^1147^1320^[REPLACE] runningOrder[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1206^^^^^1147^1320^[ADD] h = 3 * h + 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1210^^^^^1147^1320^[ADD] h = h / 3;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = 1  ;^1211^^^^^1147^1320^[REPLACE] for  ( i = h; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1212^^^^^1147^1320^[ADD] vv = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1213^^^^^1147^1320^[ADD] j = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  h];^1217^^^^^1147^1320^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1218^^^^^1147^1320^[ADD] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[i] = i  ;^1223^^^^^1147^1320^[REPLACE] runningOrder[j] = vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ (  ( j << 8 )  + ss ) ] |= SETMASK  ;^1230^^^^^1147^1320^[REPLACE] stack[count] = new StackElem (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = h  ;^1236^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^vv = runningOrder[i]  ;^1241^^^^^1147^1320^[REPLACE] ss = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1250^1251^1252^1253^1254^1147^1320^[ADD] for  ( j = 0; j <= 255; j++ )  { sb =  ( ss << 8 )  + j; if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  { int lo = ftab[sb] & CLEARMASK; int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  (ss )   j;^1251^^^^^1147^1320^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted =  (workFactor  1 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1274^^^^^1147^1320^[ADD] bigDone[ss] = true;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 4; j < bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update]  = null ;^1288^^^^^1147^1320^[REPLACE] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  last  4] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 4; j <= 255; j++ )  {^1303^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1304^^^^^1147^1320^[ADD] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1307^1308^1309^1310^1311^1147^1320^[ADD] for  ( j = ftab[ss << 8] & CLEARMASK; j <  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK ) ; j++ )  { c1 = block[zptr[j]]; if  ( !bigDone[c1] )  { zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1309^^^^^1147^1320^[ADD] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v = 0  ;^1316^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ ( j << 8 )   ss] |= SETMASK;^1317^^^^^1147^1320^[REPLACE] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1203^^^^^1147^1320^[REPLACE] int vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int h = 0;^1204^^^^^1147^1320^[REPLACE] int h = 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^1228^^^^^1147^1320^[REPLACE] StackElem[] stack = new StackElem[QSORT_STACK_SIZE];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1229^1230^1231^^^1147^1320^[ADD] for  ( int count = 0; count < QSORT_STACK_SIZE; count++ )  { stack[count] = new StackElem (  ) ; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1254^^^^^1147^1320^[ADD] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1277^^^^^1147^1320^[ADD] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1278^1279^^^^1147^1320^[ADD] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart; int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 0L;^1279^^^^^1147^1320^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[workLimit  j];^1286^^^^^1147^1320^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  >=  shifts ) ;^1287^^^^^1147^1320^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i <= last; i++ )  {^1152^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = v  ;^1153^^^^^1122^1321^[REPLACE] zptr[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = true;^1155^^^^^1122^1321^[REPLACE] firstAttempt = false;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = workLimit = 1;^1156^^^^^1122^1321^[REPLACE] workDone = workLimit = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = workLimit = 4;^1156^^^^^1122^1321^[REPLACE] workDone = workLimit = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  <   ( h - 0 )  )  {^1219^^^^^1122^1321^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^1252^^^^^1122^1321^[REPLACE] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  <  lo )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit ||true )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return;  ;^1259^^^^^1122^1321^[REPLACE] return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted =  ( hi - lo  1 - 4 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true ) {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted =  ( hi - lo  4 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ (  ( j << 8 )  + ss ) ] |= SETMASK  ;^1262^^^^^1122^1321^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  (  ( ftab[ ( sb + 1 ) ] )  &  ( CLEARMASK )  )  - 1  ;^1253^^^^^1122^1321^[REPLACE] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 2] & CLEARMASK )   2;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  <  lo )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^qSort3 ( lo, hi, 2, stack ) ;numQSorted +=  ( hi - lo + 1 ) ;return;^1255^1256^1257^1258^1259^1122^1321^[ADD] if  ( hi > lo )  { qSort3 ( lo, hi, 2, stack ) ; numQSorted +=  ( hi - lo + 1 ) ; if  ( workDone > workLimit && firstAttempt )  { return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1257^^^^^1122^1321^[ADD] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( true )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  != workLimit )  {^1276^^^^^1122^1321^[REPLACE] if  ( i < 255 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unHi  ==  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^quadrant[a2update + last + 1] = qVal;^1289^1290^1291^^^1122^1321^[ADD] if  ( a2update < NUM_OVERSHOOT_BYTES )  { quadrant[a2update + last + 1] = qVal; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  last origPtr] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( zz - 1 )  >> shifts )  <= 65535 )  )  {^1294^^^^^1122^1321^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^1295^^^^^1122^1321^[REPLACE] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1295^^^^^1122^1321^[ADD] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 1; j < bbSize; j++ )  {^1285^^^^^1122^1321^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update]  = null ;^1288^^^^^1122^1321^[REPLACE] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1290^^^^^1122^1321^[ADD] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1277^^^^^1122^1321^[ADD] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] &vec )   bbStart;^1278^^^^^1122^1321^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 0 / 0;^1279^^^^^1122^1321^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[workLimit  j];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  >=  shifts ) ;^1287^^^^^1122^1321^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workFactor  <=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1294^1295^1296^^^1122^1321^[ADD] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  { panic (  ) ; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[c1] )  {^1310^^^^^1122^1321^[REPLACE] if  ( !bigDone[c1] )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1311^1312^^^^1122^1321^[ADD] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1; copy[c1]++;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0L; i <= last; i++ )  {^1152^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = true  ;^1155^^^^^1122^1321^[REPLACE] firstAttempt = false;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = workLimit = 0 * 3;^1156^^^^^1122^1321^[REPLACE] workDone = workLimit = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = workLimit = 0 * 2;^1156^^^^^1122^1321^[REPLACE] workDone = workLimit = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1159^^^^^1122^1321^[ADD] numQSorted = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i <= 255; i++ )  {^1160^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[i] = false  ;^1161^^^^^1122^1321^[REPLACE] bigDone[i] = false;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i <= 65536; i++ )  {^1164^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] = 4;^1165^^^^^1122^1321^[REPLACE] ftab[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[0 - 0];^1168^^^^^1122^1321^[REPLACE] c1 = block[0];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i <= last; i++ )  {^1169^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i  2];^1170^^^^^1122^1321^[REPLACE] c2 = block[i + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  null;^1172^^^^^1122^1321^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1 - 0; i <= 65536; i++ )  {^1175^^^^^1122^1321^[REPLACE] for  ( i = 1; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] += ftab[i  1];^1176^^^^^1122^1321^[REPLACE] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1179^^^^^1122^1321^[ADD] c1 = block[1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1180^1181^1182^1183^1184^1122^1321^[ADD] for  ( i = 0; i < last; i++ )  { c2 = block[i + 2]; j =  ( c1 << 8 )  + c2; c1 = c2; ftab[j]--;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2L = block[i  2L];^1181^^^^^1122^1321^[REPLACE] c2 = block[i + 2];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  ( ss << 8 )  + j  ;^1182^^^^^1122^1321^[REPLACE] j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  workFactor;^1183^^^^^1122^1321^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1185^^^^^1122^1321^[ADD] zptr[ftab[j]] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  (  ( block[last  1] )  << 8 )    ( block[1] ) ;^1188^^^^^1122^1321^[REPLACE] j =  (  ( block[last + 1] )  << 8 )  +  ( block[1] ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[ftab[j]] = i  ;^1190^^^^^1122^1321^[REPLACE] zptr[ftab[j]] = last;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i <= 255; i++ )  {^1198^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = vv  ;^1199^^^^^1122^1321^[REPLACE] runningOrder[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h = 3 * h runLength;^1206^^^^^1122^1321^[REPLACE] h = 3 * h + 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h =unHi  3;^1210^^^^^1122^1321^[REPLACE] h = h / 3;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = 1  ;^1211^^^^^1122^1321^[REPLACE] for  ( i = h; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ss = runningOrder[i]  ;^1212^^^^^1122^1321^[REPLACE] vv = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1213^^^^^1122^1321^[ADD] j = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  h];^1217^^^^^1122^1321^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  h;^1218^^^^^1122^1321^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[i] = i  ;^1223^^^^^1122^1321^[REPLACE] runningOrder[j] = vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ (  ( j << 8 )  + ss ) ] |= SETMASK  ;^1230^^^^^1122^1321^[REPLACE] stack[count] = new StackElem (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 << 1; i <= 255; i++ )  {^1236^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^vv = runningOrder[i]  ;^1241^^^^^1122^1321^[REPLACE] ss = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v = 0  ;^1250^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  (ss )   j;^1251^^^^^1122^1321^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted =  ( hi - lo  1 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bigDone[ss] = false;^1274^^^^^1122^1321^[REPLACE] bigDone[ss] = true;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1285^1286^1287^1288^^1122^1321^[ADD] for  ( j = 0; j < bbSize; j++ )  { int a2update = zptr[bbStart + j]; int qVal =  ( j >> shifts ) ; quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update]  =  quadrant[a2update] ;^1288^^^^^1122^1321^[REPLACE] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  last  4] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 + 0; j <= 255; j++ )  {^1303^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ (  ( j << 8 )  + ss ) ] |= SETMASK  ;^1304^^^^^1122^1321^[REPLACE] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = ftab[ss << 8 - 2] | CLEARMASK;^1307^^^^^1122^1321^[REPLACE] for  ( j = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1309^^^^^1122^1321^[ADD] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  zptr[j] - 1;^1311^^^^^1122^1321^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 3; j <= 255; j++ )  {^1316^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ (j )   ss] |= SETMASK;^1317^^^^^1122^1321^[REPLACE] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1203^^^^^1122^1321^[REPLACE] int vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int h = 2;^1204^^^^^1122^1321^[REPLACE] int h = 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^1228^^^^^1122^1321^[REPLACE] StackElem[] stack = new StackElem[QSORT_STACK_SIZE];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1229^1230^1231^^^1122^1321^[ADD] for  ( int count = 0; count < QSORT_STACK_SIZE; count++ )  { stack[count] = new StackElem (  ) ; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1253^1254^^^^1122^1321^[ADD] int lo = ftab[sb] & CLEARMASK; int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo =  ( ftab[sb] )  &  ( CLEARMASK )  ;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[sp << 8] | CLEARMASK;^1277^^^^^1122^1321^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo =  ( ftab[sb] )  &  ( CLEARMASK )  ;^1278^^^^^1122^1321^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 0 % 0;^1279^^^^^1122^1321^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  j];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1324^^^^^1323^1346^[REPLACE] int i;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int rTPos = 0  ;^1325^^^^^1323^1346^[REPLACE] int rNToGo = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int tmp = 0  ;^1326^^^^^1323^1346^[REPLACE] int rTPos  = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 % 1; i < 256; i++ )  {^1327^^^^^1323^1346^[REPLACE] for  ( i = 0; i < 256; i++ )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[i] = true;^1328^^^^^1323^1346^[REPLACE] inUse[i] = false;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( rNToGo  !=  0 )  {^1332^^^^^1323^1346^[REPLACE] if  ( rNToGo == 0 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( rTPos  ) {^1335^^^^^1323^1346^[REPLACE] if  ( rTPos == 512 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1336^^^^^1323^1346^[ADD] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1333^1334^^^^1323^1346^[ADD] rNToGo =  ( char )  rNums[rTPos]; rTPos++;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ) {^1335^^^^^1323^1346^[REPLACE] if  ( rTPos == 512 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^1335^^^^^1323^1346^[REMOVE] ^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 1;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i <= last; i++ )  {^1331^^^^^1323^1346^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rNToGo =   ( char )  rNums[workLimit];^1333^^^^^1323^1346^[REPLACE] rNToGo =  ( char )  rNums[rTPos];^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 4;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[i + 1] ^ =  1 ;^1340^^^^^1323^1346^[REPLACE] block[i + 1] ^=  (  ( rNToGo == 1 )  ? 1 : 0 ) ;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[i  p4] &= 0xFF;^1342^^^^^1323^1346^[REPLACE] block[i + 1] &= 0xFF;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[block[i  1]] = true;^1344^^^^^1323^1346^[REPLACE] inUse[block[i + 1]] = true;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1349^^^^^1348^1377^[REPLACE] int i;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workFactor  last;^1351^^^^^1348^1377^[REPLACE] workLimit = workFactor * last;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = 1;^1352^^^^^1348^1377^[REPLACE] workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockRandomised = true  ;^1353^^^^^1348^1377^[REPLACE] blockRandomised = false;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = false;^1354^^^^^1348^1377^[REPLACE] firstAttempt = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^1356^^^^^1348^1377^[REPLACE] mainSort (  ) ;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1356^^^^^1348^1377^[ADD] mainSort (  ) ;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^1358^^^^^1348^1377^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1360^1361^^^^1348^1377^[ADD] workLimit = workDone = 0; blockRandomised = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workDone = 0 / 2;^1360^^^^^1348^1377^[REPLACE] workLimit = workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1361^1362^^^^1348^1377^[ADD] blockRandomised = true; firstAttempt = false;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^mainSort (  ) ;^1362^1363^^^^1348^1377^[ADD] firstAttempt = false; mainSort (  ) ;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^blockRandomised = true;^1360^1361^^^^1348^1377^[ADD] workLimit = workDone = 0; blockRandomised = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workDone = 4;^1360^^^^^1348^1377^[REPLACE] workLimit = workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1361^^^^^1348^1377^[ADD] blockRandomised = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = true;^1362^^^^^1348^1377^[REPLACE] firstAttempt = false;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^origPtr = i  ;^1366^^^^^1348^1377^[REPLACE] origPtr = -1;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  length[i] == n  )   {  ;^1368^^^^^1348^1377^[REPLACE] if  ( zptr[i] == 0 )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^origPtr = -1  ;^1369^^^^^1348^1377^[REPLACE] origPtr = i;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i <= last; i++ )  {^1367^^^^^1348^1377^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ||  -1 )  {^1374^^^^^1348^1377^[REPLACE] if  ( origPtr == -1 )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allocateCompressStructures (  )  ;^1375^^^^^1348^1377^[REPLACE] panic (  ) ;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1380^^^^^1379^1501^[REPLACE] int k;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1381^1382^^^^1379^1501^[ADD] char c1, c2; int s1, s2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char tmp2  ;^1381^^^^^1379^1501^[REPLACE] char c1, c2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n1  ;^1382^^^^^1379^1501^[REPLACE] int s1, s2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1382^^^^^1379^1501^[ADD] int s1, s2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cs1 = block[i1  1];^1384^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  1];^1385^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1386^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return  ( c1 > c2 ) ;^1386^1387^1388^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1387^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[ ( i2 + 1 ) ]  ;^1392^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1393^^^^^1379^1501^[ADD] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1394^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  !=  c2 ) ;;^1395^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1395^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[ ( i2 + 1 ) ]  ;^1400^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[ ( i1 + 1 ) ]  ;^1401^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  s1 != s2  )   {  ;^1402^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return  ( c1 > c2 ) ;^1402^1403^1404^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  !=  c2 ) ;;^1403^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1403^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1408^1409^^^^1379^1501^[ADD] c1 = block[i1 + 1]; c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  1];^1409^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1410^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1411^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1411^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cs1L = block[i1L  1L];^1416^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[ ( i1 + 1 ) ]  ;^1417^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1418^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true ;^1419^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1419^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[ ( i2 + 1 ) ]  ;^1424^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[ ( i1 + 1 ) ]  ;^1425^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  s1 != s2  )   {  ;^1426^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1427^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k = last  1;^1432^^^^^1379^1501^[REPLACE] k = last + 1;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1437^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1437^1438^1439^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  !=  c2 ) ;;^1438^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (ss  ==  ss )  {^1442^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return  ( s1 > s2 ) ;^1442^1443^1444^^^1379^1501^[ADD] if  ( s1 != s2 )  { return  ( s1 > s2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( s1  ;^1443^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  s1 != s2  )   {  ;^1450^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1450^1451^1452^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true ;^1451^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( s1  ==  s2 )  {^1455^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  (ss  ;^1456^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1463^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1464^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  c1 != c2  )   {  ;^1468^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1469^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c1 )  {^1476^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1477^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if   (  c1 != c2  )   {  ;^1481^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( s1  ;^1482^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i1  ==  last )  {^1487^^^^^1379^1501^[REPLACE] if  ( i1 > last )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^i1 -= last;i1--;^1487^1488^1489^1490^^1379^1501^[ADD] if  ( i1 > last )  { i1 -= last; i1--; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1488^1489^^^^1379^1501^[ADD] i1 -= last; i1--;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  >=  last )  {^1491^^^^^1379^1501^[REPLACE] if  ( i2 > last )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i1 -= last  ;^1492^^^^^1379^1501^[REPLACE] i2 -= last;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1435^1436^^^^1379^1501^[ADD] c1 = block[i1 + 1]; c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[ ( i1 + 1 ) ]  ;^1436^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]  ;^1440^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]  ;^1441^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[ ( i2 + 1 ) ]  ;^1448^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1449^^^^^1379^1501^[ADD] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]  ;^1453^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]  ;^1454^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[i1  1];^1461^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[ ( i1 + 1 ) ]  ;^1462^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]  ;^1466^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]  ;^1467^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1L = block[i1L workLimit];^1474^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1475^^^^^1379^1501^[ADD] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]  ;^1479^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]  ;^1480^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1492^^^^^1379^1501^[ADD] i2 -= last;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k = i  ;^1496^^^^^1379^1501^[REPLACE] k -= 4;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1438^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1451^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1464^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( s1  ;^1469^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true ;^1477^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true ;^1482^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true;^1500^^^^^1379^1501^[REPLACE] return false;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n = baseBlockSize  blockSize100k;^1514^^^^^1513^1540^[REPLACE] int n = baseBlockSize * blockSize100k;^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block = new char[ ( n  1  NUM_OVERSHOOT_BYTES ) ];^1515^^^^^1513^1540^[REPLACE] block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant =workDoneew int[ ( n  NUM_OVERSHOOT_BYTES ) ];^1516^^^^^1513^1540^[REPLACE] quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr =  workDoneew iworkDonet[workDone];^1517^^^^^1513^1540^[REPLACE] zptr = new int[n];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab = new int[65537L];^1518^^^^^1513^1540^[REPLACE] ftab = new int[65537];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( block != true ) {^1520^1521^^^^1513^1540^[REPLACE] if  ( block == null || quadrant == null || zptr == null || ftab == null )  {^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1520^1521^^^1524^1513^1540^[ADD] if  ( block == null || quadrant == null || zptr == null || ftab == null )  { }^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^szptr = new short[2  n];^1539^^^^^1513^1540^[REPLACE] szptr = new short[2 * n];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char[] yy = new char[108];^1543^^^^^1542^1638^[REPLACE] char[] yy = new char[256];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1544^^^^^1542^1638^[ADD] int  i, j;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int n1  ;^1544^^^^^1542^1638^[REPLACE] int  i, j;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^char tmp2  ;^1545^^^^^1542^1638^[REPLACE] char tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1546^1547^^^^1542^1638^[ADD] char tmp2; int zPend;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int med  ;^1547^^^^^1542^1638^[REPLACE] int zPend;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int n1  ;^1548^^^^^1542^1638^[REPLACE] int wr;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1549^^^^^1542^1638^[ADD] int EOB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^allocateCompressStructures (  )  ;^1551^^^^^1542^1638^[REPLACE] makeMaps (  ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^EOB = nInUse  1;^1552^^^^^1542^1638^[REPLACE] EOB = nInUse + 1;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 2; i <= EOB; i++ )  {^1554^^^^^1542^1638^[REPLACE] for  ( i = 0; i <= EOB; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^mtfFreq[i] = 2;^1555^^^^^1542^1638^[REPLACE] mtfFreq[i] = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^wr = 2;^1558^^^^^1542^1638^[REPLACE] wr = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 4;^1559^^^^^1542^1638^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 4; i < nInUse; i++ )  {^1560^^^^^1542^1638^[REPLACE] for  ( i = 0; i < nInUse; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^pos[i] =  (  ( char )   ( i )  )  ;^1561^^^^^1542^1638^[REPLACE] yy[i] =  ( char )  i;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( j  !=  0 )  {^1580^^^^^1542^1638^[REPLACE] if  ( j == 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  <=  0 )  {^1583^^^^^1580^1608^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  !=  2 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  (  ( short )   ( EOB )  )  ;^1588^^^^^1580^1608^[REPLACE] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  (  ( short )   ( EOB )  )  ;^1593^^^^^1580^1608^[REPLACE] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zz )   2;^1601^^^^^1580^1608^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 0 + 1;^1603^^^^^1580^1608^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  >  2 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^break;^1598^1599^1600^^^1580^1608^[ADD] if  ( zPend < 2 )  { break; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1588^1589^^^^1580^1608^[ADD] szptr[wr] =  ( short )  RUNA; wr++;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1593^1594^^^^1580^1608^[ADD] szptr[wr] =  ( short )  RUNB; wr++;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  (zz )   0;^1601^^^^^1580^1608^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1603^^^^^1580^1608^[ADD] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )   ( j  3 ) ;^1605^^^^^1580^1608^[REPLACE] szptr[wr] =  ( short )   ( j + 1 ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  >=  4 )  {^1583^^^^^1542^1638^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^zPend--;^1583^1584^1585^1586^1587^1542^1638^[ADD] if  ( zPend > 0 )  { zPend--; while  ( true )  { switch  ( zPend % 2 )  { case 0:^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  !=  2 )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1588^^^^^1542^1638^[ADD] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1593^^^^^1542^1638^[ADD] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  (zz )   2;^1601^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 0 + 0;^1603^^^^^1542^1638^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  >= zz )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1598^1599^1600^^^1542^1638^[ADD] if  ( zPend < 2 )  { break; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 1; i <= last; i++ )  {^1565^^^^^1542^1638^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1568^^^^^1542^1638^[ADD] ll_i = unseqToSeq[block[zptr[i]]];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^j = 3;^1570^^^^^1542^1638^[REPLACE] j = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^tmp = pos[j]  ;^1571^^^^^1542^1638^[REPLACE] tmp = yy[j];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^tmp2 =  null;^1574^^^^^1542^1638^[REPLACE] tmp2 = tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^tmp = pos[j]  ;^1575^^^^^1542^1638^[REPLACE] tmp = yy[j];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1576^^^^^1542^1638^[ADD] yy[j] = tmp2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^yy[0 >>> 0] = tmp;^1578^^^^^1542^1638^[REPLACE] yy[0] = tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  (  ( short )   ( EOB )  )  ;^1588^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  (  ( short )   ( EOB )  )  ;^1593^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 1;^1603^^^^^1542^1638^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )   ( j  1 ) ;^1605^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )   ( j + 1 ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int[] fave = new int[N_GROUPS]  ;^1566^^^^^1542^1638^[REPLACE] char ll_i;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if   (  zPend < 2  )   {  ;^1611^^^^^1542^1638^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zz  == zz )  {^1626^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^wr++;^1616^1617^^^^1542^1638^[ADD] szptr[wr] =  ( short )  RUNA; wr++;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  (  ( short )   ( EOB )  )  ;^1621^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zPend - 2 )   2;^1629^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zz  !=  2 )  {^1626^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1629^^^^^1542^1638^[ADD] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1633^^^^^1542^1638^[ADD] szptr[wr] =  ( short )  EOB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1637^^^^^1542^1638^[ADD] nMTF = wr;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
