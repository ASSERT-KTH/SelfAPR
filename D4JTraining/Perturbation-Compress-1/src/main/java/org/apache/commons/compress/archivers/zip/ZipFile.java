[REPLACE]^private static final int HASH_SIZE = 309;^62^^^^^^^[REPLACE] private static final int HASH_SIZE = 509;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static   short  SHORT     =   2 + 1;^63^^^^^^^[REPLACE] private static final int SHORT     =   2;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int WORD      ;^64^^^^^^^[REPLACE] private static final int WORD      =   4;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int NIBLET_MASK ;^65^^^^^^^[REPLACE] private static final int NIBLET_MASK = 0x0f;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int BYTE_SHIFT ;^66^^^^^^^[REPLACE] private static final int BYTE_SHIFT = 8;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_0 ;^67^^^^^^^[REPLACE] private static final int POS_0 = 0;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_1 ;^68^^^^^^^[REPLACE] private static final int POS_1 = 1;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_2 ;^69^^^^^^^[REPLACE] private static final int POS_2 = 2;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_3  = null ;^70^^^^^^^[REPLACE] private static final int POS_3 = 3;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private final Map entries  = null ;^76^^^^^^^[REPLACE] private final Map entries = new HashMap ( HASH_SIZE ) ;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private final Map nameMap  = null ;^81^^^^^^^[REPLACE] private final Map nameMap = new HashMap ( HASH_SIZE ) ;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private long headerOffset = -1 >>> 3;^84^^^^^^^[REPLACE] private long headerOffset = -1;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private long dataOffset  = null ;^85^^^^^^^[REPLACE] private long dataOffset = -1;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  boolean useUnicodeExtraFields;^110^^^^^^^[REPLACE] private final boolean useUnicodeExtraFields;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  final int CFH_LEN =^276^277^278^279^^276^292^[REPLACE] private static final int CFH_LEN =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int MIN_EOCD_SIZE ;^407^408^409^410^^407^420^[REPLACE] private static final int MIN_EOCD_SIZE =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int MAX_EOCD_SIZE  = null ;^422^423^424^425^^422^423^[REPLACE] private static final int MAX_EOCD_SIZE = MIN_EOCD_SIZE   private static final int CFD_LOCATOR_OFFSET =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static  int CFD_LOCATOR_OFFSET =^425^426^427^428^^425^434^[REPLACE] private static final int CFD_LOCATOR_OFFSET =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final  short  LFH_OFFSET_FOR_FILENAME_LENGTH =^481^482^483^484^^481^490^[REPLACE] private static final long LFH_OFFSET_FOR_FILENAME_LENGTH =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  short  remaining;^619^^^^^^^[REPLACE] private long remaining;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  short  loc;^620^^^^^^^[REPLACE] private long loc;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private boolean addDummyByte ;^621^^^^^^^[REPLACE] private boolean addDummyByte = false;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  byte[] name;^681^^^^^^^[REPLACE] private final byte[] name;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  byte[] comment;^682^^^^^^^[REPLACE] private final byte[] comment;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^this.encoding =  name;^176^^^^^175^194^[REPLACE] this.encoding = encoding;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this.zipEncoding =  ZipEncodingHelper.getZipEncoding ( null ) ;^177^^^^^175^194^[REPLACE] this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this.useUnicodeExtraFields =  success;^178^^^^^175^194^[REPLACE] this.useUnicodeExtraFields = useUnicodeExtraFields;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^archive =  new RandomAccessFile ( null, "r" ) ;^179^^^^^175^194^[REPLACE] archive = new RandomAccessFile ( f, "r" ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^boolean success = true;^180^^^^^175^194^[REPLACE] boolean success = false;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^if  ( !useUnicodeExtraFields )  {^186^^^^^175^194^[REPLACE] if  ( !success )  {^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^archive.close (  ) ;^187^188^189^^191^175^194^[ADD] try { archive.close (  ) ; } catch  ( IOException e2 )  { }^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^zipfile.close (  )  ;^188^^^^^175^194^[REPLACE] archive.close (  ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REMOVE]^archive.readFully ( cdExtraData )  ;^188^^^^^175^194^[REMOVE] ^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;resolveLocalFileHeaderData ( entriesWithoutEFS ) ;success = true;^181^182^183^184^185^175^194^[ADD] try { Map entriesWithoutEFS = populateFromCentralDirectory (  ) ; resolveLocalFileHeaderData ( entriesWithoutEFS ) ; success = true; } finally {^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^success = false;^184^^^^^175^194^[REPLACE] success = true;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^int skipped = archive.skipBytes ( lenToSkip )  ;^182^^^^^175^194^[REPLACE] Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^archive.read (  ) ;^188^^^^^175^194^[REPLACE] archive.close (  ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^^184^^^^^175^194^[ADD] success = true;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  )  ;^257^^^^^256^274^[REPLACE] OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^if  ( offsetEntry != null )  {^258^^^^^256^274^[REPLACE] if  ( offsetEntry == null )  {^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[ADD]^return null;^258^259^260^^^256^274^[ADD] if  ( offsetEntry == null )  { return null; }^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return false;^259^^^^^256^274^[REPLACE] return null;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^long offset = offsetEntry.headerOffset  ;^261^^^^^256^274^[REPLACE] long start = offsetEntry.dataOffset;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[ADD]^^262^263^^^^256^274^[ADD] BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return bis;  ;^266^^^^^256^274^[REPLACE] return bis;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return new InflaterInputStream ( bis, new Inflater ( false )  ) ;^269^^^^^256^274^[REPLACE] return new InflaterInputStream ( bis, new Inflater ( true )  ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return ;^271^272^^^^256^274^[REPLACE] throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[ADD]^^308^^^^^307^405^[ADD] HashMap noEFS = new HashMap (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^populateFromCentralDirectory (  )  ;^310^^^^^307^405^[REPLACE] positionAtCentralDirectory (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^312^^^^^307^405^[ADD] byte[] cfh = new byte[CFH_LEN];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^byte[] cfdOffset = new WORD]  ;^314^^^^^307^405^[REPLACE] byte[] signatureBytes = new byte[WORD];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^archive.readFully ( cdExtraData )  ;^315^^^^^307^405^[REPLACE] archive.readFully ( signatureBytes ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^long sig = ZipLong.getValue ( name ) ;^316^^^^^307^405^[REPLACE] long sig = ZipLong.getValue ( signatureBytes ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^long sig = getValue ( signatureBytes )  ;^317^^^^^307^405^[REPLACE] final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^if  (  startsWithLocalFileHeader (  )  )  {^318^^^^^307^405^[REPLACE] if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^return ;^319^320^^^^307^405^[REPLACE] throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^if  ( hasEFS ) {^400^^^^^307^405^[REPLACE] if  ( !hasEFS && useUnicodeExtraFields )  {^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^noEFS.put ( ze, new NameAndComment ( signatureBytes, comment )  ) ;^401^^^^^307^405^[REPLACE] noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD  ;^328^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD  ;^331^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD  ;^339^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^342^^^^^307^405^[ADD] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^349^^^^^307^405^[ADD] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT  ;^352^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT  ;^355^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT  ;^358^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^361^^^^^307^405^[ADD] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD  ;^364^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^367^^^^^307^405^[ADD] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^369^^^^^307^405^[ADD] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD  ;^372^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^375^^^^^307^405^[ADD] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^offset.headerOffset =  ZipLong.getValue ( cfh, off ) ;^383^^^^^307^405^[REPLACE] offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^sig =  ZipLong.getValue ( name ) ;^398^^^^^307^405^[REPLACE] sig = ZipLong.getValue ( signatureBytes ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^324^325^^^^307^405^[ADD] int off = 0; ZipArchiveEntry ze = new ZipArchiveEntry (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^325^^^^^307^405^[ADD] ZipArchiveEntry ze = new ZipArchiveEntry (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^327^^^^^307^405^[ADD] int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final int generalPurposeFlag = ZipShort.getValue ( comment, off ) ;^333^^^^^307^405^[REPLACE] final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final boolean hasEFS = ( commentLen & ZipArchiveOutputStream.EFS_FLAG )   ==  0;^334^335^^^^307^405^[REPLACE] final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^336^337^^^^307^405^[ADD] final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, SHORT )  ) ;^347^^^^^307^405^[REPLACE] long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int fileNameLen = ZipShort.getValue ( comment, off ) ;^360^^^^^307^405^[REPLACE] int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^363^^^^^307^405^[ADD] int extraLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int fileNameLen = getValue ( b )  ;^366^^^^^307^405^[REPLACE] int commentLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int skipped = archive.skipBytes ( lenToSkip )  ;^377^^^^^307^405^[REPLACE] byte[] fileName = new byte[fileNameLen];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  )  ;^382^^^^^307^405^[REPLACE] OffsetEntry offset = new OffsetEntry (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^389^^^^^307^405^[ADD] byte[] cdExtraData = new byte[extraLen];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^393^394^^^^307^405^[ADD] byte[] comment = new byte[commentLen]; archive.readFully ( comment ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^return noEFS;  ;^404^^^^^307^405^[REPLACE] return noEFS;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^boolean success = false  ;^443^^^^^442^475^[REPLACE] boolean found = false;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^long off = archive .seek ( remaining )   - 2 - MIN_EOCD_SIZE;^444^^^^^442^475^[REPLACE] long off = archive.length (  )  - MIN_EOCD_SIZE;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^long stopSearching = Math.max ( 0L, archive .seek ( headerOffset )   *  2 - MAX_EOCD_SIZE ) ;^445^^^^^442^475^[REPLACE] long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( off  !=  0 )  {^446^^^^^442^475^[REPLACE] if  ( off >= 0 )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  !=  sig[POS_0] )  {^451^^^^^442^475^[REPLACE] if  ( curr == sig[POS_0] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if   (  curr == sig[POS_3]  )   {  ;^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^curr = archive.read (  ) ;curr = archive.read (  ) ;^453^454^455^456^^442^475^[ADD] if  ( curr == sig[POS_1] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ||  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  !=  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^found = false;^458^^^^^442^475^[REPLACE] found = true;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  = null ;^456^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^458^459^^^^442^475^[ADD] found = true; break;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  &&  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  =  curr ;^454^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  =  curr ;^456^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  !=  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^curr = archive.read (  ) ;found = true;break;^455^456^457^458^459^442^475^[ADD] if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_3] )  { found = true; break;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ||  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr ;^456^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if   (  curr == sig[POS_2]  )   {  ;^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^452^^^^^442^475^[ADD] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  = null ;^454^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^456^^^^^442^475^[ADD] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ||  sig[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ||  signatureBytes[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^455^456^457^458^459^442^475^[ADD] if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_3] )  { found = true; break;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (   sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr ;^454^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  !=  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ) {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^458^^^^^442^475^[ADD] found = true;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  ||  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  =  curr ;^465^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.skipBytes ( lenToSkip )  ;^448^^^^^442^475^[REPLACE] byte[] sig = ZipArchiveOutputStream.EOCD_SIG;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^int curr = archive .read (  )  ;^449^^^^^442^475^[REPLACE] int curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  sig[POS_0] )  {^451^^^^^442^475^[REPLACE] if  ( curr == sig[POS_0] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  ||  signatureBytes[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ) {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^457^458^459^460^^442^475^[ADD] if  ( curr == sig[POS_3] )  { found = true; break; }^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if   (  curr == sig[POS_3]  )   {  ;^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  = null ;^452^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  ) {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  &&  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  &&  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^found = true;break;^457^458^459^460^^442^475^[ADD] if  ( curr == sig[POS_3] )  { found = true; break; }^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr ;^452^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^int curr = archive.length (  ) ;^449^^^^^442^475^[REPLACE] int curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( !useUnicodeExtraFields )  {^468^^^^^442^475^[REPLACE] if  ( !found )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^return ;^469^^^^^442^475^[REPLACE] throw new ZipException  (" ")  ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.seek ( off  CFD_LOCATOR_OFFSET ) ;^471^^^^^442^475^[REPLACE] archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^471^472^^^^442^475^[ADD] archive.seek ( off + CFD_LOCATOR_OFFSET ) ; byte[] cfdOffset = new byte[WORD];^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^byte[] cfh = new CFH_LEN]  ;^472^^^^^442^475^[REPLACE] byte[] cfdOffset = new byte[WORD];^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.readFully ( signatureBytes ) ;^473^^^^^442^475^[REPLACE] archive.readFully ( cfdOffset ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^473^474^^^^442^475^[ADD] archive.readFully ( cfdOffset ) ; archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.seek ( ZipLong.getValue ( signatureBytes )  ) ;^474^^^^^442^475^[REPLACE] archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^getValue ( b )  ;^474^^^^^442^475^[REPLACE] archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.skipBytes ( lenToSkip )  ;^501^^^^^500^537^[REPLACE] Enumeration e = getEntries (  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( skipped  ==  0 )  {^515^^^^^500^537^[REPLACE] if  ( skipped <= 0 )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^return ;^516^517^^^^500^537^[REPLACE] throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if   (  zipfile != null  )   {  ;^531^^^^^500^537^[REPLACE] if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) nameMap.get ( ze )  ) ;^532^533^534^^^500^537^[REPLACE] setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^entriesWithoutEFS.keySet ( ze )  ) ;^534^^^^^500^537^[REPLACE] entriesWithoutEFS.get ( ze )  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^lenToSkip -=  versionMadeBy;^519^^^^^500^537^[REPLACE] lenToSkip -= skipped;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^offsetEntry.dataOffset = offset  LFH_OFFSET_FOR_FILENAME_LENGTH  SHORT  SHORT  fileNameLen  extraFieldLen;^528^529^^^^500^537^[REPLACE] offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.hasMoreElements (  ) ;^503^^^^^500^537^[REPLACE] ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  )  ;^504^^^^^500^537^[REPLACE] OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^long start = offsetEntry.dataOffset  ;^505^^^^^500^537^[REPLACE] long offset = offsetEntry.headerOffset;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^byte[] cfdOffset = new WORD]  ;^507^^^^^500^537^[REPLACE] byte[] b = new byte[SHORT];^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int fileNameLen = ZipShort.getValue ( signatureBytes ) ;^509^^^^^500^537^[REPLACE] int fileNameLen = ZipShort.getValue ( b ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int extraFieldLen = ZipShort.getValue ( signatureBytes ) ;^511^^^^^500^537^[REPLACE] int extraFieldLen = ZipShort.getValue ( b ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int lenToSkip = versionMadeBy;^512^^^^^500^537^[REPLACE] int lenToSkip = fileNameLen;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.seek ( commentLen ) ;^514^^^^^500^537^[REPLACE] int skipped = archive.skipBytes ( lenToSkip ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^byte[] cdExtraData = new byte[extraLen]  ;^521^^^^^500^537^[REPLACE] byte[] localExtraData = new byte[extraFieldLen];^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^516^517^^^^500^537^[ADD] throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze .setExtra ( start )  ;^562^563^^^^561^581^[REPLACE] UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^564^565^^^^561^581^[ADD] String originalName = ze.getName (  ) ; String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment )  ;^565^^^^^561^581^[REPLACE] String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (  !originalName.equals ( newName )  )  {^566^^^^^561^581^[REPLACE] if  ( newName != null && !originalName.equals ( newName )  )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^ze.setComment ( newName ) ;^567^^^^^561^581^[REPLACE] ze.setName ( newName ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REMOVE]^ze.setExtra ( localExtraData )  ;^567^^^^^561^581^[REMOVE] ^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^nameMap.remove ( newName ) ;^568^^^^^561^581^[REPLACE] nameMap.remove ( originalName ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^nameMap .get ( true )  ;^569^^^^^561^581^[REPLACE] nameMap.put ( newName, ze ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( nc.comment != true ) {^572^^^^^561^581^[REPLACE] if  ( nc.comment != null && nc.comment.length > 0 )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (originalName == true )  {^577^^^^^561^581^[REPLACE] if  ( newComment != null )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^ze.setName ( newComment ) ;^578^^^^^561^581^[REPLACE] ze.setComment ( newComment ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^578^^^^^561^581^[ADD] ze.setComment ( newComment ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getMethod ( UnicodeCommentExtraField.UCOM_ID ) ;^573^574^^^^561^581^[REPLACE] UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( newComment == true )  {^577^^^^^561^581^[REPLACE] if  ( newComment != null )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^ze.setComment ( newName ) ;^578^^^^^561^581^[REPLACE] ze.setComment ( newComment ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( f == this  )  {^592^^^^^591^611^[REPLACE] if  ( f != null )  {^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^CRC32 crc32 = new CRC32 (  ) ;crc32.update ( orig ) ;long origCRC32 = crc32.getValue (  ) ;^592^593^594^595^^591^611^[ADD] if  ( f != null )  { CRC32 crc32 = new CRC32 (  ) ; crc32.update ( orig ) ; long origCRC32 = crc32.getValue (  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( origCRC32  ||  f.getNameCRC32 (  )  )  {^597^^^^^591^611^[REPLACE] if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^.UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^598^599^600^601^602^591^611^[ADD] try { return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ; } catch  ( IOException ex )  {^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return ZipEncodingHelper decode  (  f.getUnicodeName  (    )    )  ;  ;^599^600^^^^591^611^[REPLACE] return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getNameCRC32 (  )  ) ;^599^600^^^^591^611^[REPLACE] return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return true;^606^^^^^591^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return null;  ;^606^^^^^591^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.skipBytes ( lenToSkip )  ;^593^^^^^591^611^[REPLACE] CRC32 crc32 = new CRC32 (  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^long origCRC32 = crc32 .getValue ( comment )  ;^595^^^^^591^611^[REPLACE] long origCRC32 = crc32.getValue (  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return this;^606^^^^^591^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return false;^606^^^^^591^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.skipBytes ( lenToSkip )  ;^595^^^^^591^611^[REPLACE] long origCRC32 = crc32.getValue (  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return false;^610^^^^^591^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( remaining  !=  0 )  {^643^^^^^642^669^[REPLACE] if  ( remaining <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^643^644^645^646^647^642^669^[ADD] if  ( remaining <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if   (  zipfile != null  )   {  ;^644^^^^^642^669^[REPLACE] if  ( addDummyByte )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^addDummyByte = true;^645^^^^^642^669^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^b[off] = 0 * 1;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 3;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^b[off] = 1;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 1;  ;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return -2;^649^^^^^642^669^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 4;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^addDummyByte = true  ;^645^^^^^642^669^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^646^647^^^^642^669^[ADD] b[off] = 0; return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( len  >=  0 )  {^652^^^^^642^669^[REPLACE] if  ( len <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 3;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 0 * 3;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( skipped  <=  remaining )  {^656^^^^^642^669^[REPLACE] if  ( len > remaining )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^len =  ( int )  remaining;^656^657^658^^^642^669^[ADD] if  ( len > remaining )  { len =  ( int )  remaining; }^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^len ;^657^^^^^642^669^[REPLACE] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^657^^^^^642^669^[ADD] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^659^^^^^642^669^[ADD] int ret = -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^ret =  archive.read ( signatureBytes, off, len ) ;^662^^^^^642^669^[REPLACE] ret = archive.read ( b, off, len ) ;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( ret  !=  4 )  {^664^^^^^642^669^[REPLACE] if  ( ret > 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^loc +=  versionMadeBy;^665^^^^^642^669^[REPLACE] loc += ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^666^^^^^642^669^[ADD] remaining -= ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^665^^^^^642^669^[ADD] loc += ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^remaining -=  versionMadeBy;^666^^^^^642^669^[REPLACE] remaining -= ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return true;  ;^668^^^^^642^669^[REPLACE] return ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^private long headerOffset ;^84^^^^^^^[REPLACE] private long headerOffset = -1;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] OffsetEntry   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^private long dataOffset  = null ;^85^^^^^^^[REPLACE] private long dataOffset = -1;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] OffsetEntry   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^private boolean addDummyByte  = null ;^621^^^^^^^[REPLACE] private boolean addDummyByte = false;^[METHOD] <init> [TYPE] ZipFile$OffsetEntry() [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long dataOffset  headerOffset  [TYPE]  boolean false  true 
[REPLACE]^if  ( remaining  >  4 )  {^643^^^^^642^669^[REPLACE] if  ( remaining <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^643^644^645^646^647^642^669^[ADD] if  ( remaining <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if   (  remaining-- <= 0  )   {  ;^644^^^^^642^669^[REPLACE] if  ( addDummyByte )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^addDummyByte = true;^645^^^^^642^669^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^b[off] = 0 / 2;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 4;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^b[off] = 3;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 1;  ;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 1;  ;^649^^^^^642^669^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^addDummyByte = false;b[off] = 0;return 1;^644^645^646^647^648^642^669^[ADD] if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^b[off] = 0 << 2;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 2;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^addDummyByte = true  ;^645^^^^^642^669^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^646^647^^^^642^669^[ADD] b[off] = 0; return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 1 >>> 3;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return -1 >> 2;^649^^^^^642^669^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if  ( ret  !=  0 + 0 )  {^652^^^^^642^669^[REPLACE] if  ( len <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 4;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 0 + 3;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if  (ret  <=  remaining )  {^656^^^^^642^669^[REPLACE] if  ( len > remaining )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^657^^^^^642^669^[ADD] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^len  = null ;^657^^^^^642^669^[REPLACE] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^659^^^^^642^669^[ADD] int ret = -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^662^^^^^642^669^[ADD] ret = archive.read ( b, off, len ) ;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if  ( ret  !=  2 )  {^664^^^^^642^669^[REPLACE] if  ( ret > 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^664^665^666^667^^642^669^[ADD] if  ( ret > 0 )  { loc += ret; remaining -= ret; }^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^loc +=  len;^665^^^^^642^669^[REPLACE] loc += ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^remaining -=  len;^666^^^^^642^669^[REPLACE] remaining -= ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return len;^668^^^^^642^669^[REPLACE] return ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
