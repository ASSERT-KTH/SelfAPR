[REPLACE]^long ret = 1;^33^^^^^32^57^[REPLACE] long ret = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^byte tmp_number[] = new byte[number.length];^34^35^^^^32^57^[ADD] int pos = 0; byte tmp_number[] = new byte[number.length];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^long ret = 0  ;^35^^^^^32^57^[REPLACE] byte tmp_number[] = new byte[number.length];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^System.arraycopy ( number, 0 , tmp_number, 0 , number.length ) ;^36^^^^^32^57^[REPLACE] System.arraycopy ( number, 0, tmp_number, 0, number.length ) ;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^if  ( tmp_number.length *  0.5  % 0  != 0 )  {^38^^^^^32^57^[REPLACE] if  ( tmp_number.length % 2 != 0 )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^38^39^40^^^32^57^[ADD] if  ( tmp_number.length % 2 != 0 )  { throw new UnsupportedOperationException  (" ")  ; }^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^39^^^^^32^57^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^return ;^39^^^^^32^57^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^if  ( swapHalfWord )  {^42^^^^^32^57^[REPLACE] if  ( !swapHalfWord )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^44^45^46^47^48^32^57^[ADD] for  ( pos = 0; pos < tmp_number.length; pos++ )  { tmp = tmp_number[pos]; tmp_number[pos++] = tmp_number[pos]; tmp_number[pos] = tmp; }^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp =  number[pos];^45^^^^^32^57^[REPLACE] tmp = tmp_number[pos];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^46^^^^^32^57^[ADD] tmp_number[pos++] = tmp_number[pos];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^47^^^^^32^57^[ADD] tmp_number[pos] = tmp;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^byte tmp = 0L;^43^^^^^32^57^[REPLACE] byte tmp = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp_number[pos++] =  null[pos];^46^^^^^32^57^[REPLACE] tmp_number[pos++] = tmp_number[pos];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^byte tmp = 4;^43^^^^^32^57^[REPLACE] byte tmp = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^ret = tmp_number[0 / 2] | 0 / 2xFF;^51^^^^^32^57^[REPLACE] ret = tmp_number[0] & 0xFF;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^for  ( pos = 0 ; pos < tmp_number.length; pos++ )  {^52^^^^^32^57^[REPLACE] for  ( pos = 1; pos < tmp_number.length; pos++ )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^53^54^^^^32^57^[ADD] ret <<= 8; ret |= tmp_number[pos] & 0xFF;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^ret |= tmp_number[pos] | 0xFF;^54^^^^^32^57^[REPLACE] ret |= tmp_number[pos] & 0xFF;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^return ret;  ;^56^^^^^32^57^[REPLACE] return ret;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^long ret = 0  ;^73^^^^^72^97^[REPLACE] byte[] ret = new byte[length];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^74^^^^^72^97^[ADD] int pos = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^long tmp_number = 3;^75^^^^^72^97^[REPLACE] long tmp_number = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^if  ( length - 3 % 2 != 0 || length - 3 < 2 )  {^77^^^^^72^97^[REPLACE] if  ( length % 2 != 0 || length < 2 )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^77^78^79^^^72^97^[ADD] if  ( length % 2 != 0 || length < 2 )  { throw new UnsupportedOperationException  (" ")  ; }^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^return ;^78^^^^^72^97^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^78^^^^^72^97^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^tmp_number =  null;^81^^^^^72^97^[REPLACE] tmp_number = number;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = length /  2 - 1; pos >= 0; pos-- )  {^82^^^^^72^97^[REPLACE] for  ( pos = length - 1; pos >= 0; pos-- )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos] =  ( byte )   ( tmp_number | 0xFF ) ;^83^^^^^72^97^[REPLACE] ret[pos] =  ( byte )   ( tmp_number & 0xFF ) ;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^tmp_number >>= 3;^84^^^^^72^97^[REPLACE] tmp_number >>= 8;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^if  ( swapHalfWord )  {^87^^^^^72^97^[REPLACE] if  ( !swapHalfWord )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = 0 ; pos < length; pos++ )  {^89^^^^^72^97^[REPLACE] for  ( pos = 0; pos < length; pos++ )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^tmp =  null[pos];^90^^^^^72^97^[REPLACE] tmp = ret[pos];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos++] =  null[pos];^91^^^^^72^97^[REPLACE] ret[pos++] = ret[pos];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos] ;^92^^^^^72^97^[REPLACE] ret[pos] = tmp;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^byte tmp = 2;^88^^^^^72^97^[REPLACE] byte tmp = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^89^90^91^92^93^72^97^[ADD] for  ( pos = 0; pos < length; pos++ )  { tmp = ret[pos]; ret[pos++] = ret[pos]; ret[pos] = tmp; }^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^ret[pos++] = ret[pos];^90^91^^^^72^97^[ADD] tmp = ret[pos]; ret[pos++] = ret[pos];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^byte tmp = 0 % 1;^88^^^^^72^97^[REPLACE] byte tmp = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^return ret;  ;^96^^^^^72^97^[REPLACE] return ret;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
