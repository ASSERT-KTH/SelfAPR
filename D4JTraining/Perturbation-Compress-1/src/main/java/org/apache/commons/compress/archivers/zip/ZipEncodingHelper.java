[REPLACE]^private static  Map simpleEncodings;^65^^^^^^^[REPLACE] private static final Map simpleEncodings;^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^private static final byte[] HEX_DIGITS ;^163^164^^^^163^167^[REPLACE] private static final byte[] HEX_DIGITS = new byte [] {^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^static final String UTF8 ;^191^^^^^^^[REPLACE] static final String UTF8 = "UTF8";^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^static final ZipEncoding UTF8_ZIP_ENCODING  = null ;^196^^^^^^^[REPLACE] static final ZipEncoding UTF8_ZIP_ENCODING = new FallbackZipEncoding ( UTF8 ) ;^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^if   (  name == null  )   {  ;^208^^^^^205^231^[REPLACE] if  ( isUTF8 ( name )  )  {^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return on;  ;^209^^^^^205^231^[REPLACE] return UTF8_ZIP_ENCODING;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^if  ( name != null )  {^212^^^^^205^231^[REPLACE] if  ( name == null )  {^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[ADD]^return new FallbackZipEncoding (  ) ;^212^213^214^^^205^231^[ADD] if  ( name == null )  { return new FallbackZipEncoding (  ) ; }^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return  new Simple8BitZipEncoding ( this.highChars )  ;^213^^^^^205^231^[REPLACE] return new FallbackZipEncoding (  ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^SimpleEncodingHolder h = ( SimpleEncodingHolder )  simpleEncodings .put ( null , null )  ;^216^217^^^^205^231^[REPLACE] SimpleEncodingHolder h = ( SimpleEncodingHolder )  simpleEncodings.get ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^if  ( h==null )  {^219^^^^^205^231^[REPLACE] if  ( h!=null )  {^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return h.getEncoding  (    )  ;  ;^220^^^^^205^231^[REPLACE] return h.getEncoding (  ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[ADD]^Charset cs = Charset.forName ( name ) ;return new NioZipEncoding ( cs ) ;^223^224^225^226^227^205^231^[ADD] try {  Charset cs = Charset.forName ( name ) ; return new NioZipEncoding ( cs ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return  new Simple8BitZipEncoding ( this.highChars )  ;^226^^^^^205^231^[REPLACE] return new NioZipEncoding ( cs ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[ADD]^^225^226^^228^229^205^231^[ADD] Charset cs = Charset.forName ( name ) ; return new NioZipEncoding ( cs ) ; } catch  ( UnsupportedCharsetException e )  { return new FallbackZipEncoding ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return  new Simple8BitZipEncoding ( this.highChars )  ;^229^^^^^205^231^[REPLACE] return new FallbackZipEncoding ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^SimpleEncodingHolder h =  (  ( SimpleEncodingHolder )   ( get ( name )  )  )  ;^225^^^^^205^231^[REPLACE] Charset cs = Charset.forName ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^private  char [] highChars;^39^^^^^^^[REPLACE] private final char [] highChars;^[METHOD] isUTF8 [TYPE] boolean [PARAMETER] String encoding [CLASS] SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  encoding  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
